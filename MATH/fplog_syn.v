// megafunction wizard: %ALTFP_LOG%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: ALTFP_LOG 

// ============================================================
// File Name: fplog.v
// Megafunction Name(s):
// 			ALTFP_LOG
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 16.1.0 Build 196 10/24/2016 SJ Lite Edition
// ************************************************************


//Copyright (C) 2016  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel MegaCore Function License Agreement, or other 
//applicable license agreement, including, without limitation, 
//that your use is for the sole purpose of programming logic 
//devices manufactured by Intel and sold by Intel or its 
//authorized distributors.  Please refer to the applicable 
//agreement for further details.


//altfp_log DEVICE_FAMILY="Cyclone V" PIPELINE=21 WIDTH_EXP=8 WIDTH_MAN=23 clock data nan result zero
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//altbarrel_shift DEVICE_FAMILY="Cyclone V" PIPELINE=1 SHIFTDIR="LEFT" WIDTH=32 WIDTHDIST=5 aclr clk_en clock data distance result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = reg 33 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altbarrel_shift
	( 
	aclr,
	clk_en,
	clock,
	data,
	distance,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [31:0]  data;
	input   [4:0]  distance;
	output   [31:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	dir_pipe;
	reg	[31:0]	sbit_piper1d;
	wire  [5:0]  dir_w;
	wire  direction_w;
	wire  [15:0]  pad_w;
	wire  [191:0]  sbit_w;
	wire  [4:0]  sel_w;
	wire  [159:0]  smux_w;

	// synopsys translate_off
	initial
		dir_pipe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dir_pipe <= 1'b0;
		else if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};
	// synopsys translate_off
	initial
		sbit_piper1d = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sbit_piper1d <= 32'b0;
		else if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[159:128];
	assign
		dir_w = {dir_pipe[0], dir_w[3:0], direction_w},
		direction_w = 1'b0,
		pad_w = {16{1'b0}},
		result = sbit_w[191:160],
		sbit_w = {sbit_piper1d, smux_w[127:0], data},
		sel_w = {distance[4:0]},
		smux_w = {((({32{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[143:128], pad_w[15:0]}) | ({32{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[159:144]})) | ({32{(~ sel_w[4])}} & sbit_w[159:128])), ((({32{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[119:96], pad_w[7:0]}) | ({32{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[127:104]})) | ({32{(~ sel_w[3])}} & sbit_w[127:96])), ((({32{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[91:64], pad_w[3:0]}) | ({32{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[95:68]})) | ({32{(~ sel_w[2])}} & sbit_w[95:64])), ((({32{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[61:32], pad_w[1:0]}) | ({32{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[63:34]})) | ({32{(~ sel_w[1])}} & sbit_w[63:32])), ((({32{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[30:0], pad_w[0]}) | ({32{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[31:1]})) | ({32{(~ sel_w[0])}} & sbit_w[31:0]))};
endmodule //fplog_altbarrel_shift


//altbarrel_shift DEVICE_FAMILY="Cyclone V" SHIFTDIR="LEFT" WIDTH=64 WIDTHDIST=6 data distance result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altbarrel_shift1
	( 
	data,
	distance,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [63:0]  data;
	input   [5:0]  distance;
	output   [63:0]  result;

	wire  [6:0]  dir_w;
	wire  direction_w;
	wire  [31:0]  pad_w;
	wire  [447:0]  sbit_w;
	wire  [5:0]  sel_w;
	wire  [383:0]  smux_w;

	assign
		dir_w = {dir_w[5:0], direction_w},
		direction_w = 1'b0,
		pad_w = {32{1'b0}},
		result = sbit_w[447:384],
		sbit_w = {smux_w[383:0], data},
		sel_w = {distance[5:0]},
		smux_w = {((({64{(sel_w[5] & (~ dir_w[5]))}} & {sbit_w[351:320], pad_w[31:0]}) | ({64{(sel_w[5] & dir_w[5])}} & {pad_w[31:0], sbit_w[383:352]})) | ({64{(~ sel_w[5])}} & sbit_w[383:320])), ((({64{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[303:256], pad_w[15:0]}) | ({64{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[319:272]})) | ({64{(~ sel_w[4])}} & sbit_w[319:256])), ((({64{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[247:192], pad_w[7:0]}) | ({64{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[255:200]})) | ({64{(~ sel_w[3])}} & sbit_w[255:192])), ((({64{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[187:128], pad_w[3:0]}) | ({64{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[191:132]})) | ({64{(~ sel_w[2])}} & sbit_w[191:128])), ((({64{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[125:64], pad_w[1:0]}) | ({64{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[127:66]})) | ({64{(~ sel_w[1])}} & sbit_w[127:64])), ((({64{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[62:0], pad_w[0]}) | ({64{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[63:1]})) | ({64{(~ sel_w[0])}} & sbit_w[63:0]))};
endmodule //fplog_altbarrel_shift1


//altbarrel_shift DEVICE_FAMILY="Cyclone V" PIPELINE=1 SHIFTDIR="RIGHT" WIDTH=32 WIDTHDIST=5 aclr clk_en clock data distance result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = reg 33 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altbarrel_shift12
	( 
	aclr,
	clk_en,
	clock,
	data,
	distance,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [31:0]  data;
	input   [4:0]  distance;
	output   [31:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	dir_pipe;
	reg	[31:0]	sbit_piper1d;
	wire  [5:0]  dir_w;
	wire  direction_w;
	wire  [15:0]  pad_w;
	wire  [191:0]  sbit_w;
	wire  [4:0]  sel_w;
	wire  [159:0]  smux_w;

	// synopsys translate_off
	initial
		dir_pipe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dir_pipe <= 1'b0;
		else if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};
	// synopsys translate_off
	initial
		sbit_piper1d = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sbit_piper1d <= 32'b0;
		else if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[159:128];
	assign
		dir_w = {dir_pipe[0], dir_w[3:0], direction_w},
		direction_w = 1'b1,
		pad_w = {16{1'b0}},
		result = sbit_w[191:160],
		sbit_w = {sbit_piper1d, smux_w[127:0], data},
		sel_w = {distance[4:0]},
		smux_w = {((({32{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[143:128], pad_w[15:0]}) | ({32{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[159:144]})) | ({32{(~ sel_w[4])}} & sbit_w[159:128])), ((({32{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[119:96], pad_w[7:0]}) | ({32{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[127:104]})) | ({32{(~ sel_w[3])}} & sbit_w[127:96])), ((({32{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[91:64], pad_w[3:0]}) | ({32{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[95:68]})) | ({32{(~ sel_w[2])}} & sbit_w[95:64])), ((({32{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[61:32], pad_w[1:0]}) | ({32{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[63:34]})) | ({32{(~ sel_w[1])}} & sbit_w[63:32])), ((({32{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[30:0], pad_w[0]}) | ({32{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[31:1]})) | ({32{(~ sel_w[0])}} & sbit_w[31:0]))};
endmodule //fplog_altbarrel_shift12


//altfp_log_and_or LUT_INPUT_COUNT=6 OPERATION="AND" PIPELINE=3 WIDTH=8 aclr clken clock data result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = reg 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_and_or
	( 
	aclr,
	clken,
	clock,
	data,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [7:0]  data;
	output   result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [7:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[1:0]	connection_dffe0;
	reg	[0:0]	connection_dffe1;
	reg	connection_dffe2;
	wire  [7:0]  connection_r0_w;
	wire  [1:0]  connection_r1_w;
	wire  [0:0]  connection_r2_w;
	wire  [7:0]  operation_r1_w;
	wire  [1:0]  operation_r2_w;

	// synopsys translate_off
	initial
		connection_dffe0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe0 <= 2'b0;
		else if  (clken == 1'b1)   connection_dffe0 <= {operation_r1_w[7], operation_r1_w[5]};
	// synopsys translate_off
	initial
		connection_dffe1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe1 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe1 <= {operation_r2_w[1]};
	// synopsys translate_off
	initial
		connection_dffe2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe2 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe2 <= connection_r2_w[0];
	assign
		connection_r0_w = data,
		connection_r1_w = connection_dffe0,
		connection_r2_w = connection_dffe1,
		operation_r1_w = {(operation_r1_w[6] & connection_r0_w[7]), connection_r0_w[6], (operation_r1_w[4] & connection_r0_w[5]), (operation_r1_w[3] & connection_r0_w[4]), (operation_r1_w[2] & connection_r0_w[3]), (operation_r1_w[1] & connection_r0_w[2]), (operation_r1_w[0] & connection_r0_w[1]), connection_r0_w[0]},
		operation_r2_w = {(operation_r2_w[0] & connection_r1_w[1]), connection_r1_w[0]},
		result = connection_dffe2;
endmodule //fplog_altfp_log_and_or


//altfp_log_and_or LUT_INPUT_COUNT=6 OPERATION="OR" PIPELINE=3 WIDTH=8 aclr clken clock data result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = reg 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_and_or1
	( 
	aclr,
	clken,
	clock,
	data,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [7:0]  data;
	output   result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [7:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[1:0]	connection_dffe0;
	reg	[0:0]	connection_dffe1;
	reg	connection_dffe2;
	wire  [7:0]  connection_r0_w;
	wire  [1:0]  connection_r1_w;
	wire  [0:0]  connection_r2_w;
	wire  [7:0]  operation_r1_w;
	wire  [1:0]  operation_r2_w;

	// synopsys translate_off
	initial
		connection_dffe0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe0 <= 2'b0;
		else if  (clken == 1'b1)   connection_dffe0 <= {operation_r1_w[7], operation_r1_w[5]};
	// synopsys translate_off
	initial
		connection_dffe1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe1 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe1 <= {operation_r2_w[1]};
	// synopsys translate_off
	initial
		connection_dffe2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe2 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe2 <= connection_r2_w[0];
	assign
		connection_r0_w = data,
		connection_r1_w = connection_dffe0,
		connection_r2_w = connection_dffe1,
		operation_r1_w = {(operation_r1_w[6] | connection_r0_w[7]), connection_r0_w[6], (operation_r1_w[4] | connection_r0_w[5]), (operation_r1_w[3] | connection_r0_w[4]), (operation_r1_w[2] | connection_r0_w[3]), (operation_r1_w[1] | connection_r0_w[2]), (operation_r1_w[0] | connection_r0_w[1]), connection_r0_w[0]},
		operation_r2_w = {(operation_r2_w[0] | connection_r1_w[1]), connection_r1_w[0]},
		result = connection_dffe2;
endmodule //fplog_altfp_log_and_or1


//altfp_log_and_or LUT_INPUT_COUNT=6 OPERATION="OR" PIPELINE=3 WIDTH=23 aclr clken clock data result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = reg 6 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_and_or12
	( 
	aclr,
	clken,
	clock,
	data,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [22:0]  data;
	output   result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [22:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[3:0]	connection_dffe0;
	reg	[0:0]	connection_dffe1;
	reg	connection_dffe2;
	wire  [22:0]  connection_r0_w;
	wire  [3:0]  connection_r1_w;
	wire  [0:0]  connection_r2_w;
	wire  [22:0]  operation_r1_w;
	wire  [3:0]  operation_r2_w;

	// synopsys translate_off
	initial
		connection_dffe0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe0 <= 4'b0;
		else if  (clken == 1'b1)   connection_dffe0 <= {operation_r1_w[22], operation_r1_w[17], operation_r1_w[11], operation_r1_w[5]};
	// synopsys translate_off
	initial
		connection_dffe1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe1 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe1 <= {operation_r2_w[3]};
	// synopsys translate_off
	initial
		connection_dffe2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) connection_dffe2 <= 1'b0;
		else if  (clken == 1'b1)   connection_dffe2 <= connection_r2_w[0];
	assign
		connection_r0_w = data,
		connection_r1_w = connection_dffe0,
		connection_r2_w = connection_dffe1,
		operation_r1_w = {(operation_r1_w[21] | connection_r0_w[22]), (operation_r1_w[20] | connection_r0_w[21]), (operation_r1_w[19] | connection_r0_w[20]), (operation_r1_w[18] | connection_r0_w[19]), connection_r0_w[18], (operation_r1_w[16] | connection_r0_w[17]), (operation_r1_w[15] | connection_r0_w[16]), (operation_r1_w[14] | connection_r0_w[15]), (operation_r1_w[13] | connection_r0_w[14]), (operation_r1_w[12] | connection_r0_w[13]), connection_r0_w[12], (operation_r1_w[10] | connection_r0_w[11]), (operation_r1_w[9] | connection_r0_w[10]), (operation_r1_w[8] | connection_r0_w[9]), (operation_r1_w[7] | connection_r0_w[8]), (operation_r1_w[6] | connection_r0_w[7]), connection_r0_w[6], (operation_r1_w[4] | connection_r0_w[5]), (operation_r1_w[3] | connection_r0_w[4]), (operation_r1_w[2] | connection_r0_w[3]), (operation_r1_w[1] | connection_r0_w[2]), (operation_r1_w[0] | connection_r0_w[1]), connection_r0_w[0]},
		operation_r2_w = {(operation_r2_w[2] | connection_r1_w[3]), (operation_r2_w[1] | connection_r1_w[2]), (operation_r2_w[0] | connection_r1_w[1]), connection_r1_w[0]},
		result = connection_dffe2;
endmodule //fplog_altfp_log_and_or12


//altfp_log_csa LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=39 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=20 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=19 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=19 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 58 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [38:0]  dataa;
	input   [38:0]  datab;
	output   [38:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [38:0]  dataa;
	tri0   [38:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[20:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[20:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[20:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[19:0]	wire_csa_lower_dataa;
	wire	[19:0]	wire_csa_lower_datab;
	wire	[19:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[18:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[18:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[19:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[18:0]	wire_csa_upper0_dataa;
	wire	[18:0]	wire_csa_upper0_datab;
	wire	[18:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[18:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[18:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[19:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[18:0]	wire_csa_upper1_dataa;
	wire	[18:0]	wire_csa_upper1_datab;
	wire	[18:0]	wire_csa_upper1_result;
	wire  [38:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa + wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 20'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[19:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[20:20],
		wire_csa_lower_pipeline_dffe_D[20:0] = wire_csa_lower_result_int;
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[19:0],
		wire_csa_lower_datab = datab[19:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, wire_csa_upper0_cin} + {wire_csa_upper0_datab, wire_csa_upper0_cin};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 19'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[18:0],
		wire_csa_upper0_pipeline_dffe_D[18:0] = wire_csa_upper0_result_int[19:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[38:20],
		wire_csa_upper0_datab = datab[38:20];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, wire_csa_upper1_cin} + {wire_csa_upper1_datab, wire_csa_upper1_cin};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 19'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[18:0],
		wire_csa_upper1_pipeline_dffe_D[18:0] = wire_csa_upper1_result_int[19:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[38:20],
		wire_csa_upper1_datab = datab[38:20];
	assign
		result = result_w,
		result_w = {(({19{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({19{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa


//altfp_log_csa LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=31 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=16 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 46 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa1
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [30:0]  dataa;
	input   [30:0]  datab;
	output   [30:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [30:0]  dataa;
	tri0   [30:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[16:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[16:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[16:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[15:0]	wire_csa_lower_dataa;
	wire	[15:0]	wire_csa_lower_datab;
	wire	[15:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[14:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[14:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[15:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[14:0]	wire_csa_upper0_dataa;
	wire	[14:0]	wire_csa_upper0_datab;
	wire	[14:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[14:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[14:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[15:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[14:0]	wire_csa_upper1_dataa;
	wire	[14:0]	wire_csa_upper1_datab;
	wire	[14:0]	wire_csa_upper1_result;
	wire  [30:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa + wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 16'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[15:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[16:16],
		wire_csa_lower_pipeline_dffe_D[16:0] = wire_csa_lower_result_int;
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[15:0],
		wire_csa_lower_datab = datab[15:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, wire_csa_upper0_cin} + {wire_csa_upper0_datab, wire_csa_upper0_cin};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[14:0],
		wire_csa_upper0_pipeline_dffe_D[14:0] = wire_csa_upper0_result_int[15:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[30:16],
		wire_csa_upper0_datab = datab[30:16];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, wire_csa_upper1_cin} + {wire_csa_upper1_datab, wire_csa_upper1_cin};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[14:0],
		wire_csa_upper1_pipeline_dffe_D[14:0] = wire_csa_upper1_result_int[15:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[30:16],
		wire_csa_upper1_datab = datab[30:16];
	assign
		result = result_w,
		result_w = {(({15{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({15{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa1


//altfp_log_csa CARRY_SELECT="NO" LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=8 dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=8 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa12
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  dataa;
	input   [7:0]  datab;
	output   [7:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [7:0]  dataa;
	tri0   [7:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[7:0]	wire_add_sub1_dataa;
	wire	[7:0]	wire_add_sub1_datab;
	wire	[7:0]	wire_add_sub1_result;
	wire  [7:0]  result_w;

	assign
		wire_add_sub1_result = wire_add_sub1_dataa - wire_add_sub1_datab;
	assign
		wire_add_sub1_dataa = dataa,
		wire_add_sub1_datab = datab;
	assign
		result = result_w,
		result_w = wire_add_sub1_result;
endmodule //fplog_altfp_log_csa12


//altfp_log_csa LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=12 dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=12 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 13 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa123
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [11:0]  dataa;
	input   [11:0]  datab;
	output   [11:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [11:0]  dataa;
	tri0   [11:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[11:0]	wire_add_sub2_dataa;
	wire	[11:0]	wire_add_sub2_datab;
	wire	[11:0]	wire_add_sub2_result;
	wire  [11:0]  result_w;

	assign
		wire_add_sub2_result = wire_add_sub2_dataa - wire_add_sub2_datab;
	assign
		wire_add_sub2_dataa = dataa,
		wire_add_sub2_datab = datab;
	assign
		result = result_w,
		result_w = wire_add_sub2_result;
endmodule //fplog_altfp_log_csa123


//altfp_log_csa CARRY_SELECT="NO" LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=6 dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=6 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 7 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa1234
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [5:0]  dataa;
	input   [5:0]  datab;
	output   [5:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [5:0]  dataa;
	tri0   [5:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[5:0]	wire_add_sub3_dataa;
	wire	[5:0]	wire_add_sub3_datab;
	wire	[5:0]	wire_add_sub3_result;
	wire  [5:0]  result_w;

	assign
		wire_add_sub3_result = wire_add_sub3_dataa - wire_add_sub3_datab;
	assign
		wire_add_sub3_dataa = dataa,
		wire_add_sub3_datab = datab;
	assign
		result = result_w,
		result_w = wire_add_sub3_result;
endmodule //fplog_altfp_log_csa1234


//altfp_log_csa CARRY_SELECT="NO" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 27 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa12345
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [25:0]  dataa;
	input   [25:0]  datab;
	output   [25:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [25:0]  dataa;
	tri0   [25:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[25:0]	wire_add_sub4_pipeline_dffe_Q;
	wire	[25:0]	wire_add_sub4_pipeline_dffe_D;
	wire	[25:0]	wire_add_sub4_result_int;
	wire	wire_add_sub4_aclr;
	wire	wire_add_sub4_clken;
	wire	wire_add_sub4_clock;
	wire	[25:0]	wire_add_sub4_dataa;
	wire	[25:0]	wire_add_sub4_datab;
	wire	[25:0]	wire_add_sub4_result;
	wire  [25:0]  result_w;

	assign
		wire_add_sub4_result_int = wire_add_sub4_dataa - wire_add_sub4_datab;
	//synopsys translate_off
	initial
		wire_add_sub4_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_add_sub4_clock or posedge wire_add_sub4_aclr)
		if (wire_add_sub4_aclr == 1'b1) wire_add_sub4_pipeline_dffe_Q <= 26'b0;
		else if (wire_add_sub4_clken == 1'b1) wire_add_sub4_pipeline_dffe_Q <= wire_add_sub4_pipeline_dffe_D;
	assign
		wire_add_sub4_result = wire_add_sub4_pipeline_dffe_Q[25:0],
		wire_add_sub4_pipeline_dffe_D[25:0] = wire_add_sub4_result_int;
	assign
		wire_add_sub4_aclr = aclr,
		wire_add_sub4_clken = clken,
		wire_add_sub4_clock = clock,
		wire_add_sub4_dataa = dataa,
		wire_add_sub4_datab = datab;
	assign
		result = result_w,
		result_w = wire_add_sub4_result;
endmodule //fplog_altfp_log_csa12345


//altfp_log_csa CARRY_SELECT="NO" LPM_DIRECTION="SUB" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=8 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=8 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 18 reg 17 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_add_sub
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [7:0]  dataa;
	input   [7:0]  datab;
	output   [7:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [7:0]  dataa;
	tri0   [7:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[7:0]	add_sub_cell_ffa;
	reg	[0:0]	inter_regrs_cin_ffa0;
	reg	[7:0]	pad_cell_ffa;
	wire  [0:0]   wire_add_sub_cella_0cout;
	wire  [0:0]   wire_add_sub_cella_1cout;
	wire  [0:0]   wire_add_sub_cella_2cout;
	wire  [0:0]   wire_add_sub_cella_3cout;
	wire  [0:0]   wire_add_sub_cella_4cout;
	wire  [0:0]   wire_add_sub_cella_5cout;
	wire  [0:0]   wire_add_sub_cella_6cout;
	wire  [7:0]   wire_add_sub_cella_datad;
	wire  [7:0]   wire_add_sub_cella_dataf;
	wire  [7:0]   wire_add_sub_cella_sumout;
	wire  [0:0]   wire_inter_regrs_cina_sumout;
	wire  [0:0]   wire_inter_regrs_couta_0cout;
	wire  [0:0]   wire_pad_cella_0cout;
	wire  [0:0]   wire_pad_cella_1cout;
	wire  [0:0]   wire_pad_cella_2cout;
	wire  [0:0]   wire_pad_cella_4cout;
	wire  [0:0]   wire_pad_cella_5cout;
	wire  [0:0]   wire_pad_cella_6cout;
	wire  [7:0]   wire_pad_cella_datad;
	wire  [7:0]   wire_pad_cella_sumout;

	// synopsys translate_off
	initial
		add_sub_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) add_sub_cell_ffa <= 8'b0;
		else if  (clken == 1'b1)   add_sub_cell_ffa <= wire_add_sub_cella_sumout;
	// synopsys translate_off
	initial
		inter_regrs_cin_ffa0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) inter_regrs_cin_ffa0 <= 1'b0;
		else if  (clken == 1'b1)   inter_regrs_cin_ffa0 <= wire_inter_regrs_cina_sumout[0:0];
	// synopsys translate_off
	initial
		pad_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) pad_cell_ffa <= 8'b0;
		else if  (clken == 1'b1)   pad_cell_ffa <= wire_pad_cella_sumout;
	cyclonev_lcell_comb   add_sub_cella_0
	( 
	.cin(1'b1),
	.combout(),
	.cout(wire_add_sub_cella_0cout[0:0]),
	.datad(wire_add_sub_cella_datad[0:0]),
	.dataf(wire_add_sub_cella_dataf[0:0]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_0.extended_lut = "off",
		add_sub_cella_0.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_0.shared_arith = "off",
		add_sub_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_1
	( 
	.cin(wire_add_sub_cella_0cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_1cout[0:0]),
	.datad(wire_add_sub_cella_datad[1:1]),
	.dataf(wire_add_sub_cella_dataf[1:1]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_1.extended_lut = "off",
		add_sub_cella_1.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_1.shared_arith = "off",
		add_sub_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_2
	( 
	.cin(wire_add_sub_cella_1cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_2cout[0:0]),
	.datad(wire_add_sub_cella_datad[2:2]),
	.dataf(wire_add_sub_cella_dataf[2:2]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_2.extended_lut = "off",
		add_sub_cella_2.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_2.shared_arith = "off",
		add_sub_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_3
	( 
	.cin(wire_add_sub_cella_2cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_3cout[0:0]),
	.datad(wire_add_sub_cella_datad[3:3]),
	.dataf(wire_add_sub_cella_dataf[3:3]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_3.extended_lut = "off",
		add_sub_cella_3.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_3.shared_arith = "off",
		add_sub_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_4
	( 
	.cin(1'b1),
	.combout(),
	.cout(wire_add_sub_cella_4cout[0:0]),
	.datad(wire_add_sub_cella_datad[4:4]),
	.dataf(wire_add_sub_cella_dataf[4:4]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_4.extended_lut = "off",
		add_sub_cella_4.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_4.shared_arith = "off",
		add_sub_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_5
	( 
	.cin(wire_add_sub_cella_4cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_5cout[0:0]),
	.datad(wire_add_sub_cella_datad[5:5]),
	.dataf(wire_add_sub_cella_dataf[5:5]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_5.extended_lut = "off",
		add_sub_cella_5.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_5.shared_arith = "off",
		add_sub_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_6
	( 
	.cin(wire_add_sub_cella_5cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_6cout[0:0]),
	.datad(wire_add_sub_cella_datad[6:6]),
	.dataf(wire_add_sub_cella_dataf[6:6]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_6.extended_lut = "off",
		add_sub_cella_6.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_6.shared_arith = "off",
		add_sub_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_7
	( 
	.cin(wire_add_sub_cella_6cout[0:0]),
	.combout(),
	.cout(),
	.datad(wire_add_sub_cella_datad[7:7]),
	.dataf(wire_add_sub_cella_dataf[7:7]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_7.extended_lut = "off",
		add_sub_cella_7.lut_mask = 64'h0000FF000000FF00,
		add_sub_cella_7.shared_arith = "off",
		add_sub_cella_7.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_add_sub_cella_datad = dataa,
		wire_add_sub_cella_dataf = datab;
	cyclonev_lcell_comb   inter_regrs_cina_0
	( 
	.cin(wire_add_sub_cella_3cout[0:0]),
	.combout(),
	.cout(),
	.dataa(1'b1),
	.shareout(),
	.sumout(wire_inter_regrs_cina_sumout[0:0]),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_cina_0.extended_lut = "off",
		inter_regrs_cina_0.lut_mask = 64'h0000AAAA00005555,
		inter_regrs_cina_0.shared_arith = "off",
		inter_regrs_cina_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   inter_regrs_couta_0
	( 
	.cin(1'b0),
	.combout(),
	.cout(wire_inter_regrs_couta_0cout[0:0]),
	.dataa(inter_regrs_cin_ffa0),
	.shareout(),
	.sumout(),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_couta_0.extended_lut = "off",
		inter_regrs_couta_0.lut_mask = 64'h000055550000AAAA,
		inter_regrs_couta_0.shared_arith = "off",
		inter_regrs_couta_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_0
	( 
	.cin(1'b1),
	.combout(),
	.cout(wire_pad_cella_0cout[0:0]),
	.datad(wire_pad_cella_datad[0:0]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_0.extended_lut = "off",
		pad_cella_0.lut_mask = 64'h0000FF000000FF00,
		pad_cella_0.shared_arith = "off",
		pad_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_1
	( 
	.cin(wire_pad_cella_0cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_1cout[0:0]),
	.datad(wire_pad_cella_datad[1:1]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_1.extended_lut = "off",
		pad_cella_1.lut_mask = 64'h0000FF000000FF00,
		pad_cella_1.shared_arith = "off",
		pad_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_2
	( 
	.cin(wire_pad_cella_1cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_2cout[0:0]),
	.datad(wire_pad_cella_datad[2:2]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_2.extended_lut = "off",
		pad_cella_2.lut_mask = 64'h0000FF000000FF00,
		pad_cella_2.shared_arith = "off",
		pad_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_3
	( 
	.cin(wire_pad_cella_2cout[0:0]),
	.combout(),
	.cout(),
	.datad(wire_pad_cella_datad[3:3]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_3.extended_lut = "off",
		pad_cella_3.lut_mask = 64'h0000FF000000FF00,
		pad_cella_3.shared_arith = "off",
		pad_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_4
	( 
	.cin(wire_inter_regrs_couta_0cout),
	.combout(),
	.cout(wire_pad_cella_4cout[0:0]),
	.datad(wire_pad_cella_datad[4:4]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_4.extended_lut = "off",
		pad_cella_4.lut_mask = 64'h0000FF000000FF00,
		pad_cella_4.shared_arith = "off",
		pad_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_5
	( 
	.cin(wire_pad_cella_4cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_5cout[0:0]),
	.datad(wire_pad_cella_datad[5:5]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_5.extended_lut = "off",
		pad_cella_5.lut_mask = 64'h0000FF000000FF00,
		pad_cella_5.shared_arith = "off",
		pad_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_6
	( 
	.cin(wire_pad_cella_5cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_6cout[0:0]),
	.datad(wire_pad_cella_datad[6:6]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_6.extended_lut = "off",
		pad_cella_6.lut_mask = 64'h0000FF000000FF00,
		pad_cella_6.shared_arith = "off",
		pad_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_7
	( 
	.cin(wire_pad_cella_6cout[0:0]),
	.combout(),
	.cout(),
	.datad(wire_pad_cella_datad[7:7]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_7.extended_lut = "off",
		pad_cella_7.lut_mask = 64'h0000FF000000FF00,
		pad_cella_7.shared_arith = "off",
		pad_cella_7.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_pad_cella_datad = {add_sub_cell_ffa};
	assign
		result = pad_cell_ffa[7:0];
endmodule //fplog_add_sub

//synthesis_resources = lut 18 reg 17 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa123456
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [7:0]  dataa;
	input   [7:0]  datab;
	output   [7:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [7:0]  dataa;
	tri0   [7:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [7:0]   wire_add_sub5_result;
	wire  [7:0]  result_w;

	fplog_add_sub   add_sub5
	( 
	.aclr(aclr),
	.clken(clken),
	.clock(clock),
	.dataa(dataa),
	.datab(datab),
	.result(wire_add_sub5_result));
	assign
		result = result_w,
		result_w = wire_add_sub5_result;
endmodule //fplog_altfp_log_csa123456


//altfp_log_rr_block DEVICE_FAMILY="Cyclone V" WIDTH_ALMOSTLOG=39 WIDTH_Y0=25 WIDTH_Z=26 a0_in aclr almostlog clk_en clock y0_in z
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//altfp_log_csa LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=29 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=14 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=14 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 43 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa1234567
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [28:0]  dataa;
	input   [28:0]  datab;
	output   [28:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [28:0]  dataa;
	tri0   [28:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[15:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[15:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[15:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[14:0]	wire_csa_lower_dataa;
	wire	[14:0]	wire_csa_lower_datab;
	wire	[14:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[14:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[13:0]	wire_csa_upper0_dataa;
	wire	[13:0]	wire_csa_upper0_datab;
	wire	[13:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[14:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[13:0]	wire_csa_upper1_dataa;
	wire	[13:0]	wire_csa_upper1_datab;
	wire	[13:0]	wire_csa_upper1_result;
	wire  [28:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa + wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[14:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[15:15],
		wire_csa_lower_pipeline_dffe_D[15:0] = wire_csa_lower_result_int;
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[14:0],
		wire_csa_lower_datab = datab[14:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, wire_csa_upper0_cin} + {wire_csa_upper0_datab, wire_csa_upper0_cin};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 14'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[13:0],
		wire_csa_upper0_pipeline_dffe_D[13:0] = wire_csa_upper0_result_int[14:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[28:15],
		wire_csa_upper0_datab = datab[28:15];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, wire_csa_upper1_cin} + {wire_csa_upper1_datab, wire_csa_upper1_cin};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 14'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[13:0],
		wire_csa_upper1_pipeline_dffe_D[13:0] = wire_csa_upper1_result_int[14:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[28:15],
		wire_csa_upper1_datab = datab[28:15];
	assign
		result = result_w,
		result_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa1234567


//altfp_log_csa LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 39 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa12345678
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [25:0]  dataa;
	input   [25:0]  datab;
	output   [25:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [25:0]  dataa;
	tri0   [25:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[13:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[12:0]	wire_csa_lower_dataa;
	wire	[12:0]	wire_csa_lower_datab;
	wire	[12:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[12:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[12:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[13:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[12:0]	wire_csa_upper0_dataa;
	wire	[12:0]	wire_csa_upper0_datab;
	wire	[12:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[12:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[12:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[13:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[12:0]	wire_csa_upper1_dataa;
	wire	[12:0]	wire_csa_upper1_datab;
	wire	[12:0]	wire_csa_upper1_result;
	wire  [25:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa + wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[12:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[13:13],
		wire_csa_lower_pipeline_dffe_D[13:0] = wire_csa_lower_result_int;
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[12:0],
		wire_csa_lower_datab = datab[12:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, wire_csa_upper0_cin} + {wire_csa_upper0_datab, wire_csa_upper0_cin};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[12:0],
		wire_csa_upper0_pipeline_dffe_D[12:0] = wire_csa_upper0_result_int[13:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[25:13],
		wire_csa_upper0_datab = datab[25:13];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, wire_csa_upper1_cin} + {wire_csa_upper1_datab, wire_csa_upper1_cin};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[12:0],
		wire_csa_upper1_pipeline_dffe_D[12:0] = wire_csa_upper1_result_int[13:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[25:13],
		wire_csa_upper1_datab = datab[25:13];
	assign
		result = result_w,
		result_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa12345678


//altfp_log_csa LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=31 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=16 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 49 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa123456789
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [30:0]  dataa;
	input   [30:0]  datab;
	output   [30:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [30:0]  dataa;
	tri0   [30:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[16:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[16:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[16:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[15:0]	wire_csa_lower_dataa;
	wire	[15:0]	wire_csa_lower_datab;
	wire	[15:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[14:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[14:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[15:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[14:0]	wire_csa_upper0_dataa;
	wire	[14:0]	wire_csa_upper0_datab;
	wire	[14:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[14:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[14:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[15:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[14:0]	wire_csa_upper1_dataa;
	wire	[14:0]	wire_csa_upper1_datab;
	wire	[14:0]	wire_csa_upper1_result;
	wire  [30:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa - wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 16'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[15:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[16:16],
		wire_csa_lower_pipeline_dffe_D[16:0] = {( ~ wire_csa_lower_result_int[16:16]), wire_csa_lower_result_int[15:0]};
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[15:0],
		wire_csa_lower_datab = datab[15:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, 1'b0} - {wire_csa_upper0_datab, ( !wire_csa_upper0_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[14:0],
		wire_csa_upper0_pipeline_dffe_D[14:0] = wire_csa_upper0_result_int[15:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[30:16],
		wire_csa_upper0_datab = datab[30:16];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, 1'b0} - {wire_csa_upper1_datab, ( !wire_csa_upper1_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[14:0],
		wire_csa_upper1_pipeline_dffe_D[14:0] = wire_csa_upper1_result_int[15:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[30:16],
		wire_csa_upper1_datab = datab[30:16];
	assign
		result = result_w,
		result_w = {(({15{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({15{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa123456789


//altfp_log_csa LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=29 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=15 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=14 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=14 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 46 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa12345678910
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [28:0]  dataa;
	input   [28:0]  datab;
	output   [28:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [28:0]  dataa;
	tri0   [28:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[15:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[15:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[15:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[14:0]	wire_csa_lower_dataa;
	wire	[14:0]	wire_csa_lower_datab;
	wire	[14:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[14:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[13:0]	wire_csa_upper0_dataa;
	wire	[13:0]	wire_csa_upper0_datab;
	wire	[13:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[14:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[13:0]	wire_csa_upper1_dataa;
	wire	[13:0]	wire_csa_upper1_datab;
	wire	[13:0]	wire_csa_upper1_result;
	wire  [28:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa - wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 15'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[14:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[15:15],
		wire_csa_lower_pipeline_dffe_D[15:0] = {( ~ wire_csa_lower_result_int[15:15]), wire_csa_lower_result_int[14:0]};
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[14:0],
		wire_csa_lower_datab = datab[14:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, 1'b0} - {wire_csa_upper0_datab, ( !wire_csa_upper0_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 14'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[13:0],
		wire_csa_upper0_pipeline_dffe_D[13:0] = wire_csa_upper0_result_int[14:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[28:15],
		wire_csa_upper0_datab = datab[28:15];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, 1'b0} - {wire_csa_upper1_datab, ( !wire_csa_upper1_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 14'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[13:0],
		wire_csa_upper1_pipeline_dffe_D[13:0] = wire_csa_upper1_result_int[14:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[28:15],
		wire_csa_upper1_datab = datab[28:15];
	assign
		result = result_w,
		result_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa12345678910


//altfp_log_csa LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_altbarrel_shift 2016:10:24:15:04:16:SJ cbx_altfp_log 2016:10:24:15:04:16:SJ cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr clken clock cout dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr cin clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 42 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log_csa1234567891011
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [25:0]  dataa;
	input   [25:0]  datab;
	output   [25:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [25:0]  dataa;
	tri0   [25:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[13:0]	wire_csa_lower_pipeline_dffe_Q;
	wire	[13:0]	wire_csa_lower_pipeline_dffe_D;
	wire	[13:0]	wire_csa_lower_result_int;
	wire	wire_csa_lower_aclr;
	wire	wire_csa_lower_clken;
	wire	wire_csa_lower_clock;
	wire	wire_csa_lower_cout;
	wire	[12:0]	wire_csa_lower_dataa;
	wire	[12:0]	wire_csa_lower_datab;
	wire	[12:0]	wire_csa_lower_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[12:0]	wire_csa_upper0_pipeline_dffe_Q;
	wire	[12:0]	wire_csa_upper0_pipeline_dffe_D;
	wire	[13:0]	wire_csa_upper0_result_int;
	wire	wire_csa_upper0_aclr;
	wire	wire_csa_upper0_cin;
	wire	wire_csa_upper0_clken;
	wire	wire_csa_upper0_clock;
	wire	[12:0]	wire_csa_upper0_dataa;
	wire	[12:0]	wire_csa_upper0_datab;
	wire	[12:0]	wire_csa_upper0_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	[12:0]	wire_csa_upper1_pipeline_dffe_Q;
	wire	[12:0]	wire_csa_upper1_pipeline_dffe_D;
	wire	[13:0]	wire_csa_upper1_result_int;
	wire	wire_csa_upper1_aclr;
	wire	wire_csa_upper1_cin;
	wire	wire_csa_upper1_clken;
	wire	wire_csa_upper1_clock;
	wire	[12:0]	wire_csa_upper1_dataa;
	wire	[12:0]	wire_csa_upper1_datab;
	wire	[12:0]	wire_csa_upper1_result;
	wire  [25:0]  result_w;

	assign
		wire_csa_lower_result_int = wire_csa_lower_dataa - wire_csa_lower_datab;
	//synopsys translate_off
	initial
		wire_csa_lower_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_lower_clock or posedge wire_csa_lower_aclr)
		if (wire_csa_lower_aclr == 1'b1) wire_csa_lower_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_lower_clken == 1'b1) wire_csa_lower_pipeline_dffe_Q <= wire_csa_lower_pipeline_dffe_D;
	assign
		wire_csa_lower_result = wire_csa_lower_pipeline_dffe_Q[12:0],
		wire_csa_lower_cout = wire_csa_lower_pipeline_dffe_Q[13:13],
		wire_csa_lower_pipeline_dffe_D[13:0] = {( ~ wire_csa_lower_result_int[13:13]), wire_csa_lower_result_int[12:0]};
	assign
		wire_csa_lower_aclr = aclr,
		wire_csa_lower_clken = clken,
		wire_csa_lower_clock = clock,
		wire_csa_lower_dataa = dataa[12:0],
		wire_csa_lower_datab = datab[12:0];
	assign
		wire_csa_upper0_result_int = {wire_csa_upper0_dataa, 1'b0} - {wire_csa_upper0_datab, ( !wire_csa_upper0_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper0_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper0_clock or posedge wire_csa_upper0_aclr)
		if (wire_csa_upper0_aclr == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_upper0_clken == 1'b1) wire_csa_upper0_pipeline_dffe_Q <= wire_csa_upper0_pipeline_dffe_D;
	assign
		wire_csa_upper0_result = wire_csa_upper0_pipeline_dffe_Q[12:0],
		wire_csa_upper0_pipeline_dffe_D[12:0] = wire_csa_upper0_result_int[13:1];
	assign
		wire_csa_upper0_aclr = aclr,
		wire_csa_upper0_cin = 1'b0,
		wire_csa_upper0_clken = clken,
		wire_csa_upper0_clock = clock,
		wire_csa_upper0_dataa = dataa[25:13],
		wire_csa_upper0_datab = datab[25:13];
	assign
		wire_csa_upper1_result_int = {wire_csa_upper1_dataa, 1'b0} - {wire_csa_upper1_datab, ( !wire_csa_upper1_cin )};
	//synopsys translate_off
	initial
		wire_csa_upper1_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_csa_upper1_clock or posedge wire_csa_upper1_aclr)
		if (wire_csa_upper1_aclr == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= 13'b0;
		else if (wire_csa_upper1_clken == 1'b1) wire_csa_upper1_pipeline_dffe_Q <= wire_csa_upper1_pipeline_dffe_D;
	assign
		wire_csa_upper1_result = wire_csa_upper1_pipeline_dffe_Q[12:0],
		wire_csa_upper1_pipeline_dffe_D[12:0] = wire_csa_upper1_result_int[13:1];
	assign
		wire_csa_upper1_aclr = aclr,
		wire_csa_upper1_cin = 1'b1,
		wire_csa_upper1_clken = clken,
		wire_csa_upper1_clock = clock,
		wire_csa_upper1_dataa = dataa[25:13],
		wire_csa_upper1_datab = datab[25:13];
	assign
		result = result_w,
		result_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};
endmodule //fplog_altfp_log_csa1234567891011


//lpm_mult DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=6 LPM_WIDTHB=25 LPM_WIDTHP=31 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mult
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [5:0]  dataa;
	input   [24:0]  datab;
	output   [30:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg  [5:0]  dataa_input_reg;
	reg  [24:0]  datab_input_reg;
	reg  [30:0]  result_output_reg;
	wire [5:0]    dataa_wire;
	wire [24:0]    datab_wire;
	wire [30:0]    result_wire;


	// synopsys translate_off
	initial
		dataa_input_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			dataa_input_reg <= 6'b0;
		else
			if (clken == 1'b1)
				dataa_input_reg <= dataa;
	// synopsys translate_off
	initial
		datab_input_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			datab_input_reg <= 25'b0;
		else
			if (clken == 1'b1)
				datab_input_reg <= datab;
	// synopsys translate_off
	initial
		result_output_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			result_output_reg <= 31'b0;
		else
			if (clken == 1'b1)
				result_output_reg <= result_wire[30:0];

	assign dataa_wire = dataa_input_reg;
	assign datab_wire = datab_input_reg;
	assign result_wire = dataa_wire * datab_wire;
	assign result = ({result_output_reg});

endmodule //fplog_mult


//lpm_mult DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=4 LPM_WIDTHB=25 LPM_WIDTHP=29 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=28 dataa datab datac result
//VERSION_BEGIN 16.1 cbx_mgl 2016:10:24:15:05:03:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=26 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 108 reg 54 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mult1
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [3:0]  dataa;
	input   [24:0]  datab;
	output   [28:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[27:0]	wire_add64_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe10;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe11;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe12;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe13;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe14;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe15;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe16;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe17;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe18;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe19;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe20;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe21;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe22;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe23;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe24;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe25;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe26;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe27;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe28;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe29;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe30;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe31;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe32;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe33;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe34;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe35;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe36;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe37;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe38;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe39;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe40;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe41;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe42;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe43;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe44;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe45;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe46;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe47;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe48;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe49;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe50;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe51;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe52;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe53;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe54;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe55;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe56;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe57;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe58;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe59;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe60;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe61;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe62;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe63;
	wire	[25:0]	wire_sum_adder9aa_0dataa;
	wire	[25:0]	wire_sum_adder9aa_0datab;
	wire	[25:0]	wire_sum_adder9aa_0result;
	wire	[25:0]	wire_sum_adder9aa_1dataa;
	wire	[25:0]	wire_sum_adder9aa_1datab;
	wire	[25:0]	wire_sum_adder9aa_1result;
	wire  [27:0]   wire_sft65a_in;
	wire  [27:0]   wire_sft65a_out;
	wire  [27:0]   wire_sft66a_in;
	wire  [27:0]   wire_sft66a_out;
	wire  [27:0]   wire_sft67a_in;
	wire  [27:0]   wire_sft67a_out;
	wire  [27:0]   wire_sft68a_in;
	wire  [27:0]   wire_sft68a_out;
	wire  [24:0]  dataa_node;
	wire  [3:0]  datab_node;
	wire  [28:0]  final_result_node;
	wire  w1388w;
	wire  [29:0]  w1498w;
	wire  [99:0]  w_decoder_node1253w;
	wire  [3:0]  w_le_datab_node1252w;
	wire  [53:0]  w_sum_node1254w;

	assign
		wire_add64_result = wire_sft65a_out + wire_sft66a_out + wire_sft67a_out;
	// synopsys translate_off
	initial
		dffe10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe10 <= 1'b0;
		else if  (clken == 1'b1)   dffe10 <= w_sum_node1254w[0];
	// synopsys translate_off
	initial
		dffe11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe11 <= 1'b0;
		else if  (clken == 1'b1)   dffe11 <= w_sum_node1254w[1];
	// synopsys translate_off
	initial
		dffe12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe12 <= 1'b0;
		else if  (clken == 1'b1)   dffe12 <= w_sum_node1254w[2];
	// synopsys translate_off
	initial
		dffe13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe13 <= 1'b0;
		else if  (clken == 1'b1)   dffe13 <= w_sum_node1254w[27];
	// synopsys translate_off
	initial
		dffe14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe14 <= 1'b0;
		else if  (clken == 1'b1)   dffe14 <= w_sum_node1254w[3];
	// synopsys translate_off
	initial
		dffe15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe15 <= 1'b0;
		else if  (clken == 1'b1)   dffe15 <= w_sum_node1254w[28];
	// synopsys translate_off
	initial
		dffe16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe16 <= 1'b0;
		else if  (clken == 1'b1)   dffe16 <= w_sum_node1254w[4];
	// synopsys translate_off
	initial
		dffe17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe17 <= 1'b0;
		else if  (clken == 1'b1)   dffe17 <= w_sum_node1254w[29];
	// synopsys translate_off
	initial
		dffe18 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe18 <= 1'b0;
		else if  (clken == 1'b1)   dffe18 <= w_sum_node1254w[5];
	// synopsys translate_off
	initial
		dffe19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe19 <= 1'b0;
		else if  (clken == 1'b1)   dffe19 <= w_sum_node1254w[30];
	// synopsys translate_off
	initial
		dffe20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe20 <= 1'b0;
		else if  (clken == 1'b1)   dffe20 <= w_sum_node1254w[6];
	// synopsys translate_off
	initial
		dffe21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe21 <= 1'b0;
		else if  (clken == 1'b1)   dffe21 <= w_sum_node1254w[31];
	// synopsys translate_off
	initial
		dffe22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe22 <= 1'b0;
		else if  (clken == 1'b1)   dffe22 <= w_sum_node1254w[7];
	// synopsys translate_off
	initial
		dffe23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe23 <= 1'b0;
		else if  (clken == 1'b1)   dffe23 <= w_sum_node1254w[32];
	// synopsys translate_off
	initial
		dffe24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe24 <= 1'b0;
		else if  (clken == 1'b1)   dffe24 <= w_sum_node1254w[8];
	// synopsys translate_off
	initial
		dffe25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe25 <= 1'b0;
		else if  (clken == 1'b1)   dffe25 <= w_sum_node1254w[33];
	// synopsys translate_off
	initial
		dffe26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe26 <= 1'b0;
		else if  (clken == 1'b1)   dffe26 <= w_sum_node1254w[9];
	// synopsys translate_off
	initial
		dffe27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe27 <= 1'b0;
		else if  (clken == 1'b1)   dffe27 <= w_sum_node1254w[34];
	// synopsys translate_off
	initial
		dffe28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe28 <= 1'b0;
		else if  (clken == 1'b1)   dffe28 <= w_sum_node1254w[10];
	// synopsys translate_off
	initial
		dffe29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe29 <= 1'b0;
		else if  (clken == 1'b1)   dffe29 <= w_sum_node1254w[35];
	// synopsys translate_off
	initial
		dffe30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe30 <= 1'b0;
		else if  (clken == 1'b1)   dffe30 <= w_sum_node1254w[11];
	// synopsys translate_off
	initial
		dffe31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe31 <= 1'b0;
		else if  (clken == 1'b1)   dffe31 <= w_sum_node1254w[36];
	// synopsys translate_off
	initial
		dffe32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe32 <= 1'b0;
		else if  (clken == 1'b1)   dffe32 <= w_sum_node1254w[12];
	// synopsys translate_off
	initial
		dffe33 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe33 <= 1'b0;
		else if  (clken == 1'b1)   dffe33 <= w_sum_node1254w[37];
	// synopsys translate_off
	initial
		dffe34 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe34 <= 1'b0;
		else if  (clken == 1'b1)   dffe34 <= w_sum_node1254w[13];
	// synopsys translate_off
	initial
		dffe35 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe35 <= 1'b0;
		else if  (clken == 1'b1)   dffe35 <= w_sum_node1254w[38];
	// synopsys translate_off
	initial
		dffe36 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe36 <= 1'b0;
		else if  (clken == 1'b1)   dffe36 <= w_sum_node1254w[14];
	// synopsys translate_off
	initial
		dffe37 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe37 <= 1'b0;
		else if  (clken == 1'b1)   dffe37 <= w_sum_node1254w[39];
	// synopsys translate_off
	initial
		dffe38 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe38 <= 1'b0;
		else if  (clken == 1'b1)   dffe38 <= w_sum_node1254w[15];
	// synopsys translate_off
	initial
		dffe39 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe39 <= 1'b0;
		else if  (clken == 1'b1)   dffe39 <= w_sum_node1254w[40];
	// synopsys translate_off
	initial
		dffe40 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe40 <= 1'b0;
		else if  (clken == 1'b1)   dffe40 <= w_sum_node1254w[16];
	// synopsys translate_off
	initial
		dffe41 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe41 <= 1'b0;
		else if  (clken == 1'b1)   dffe41 <= w_sum_node1254w[41];
	// synopsys translate_off
	initial
		dffe42 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe42 <= 1'b0;
		else if  (clken == 1'b1)   dffe42 <= w_sum_node1254w[17];
	// synopsys translate_off
	initial
		dffe43 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe43 <= 1'b0;
		else if  (clken == 1'b1)   dffe43 <= w_sum_node1254w[42];
	// synopsys translate_off
	initial
		dffe44 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe44 <= 1'b0;
		else if  (clken == 1'b1)   dffe44 <= w_sum_node1254w[18];
	// synopsys translate_off
	initial
		dffe45 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe45 <= 1'b0;
		else if  (clken == 1'b1)   dffe45 <= w_sum_node1254w[43];
	// synopsys translate_off
	initial
		dffe46 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe46 <= 1'b0;
		else if  (clken == 1'b1)   dffe46 <= w_sum_node1254w[19];
	// synopsys translate_off
	initial
		dffe47 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe47 <= 1'b0;
		else if  (clken == 1'b1)   dffe47 <= w_sum_node1254w[44];
	// synopsys translate_off
	initial
		dffe48 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe48 <= 1'b0;
		else if  (clken == 1'b1)   dffe48 <= w_sum_node1254w[20];
	// synopsys translate_off
	initial
		dffe49 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe49 <= 1'b0;
		else if  (clken == 1'b1)   dffe49 <= w_sum_node1254w[45];
	// synopsys translate_off
	initial
		dffe50 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe50 <= 1'b0;
		else if  (clken == 1'b1)   dffe50 <= w_sum_node1254w[21];
	// synopsys translate_off
	initial
		dffe51 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe51 <= 1'b0;
		else if  (clken == 1'b1)   dffe51 <= w_sum_node1254w[46];
	// synopsys translate_off
	initial
		dffe52 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe52 <= 1'b0;
		else if  (clken == 1'b1)   dffe52 <= w_sum_node1254w[22];
	// synopsys translate_off
	initial
		dffe53 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe53 <= 1'b0;
		else if  (clken == 1'b1)   dffe53 <= w_sum_node1254w[47];
	// synopsys translate_off
	initial
		dffe54 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe54 <= 1'b0;
		else if  (clken == 1'b1)   dffe54 <= w_sum_node1254w[23];
	// synopsys translate_off
	initial
		dffe55 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe55 <= 1'b0;
		else if  (clken == 1'b1)   dffe55 <= w_sum_node1254w[48];
	// synopsys translate_off
	initial
		dffe56 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe56 <= 1'b0;
		else if  (clken == 1'b1)   dffe56 <= w_sum_node1254w[24];
	// synopsys translate_off
	initial
		dffe57 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe57 <= 1'b0;
		else if  (clken == 1'b1)   dffe57 <= w_sum_node1254w[49];
	// synopsys translate_off
	initial
		dffe58 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe58 <= 1'b0;
		else if  (clken == 1'b1)   dffe58 <= w_sum_node1254w[25];
	// synopsys translate_off
	initial
		dffe59 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe59 <= 1'b0;
		else if  (clken == 1'b1)   dffe59 <= w_sum_node1254w[50];
	// synopsys translate_off
	initial
		dffe60 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe60 <= 1'b0;
		else if  (clken == 1'b1)   dffe60 <= w_sum_node1254w[26];
	// synopsys translate_off
	initial
		dffe61 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe61 <= 1'b0;
		else if  (clken == 1'b1)   dffe61 <= w_sum_node1254w[51];
	// synopsys translate_off
	initial
		dffe62 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe62 <= 1'b0;
		else if  (clken == 1'b1)   dffe62 <= w_sum_node1254w[52];
	// synopsys translate_off
	initial
		dffe63 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe63 <= 1'b0;
		else if  (clken == 1'b1)   dffe63 <= w_sum_node1254w[53];
	assign
		wire_sum_adder9aa_0result = wire_sum_adder9aa_0dataa + wire_sum_adder9aa_0datab;
	assign
		wire_sum_adder9aa_0dataa = {1'b0, w_decoder_node1253w[49:25]},
		wire_sum_adder9aa_0datab = {{2{1'b0}}, w_decoder_node1253w[24:1]};
	assign
		wire_sum_adder9aa_1result = wire_sum_adder9aa_1dataa + wire_sum_adder9aa_1datab;
	assign
		wire_sum_adder9aa_1dataa = {1'b0, w_decoder_node1253w[99:75]},
		wire_sum_adder9aa_1datab = {{2{1'b0}}, w_decoder_node1253w[74:51]};
	soft   sft65a_0
	( 
	.in(wire_sft65a_in[0:0]),
	.out(wire_sft65a_out[0:0]));
	soft   sft65a_1
	( 
	.in(wire_sft65a_in[1:1]),
	.out(wire_sft65a_out[1:1]));
	soft   sft65a_2
	( 
	.in(wire_sft65a_in[2:2]),
	.out(wire_sft65a_out[2:2]));
	soft   sft65a_3
	( 
	.in(wire_sft65a_in[3:3]),
	.out(wire_sft65a_out[3:3]));
	soft   sft65a_4
	( 
	.in(wire_sft65a_in[4:4]),
	.out(wire_sft65a_out[4:4]));
	soft   sft65a_5
	( 
	.in(wire_sft65a_in[5:5]),
	.out(wire_sft65a_out[5:5]));
	soft   sft65a_6
	( 
	.in(wire_sft65a_in[6:6]),
	.out(wire_sft65a_out[6:6]));
	soft   sft65a_7
	( 
	.in(wire_sft65a_in[7:7]),
	.out(wire_sft65a_out[7:7]));
	soft   sft65a_8
	( 
	.in(wire_sft65a_in[8:8]),
	.out(wire_sft65a_out[8:8]));
	soft   sft65a_9
	( 
	.in(wire_sft65a_in[9:9]),
	.out(wire_sft65a_out[9:9]));
	soft   sft65a_10
	( 
	.in(wire_sft65a_in[10:10]),
	.out(wire_sft65a_out[10:10]));
	soft   sft65a_11
	( 
	.in(wire_sft65a_in[11:11]),
	.out(wire_sft65a_out[11:11]));
	soft   sft65a_12
	( 
	.in(wire_sft65a_in[12:12]),
	.out(wire_sft65a_out[12:12]));
	soft   sft65a_13
	( 
	.in(wire_sft65a_in[13:13]),
	.out(wire_sft65a_out[13:13]));
	soft   sft65a_14
	( 
	.in(wire_sft65a_in[14:14]),
	.out(wire_sft65a_out[14:14]));
	soft   sft65a_15
	( 
	.in(wire_sft65a_in[15:15]),
	.out(wire_sft65a_out[15:15]));
	soft   sft65a_16
	( 
	.in(wire_sft65a_in[16:16]),
	.out(wire_sft65a_out[16:16]));
	soft   sft65a_17
	( 
	.in(wire_sft65a_in[17:17]),
	.out(wire_sft65a_out[17:17]));
	soft   sft65a_18
	( 
	.in(wire_sft65a_in[18:18]),
	.out(wire_sft65a_out[18:18]));
	soft   sft65a_19
	( 
	.in(wire_sft65a_in[19:19]),
	.out(wire_sft65a_out[19:19]));
	soft   sft65a_20
	( 
	.in(wire_sft65a_in[20:20]),
	.out(wire_sft65a_out[20:20]));
	soft   sft65a_21
	( 
	.in(wire_sft65a_in[21:21]),
	.out(wire_sft65a_out[21:21]));
	soft   sft65a_22
	( 
	.in(wire_sft65a_in[22:22]),
	.out(wire_sft65a_out[22:22]));
	soft   sft65a_23
	( 
	.in(wire_sft65a_in[23:23]),
	.out(wire_sft65a_out[23:23]));
	soft   sft65a_24
	( 
	.in(wire_sft65a_in[24:24]),
	.out(wire_sft65a_out[24:24]));
	soft   sft65a_25
	( 
	.in(wire_sft65a_in[25:25]),
	.out(wire_sft65a_out[25:25]));
	soft   sft65a_26
	( 
	.in(wire_sft65a_in[26:26]),
	.out(wire_sft65a_out[26:26]));
	soft   sft65a_27
	( 
	.in(wire_sft65a_in[27:27]),
	.out(wire_sft65a_out[27:27]));
	assign
		wire_sft65a_in = {w1388w, {dffe63, {dffe62, {dffe60, {dffe58, {dffe56, {dffe54, {dffe52, {dffe50, {dffe48, {dffe46, {dffe44, {dffe42, {dffe40, {dffe38, {dffe36, {dffe34, {dffe32, {dffe30, {dffe28, {dffe26, {dffe24, {dffe22, {dffe20, {dffe18, {dffe16, {dffe14, dffe12}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft66a_0
	( 
	.in(wire_sft66a_in[0:0]),
	.out(wire_sft66a_out[0:0]));
	soft   sft66a_1
	( 
	.in(wire_sft66a_in[1:1]),
	.out(wire_sft66a_out[1:1]));
	soft   sft66a_2
	( 
	.in(wire_sft66a_in[2:2]),
	.out(wire_sft66a_out[2:2]));
	soft   sft66a_3
	( 
	.in(wire_sft66a_in[3:3]),
	.out(wire_sft66a_out[3:3]));
	soft   sft66a_4
	( 
	.in(wire_sft66a_in[4:4]),
	.out(wire_sft66a_out[4:4]));
	soft   sft66a_5
	( 
	.in(wire_sft66a_in[5:5]),
	.out(wire_sft66a_out[5:5]));
	soft   sft66a_6
	( 
	.in(wire_sft66a_in[6:6]),
	.out(wire_sft66a_out[6:6]));
	soft   sft66a_7
	( 
	.in(wire_sft66a_in[7:7]),
	.out(wire_sft66a_out[7:7]));
	soft   sft66a_8
	( 
	.in(wire_sft66a_in[8:8]),
	.out(wire_sft66a_out[8:8]));
	soft   sft66a_9
	( 
	.in(wire_sft66a_in[9:9]),
	.out(wire_sft66a_out[9:9]));
	soft   sft66a_10
	( 
	.in(wire_sft66a_in[10:10]),
	.out(wire_sft66a_out[10:10]));
	soft   sft66a_11
	( 
	.in(wire_sft66a_in[11:11]),
	.out(wire_sft66a_out[11:11]));
	soft   sft66a_12
	( 
	.in(wire_sft66a_in[12:12]),
	.out(wire_sft66a_out[12:12]));
	soft   sft66a_13
	( 
	.in(wire_sft66a_in[13:13]),
	.out(wire_sft66a_out[13:13]));
	soft   sft66a_14
	( 
	.in(wire_sft66a_in[14:14]),
	.out(wire_sft66a_out[14:14]));
	soft   sft66a_15
	( 
	.in(wire_sft66a_in[15:15]),
	.out(wire_sft66a_out[15:15]));
	soft   sft66a_16
	( 
	.in(wire_sft66a_in[16:16]),
	.out(wire_sft66a_out[16:16]));
	soft   sft66a_17
	( 
	.in(wire_sft66a_in[17:17]),
	.out(wire_sft66a_out[17:17]));
	soft   sft66a_18
	( 
	.in(wire_sft66a_in[18:18]),
	.out(wire_sft66a_out[18:18]));
	soft   sft66a_19
	( 
	.in(wire_sft66a_in[19:19]),
	.out(wire_sft66a_out[19:19]));
	soft   sft66a_20
	( 
	.in(wire_sft66a_in[20:20]),
	.out(wire_sft66a_out[20:20]));
	soft   sft66a_21
	( 
	.in(wire_sft66a_in[21:21]),
	.out(wire_sft66a_out[21:21]));
	soft   sft66a_22
	( 
	.in(wire_sft66a_in[22:22]),
	.out(wire_sft66a_out[22:22]));
	soft   sft66a_23
	( 
	.in(wire_sft66a_in[23:23]),
	.out(wire_sft66a_out[23:23]));
	soft   sft66a_24
	( 
	.in(wire_sft66a_in[24:24]),
	.out(wire_sft66a_out[24:24]));
	soft   sft66a_25
	( 
	.in(wire_sft66a_in[25:25]),
	.out(wire_sft66a_out[25:25]));
	soft   sft66a_26
	( 
	.in(wire_sft66a_in[26:26]),
	.out(wire_sft66a_out[26:26]));
	soft   sft66a_27
	( 
	.in(wire_sft66a_in[27:27]),
	.out(wire_sft66a_out[27:27]));
	assign
		wire_sft66a_in = {w1388w, {w1388w, {w1388w, {dffe61, {dffe59, {dffe57, {dffe55, {dffe53, {dffe51, {dffe49, {dffe47, {dffe45, {dffe43, {dffe41, {dffe39, {dffe37, {dffe35, {dffe33, {dffe31, {dffe29, {dffe27, {dffe25, {dffe23, {dffe21, {dffe19, {dffe17, {dffe15, dffe13}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft67a_0
	( 
	.in(wire_sft67a_in[0:0]),
	.out(wire_sft67a_out[0:0]));
	soft   sft67a_1
	( 
	.in(wire_sft67a_in[1:1]),
	.out(wire_sft67a_out[1:1]));
	soft   sft67a_2
	( 
	.in(wire_sft67a_in[2:2]),
	.out(wire_sft67a_out[2:2]));
	soft   sft67a_3
	( 
	.in(wire_sft67a_in[3:3]),
	.out(wire_sft67a_out[3:3]));
	soft   sft67a_4
	( 
	.in(wire_sft67a_in[4:4]),
	.out(wire_sft67a_out[4:4]));
	soft   sft67a_5
	( 
	.in(wire_sft67a_in[5:5]),
	.out(wire_sft67a_out[5:5]));
	soft   sft67a_6
	( 
	.in(wire_sft67a_in[6:6]),
	.out(wire_sft67a_out[6:6]));
	soft   sft67a_7
	( 
	.in(wire_sft67a_in[7:7]),
	.out(wire_sft67a_out[7:7]));
	soft   sft67a_8
	( 
	.in(wire_sft67a_in[8:8]),
	.out(wire_sft67a_out[8:8]));
	soft   sft67a_9
	( 
	.in(wire_sft67a_in[9:9]),
	.out(wire_sft67a_out[9:9]));
	soft   sft67a_10
	( 
	.in(wire_sft67a_in[10:10]),
	.out(wire_sft67a_out[10:10]));
	soft   sft67a_11
	( 
	.in(wire_sft67a_in[11:11]),
	.out(wire_sft67a_out[11:11]));
	soft   sft67a_12
	( 
	.in(wire_sft67a_in[12:12]),
	.out(wire_sft67a_out[12:12]));
	soft   sft67a_13
	( 
	.in(wire_sft67a_in[13:13]),
	.out(wire_sft67a_out[13:13]));
	soft   sft67a_14
	( 
	.in(wire_sft67a_in[14:14]),
	.out(wire_sft67a_out[14:14]));
	soft   sft67a_15
	( 
	.in(wire_sft67a_in[15:15]),
	.out(wire_sft67a_out[15:15]));
	soft   sft67a_16
	( 
	.in(wire_sft67a_in[16:16]),
	.out(wire_sft67a_out[16:16]));
	soft   sft67a_17
	( 
	.in(wire_sft67a_in[17:17]),
	.out(wire_sft67a_out[17:17]));
	soft   sft67a_18
	( 
	.in(wire_sft67a_in[18:18]),
	.out(wire_sft67a_out[18:18]));
	soft   sft67a_19
	( 
	.in(wire_sft67a_in[19:19]),
	.out(wire_sft67a_out[19:19]));
	soft   sft67a_20
	( 
	.in(wire_sft67a_in[20:20]),
	.out(wire_sft67a_out[20:20]));
	soft   sft67a_21
	( 
	.in(wire_sft67a_in[21:21]),
	.out(wire_sft67a_out[21:21]));
	soft   sft67a_22
	( 
	.in(wire_sft67a_in[22:22]),
	.out(wire_sft67a_out[22:22]));
	soft   sft67a_23
	( 
	.in(wire_sft67a_in[23:23]),
	.out(wire_sft67a_out[23:23]));
	soft   sft67a_24
	( 
	.in(wire_sft67a_in[24:24]),
	.out(wire_sft67a_out[24:24]));
	soft   sft67a_25
	( 
	.in(wire_sft67a_in[25:25]),
	.out(wire_sft67a_out[25:25]));
	soft   sft67a_26
	( 
	.in(wire_sft67a_in[26:26]),
	.out(wire_sft67a_out[26:26]));
	soft   sft67a_27
	( 
	.in(wire_sft67a_in[27:27]),
	.out(wire_sft67a_out[27:27]));
	assign
		wire_sft67a_in = {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {w1388w, {2{w1388w}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft68a_0
	( 
	.in(wire_sft68a_in[0:0]),
	.out(wire_sft68a_out[0:0]));
	soft   sft68a_1
	( 
	.in(wire_sft68a_in[1:1]),
	.out(wire_sft68a_out[1:1]));
	soft   sft68a_2
	( 
	.in(wire_sft68a_in[2:2]),
	.out(wire_sft68a_out[2:2]));
	soft   sft68a_3
	( 
	.in(wire_sft68a_in[3:3]),
	.out(wire_sft68a_out[3:3]));
	soft   sft68a_4
	( 
	.in(wire_sft68a_in[4:4]),
	.out(wire_sft68a_out[4:4]));
	soft   sft68a_5
	( 
	.in(wire_sft68a_in[5:5]),
	.out(wire_sft68a_out[5:5]));
	soft   sft68a_6
	( 
	.in(wire_sft68a_in[6:6]),
	.out(wire_sft68a_out[6:6]));
	soft   sft68a_7
	( 
	.in(wire_sft68a_in[7:7]),
	.out(wire_sft68a_out[7:7]));
	soft   sft68a_8
	( 
	.in(wire_sft68a_in[8:8]),
	.out(wire_sft68a_out[8:8]));
	soft   sft68a_9
	( 
	.in(wire_sft68a_in[9:9]),
	.out(wire_sft68a_out[9:9]));
	soft   sft68a_10
	( 
	.in(wire_sft68a_in[10:10]),
	.out(wire_sft68a_out[10:10]));
	soft   sft68a_11
	( 
	.in(wire_sft68a_in[11:11]),
	.out(wire_sft68a_out[11:11]));
	soft   sft68a_12
	( 
	.in(wire_sft68a_in[12:12]),
	.out(wire_sft68a_out[12:12]));
	soft   sft68a_13
	( 
	.in(wire_sft68a_in[13:13]),
	.out(wire_sft68a_out[13:13]));
	soft   sft68a_14
	( 
	.in(wire_sft68a_in[14:14]),
	.out(wire_sft68a_out[14:14]));
	soft   sft68a_15
	( 
	.in(wire_sft68a_in[15:15]),
	.out(wire_sft68a_out[15:15]));
	soft   sft68a_16
	( 
	.in(wire_sft68a_in[16:16]),
	.out(wire_sft68a_out[16:16]));
	soft   sft68a_17
	( 
	.in(wire_sft68a_in[17:17]),
	.out(wire_sft68a_out[17:17]));
	soft   sft68a_18
	( 
	.in(wire_sft68a_in[18:18]),
	.out(wire_sft68a_out[18:18]));
	soft   sft68a_19
	( 
	.in(wire_sft68a_in[19:19]),
	.out(wire_sft68a_out[19:19]));
	soft   sft68a_20
	( 
	.in(wire_sft68a_in[20:20]),
	.out(wire_sft68a_out[20:20]));
	soft   sft68a_21
	( 
	.in(wire_sft68a_in[21:21]),
	.out(wire_sft68a_out[21:21]));
	soft   sft68a_22
	( 
	.in(wire_sft68a_in[22:22]),
	.out(wire_sft68a_out[22:22]));
	soft   sft68a_23
	( 
	.in(wire_sft68a_in[23:23]),
	.out(wire_sft68a_out[23:23]));
	soft   sft68a_24
	( 
	.in(wire_sft68a_in[24:24]),
	.out(wire_sft68a_out[24:24]));
	soft   sft68a_25
	( 
	.in(wire_sft68a_in[25:25]),
	.out(wire_sft68a_out[25:25]));
	soft   sft68a_26
	( 
	.in(wire_sft68a_in[26:26]),
	.out(wire_sft68a_out[26:26]));
	soft   sft68a_27
	( 
	.in(wire_sft68a_in[27:27]),
	.out(wire_sft68a_out[27:27]));
	assign
		wire_sft68a_in = wire_add64_result;
	assign
		dataa_node = {datab[24:0]},
		datab_node = {dataa[3:0]},
		final_result_node = {w1498w[28:0]},
		result = {final_result_node[28:0]},
		w1388w = 1'b0,
		w1498w = {wire_sft68a_out[27:26], wire_sft68a_out[25:24], wire_sft68a_out[23:22], wire_sft68a_out[21:20], wire_sft68a_out[19:18], wire_sft68a_out[17:16], wire_sft68a_out[15:14], wire_sft68a_out[13:12], wire_sft68a_out[11:10], wire_sft68a_out[9:8], wire_sft68a_out[7:6], wire_sft68a_out[5:4], wire_sft68a_out[3:2], wire_sft68a_out[1:0], dffe11, dffe10},
		w_decoder_node1253w = {({dataa_node[24:0]} & {25{w_le_datab_node1252w[3]}}), ({dataa_node[24:0]} & {25{w_le_datab_node1252w[2]}}), ({dataa_node[24:0]} & {25{w_le_datab_node1252w[1]}}), ({dataa_node[24:0]} & {25{w_le_datab_node1252w[0]}})},
		w_le_datab_node1252w = {datab_node[3:0]},
		w_sum_node1254w = {wire_sum_adder9aa_1result[25:0], w_decoder_node1253w[50], wire_sum_adder9aa_0result[25:0], w_decoder_node1253w[0]};
endmodule //fplog_mult1


//lpm_mult DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=4 LPM_WIDTHB=19 LPM_WIDTHP=23 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=22 dataa datab datac result
//VERSION_BEGIN 16.1 cbx_mgl 2016:10:24:15:05:03:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=20 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=20 dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 84 reg 42 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mult12
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [3:0]  dataa;
	input   [18:0]  datab;
	output   [22:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[21:0]	wire_add112_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe100;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe101;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe102;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe103;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe104;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe105;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe106;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe107;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe108;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe109;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe110;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe111;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe70;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe71;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe72;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe73;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe74;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe75;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe76;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe77;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe78;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe79;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe80;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe81;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe82;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe83;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe84;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe85;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe86;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe87;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe88;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe89;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe90;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe91;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe92;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe93;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe94;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe95;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe96;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe97;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe98;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe99;
	wire	[19:0]	wire_sum_adder69aa_0dataa;
	wire	[19:0]	wire_sum_adder69aa_0datab;
	wire	[19:0]	wire_sum_adder69aa_0result;
	wire	[19:0]	wire_sum_adder69aa_1dataa;
	wire	[19:0]	wire_sum_adder69aa_1datab;
	wire	[19:0]	wire_sum_adder69aa_1result;
	wire  [21:0]   wire_sft113a_in;
	wire  [21:0]   wire_sft113a_out;
	wire  [21:0]   wire_sft114a_in;
	wire  [21:0]   wire_sft114a_out;
	wire  [21:0]   wire_sft115a_in;
	wire  [21:0]   wire_sft115a_out;
	wire  [21:0]   wire_sft116a_in;
	wire  [21:0]   wire_sft116a_out;
	wire  [18:0]  dataa_node;
	wire  [3:0]  datab_node;
	wire  [22:0]  final_result_node;
	wire  w1674w;
	wire  [23:0]  w1760w;
	wire  [75:0]  w_decoder_node1557w;
	wire  [3:0]  w_le_datab_node1556w;
	wire  [41:0]  w_sum_node1558w;

	assign
		wire_add112_result = wire_sft113a_out + wire_sft114a_out + wire_sft115a_out;
	// synopsys translate_off
	initial
		dffe100 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe100 <= 1'b0;
		else if  (clken == 1'b1)   dffe100 <= w_sum_node1558w[16];
	// synopsys translate_off
	initial
		dffe101 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe101 <= 1'b0;
		else if  (clken == 1'b1)   dffe101 <= w_sum_node1558w[35];
	// synopsys translate_off
	initial
		dffe102 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe102 <= 1'b0;
		else if  (clken == 1'b1)   dffe102 <= w_sum_node1558w[17];
	// synopsys translate_off
	initial
		dffe103 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe103 <= 1'b0;
		else if  (clken == 1'b1)   dffe103 <= w_sum_node1558w[36];
	// synopsys translate_off
	initial
		dffe104 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe104 <= 1'b0;
		else if  (clken == 1'b1)   dffe104 <= w_sum_node1558w[18];
	// synopsys translate_off
	initial
		dffe105 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe105 <= 1'b0;
		else if  (clken == 1'b1)   dffe105 <= w_sum_node1558w[37];
	// synopsys translate_off
	initial
		dffe106 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe106 <= 1'b0;
		else if  (clken == 1'b1)   dffe106 <= w_sum_node1558w[19];
	// synopsys translate_off
	initial
		dffe107 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe107 <= 1'b0;
		else if  (clken == 1'b1)   dffe107 <= w_sum_node1558w[38];
	// synopsys translate_off
	initial
		dffe108 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe108 <= 1'b0;
		else if  (clken == 1'b1)   dffe108 <= w_sum_node1558w[20];
	// synopsys translate_off
	initial
		dffe109 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe109 <= 1'b0;
		else if  (clken == 1'b1)   dffe109 <= w_sum_node1558w[39];
	// synopsys translate_off
	initial
		dffe110 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe110 <= 1'b0;
		else if  (clken == 1'b1)   dffe110 <= w_sum_node1558w[40];
	// synopsys translate_off
	initial
		dffe111 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe111 <= 1'b0;
		else if  (clken == 1'b1)   dffe111 <= w_sum_node1558w[41];
	// synopsys translate_off
	initial
		dffe70 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe70 <= 1'b0;
		else if  (clken == 1'b1)   dffe70 <= w_sum_node1558w[0];
	// synopsys translate_off
	initial
		dffe71 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe71 <= 1'b0;
		else if  (clken == 1'b1)   dffe71 <= w_sum_node1558w[1];
	// synopsys translate_off
	initial
		dffe72 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe72 <= 1'b0;
		else if  (clken == 1'b1)   dffe72 <= w_sum_node1558w[2];
	// synopsys translate_off
	initial
		dffe73 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe73 <= 1'b0;
		else if  (clken == 1'b1)   dffe73 <= w_sum_node1558w[21];
	// synopsys translate_off
	initial
		dffe74 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe74 <= 1'b0;
		else if  (clken == 1'b1)   dffe74 <= w_sum_node1558w[3];
	// synopsys translate_off
	initial
		dffe75 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe75 <= 1'b0;
		else if  (clken == 1'b1)   dffe75 <= w_sum_node1558w[22];
	// synopsys translate_off
	initial
		dffe76 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe76 <= 1'b0;
		else if  (clken == 1'b1)   dffe76 <= w_sum_node1558w[4];
	// synopsys translate_off
	initial
		dffe77 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe77 <= 1'b0;
		else if  (clken == 1'b1)   dffe77 <= w_sum_node1558w[23];
	// synopsys translate_off
	initial
		dffe78 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe78 <= 1'b0;
		else if  (clken == 1'b1)   dffe78 <= w_sum_node1558w[5];
	// synopsys translate_off
	initial
		dffe79 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe79 <= 1'b0;
		else if  (clken == 1'b1)   dffe79 <= w_sum_node1558w[24];
	// synopsys translate_off
	initial
		dffe80 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe80 <= 1'b0;
		else if  (clken == 1'b1)   dffe80 <= w_sum_node1558w[6];
	// synopsys translate_off
	initial
		dffe81 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe81 <= 1'b0;
		else if  (clken == 1'b1)   dffe81 <= w_sum_node1558w[25];
	// synopsys translate_off
	initial
		dffe82 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe82 <= 1'b0;
		else if  (clken == 1'b1)   dffe82 <= w_sum_node1558w[7];
	// synopsys translate_off
	initial
		dffe83 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe83 <= 1'b0;
		else if  (clken == 1'b1)   dffe83 <= w_sum_node1558w[26];
	// synopsys translate_off
	initial
		dffe84 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe84 <= 1'b0;
		else if  (clken == 1'b1)   dffe84 <= w_sum_node1558w[8];
	// synopsys translate_off
	initial
		dffe85 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe85 <= 1'b0;
		else if  (clken == 1'b1)   dffe85 <= w_sum_node1558w[27];
	// synopsys translate_off
	initial
		dffe86 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe86 <= 1'b0;
		else if  (clken == 1'b1)   dffe86 <= w_sum_node1558w[9];
	// synopsys translate_off
	initial
		dffe87 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe87 <= 1'b0;
		else if  (clken == 1'b1)   dffe87 <= w_sum_node1558w[28];
	// synopsys translate_off
	initial
		dffe88 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe88 <= 1'b0;
		else if  (clken == 1'b1)   dffe88 <= w_sum_node1558w[10];
	// synopsys translate_off
	initial
		dffe89 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe89 <= 1'b0;
		else if  (clken == 1'b1)   dffe89 <= w_sum_node1558w[29];
	// synopsys translate_off
	initial
		dffe90 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe90 <= 1'b0;
		else if  (clken == 1'b1)   dffe90 <= w_sum_node1558w[11];
	// synopsys translate_off
	initial
		dffe91 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe91 <= 1'b0;
		else if  (clken == 1'b1)   dffe91 <= w_sum_node1558w[30];
	// synopsys translate_off
	initial
		dffe92 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe92 <= 1'b0;
		else if  (clken == 1'b1)   dffe92 <= w_sum_node1558w[12];
	// synopsys translate_off
	initial
		dffe93 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe93 <= 1'b0;
		else if  (clken == 1'b1)   dffe93 <= w_sum_node1558w[31];
	// synopsys translate_off
	initial
		dffe94 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe94 <= 1'b0;
		else if  (clken == 1'b1)   dffe94 <= w_sum_node1558w[13];
	// synopsys translate_off
	initial
		dffe95 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe95 <= 1'b0;
		else if  (clken == 1'b1)   dffe95 <= w_sum_node1558w[32];
	// synopsys translate_off
	initial
		dffe96 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe96 <= 1'b0;
		else if  (clken == 1'b1)   dffe96 <= w_sum_node1558w[14];
	// synopsys translate_off
	initial
		dffe97 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe97 <= 1'b0;
		else if  (clken == 1'b1)   dffe97 <= w_sum_node1558w[33];
	// synopsys translate_off
	initial
		dffe98 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe98 <= 1'b0;
		else if  (clken == 1'b1)   dffe98 <= w_sum_node1558w[15];
	// synopsys translate_off
	initial
		dffe99 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe99 <= 1'b0;
		else if  (clken == 1'b1)   dffe99 <= w_sum_node1558w[34];
	assign
		wire_sum_adder69aa_0result = wire_sum_adder69aa_0dataa + wire_sum_adder69aa_0datab;
	assign
		wire_sum_adder69aa_0dataa = {1'b0, w_decoder_node1557w[37:19]},
		wire_sum_adder69aa_0datab = {{2{1'b0}}, w_decoder_node1557w[18:1]};
	assign
		wire_sum_adder69aa_1result = wire_sum_adder69aa_1dataa + wire_sum_adder69aa_1datab;
	assign
		wire_sum_adder69aa_1dataa = {1'b0, w_decoder_node1557w[75:57]},
		wire_sum_adder69aa_1datab = {{2{1'b0}}, w_decoder_node1557w[56:39]};
	soft   sft113a_0
	( 
	.in(wire_sft113a_in[0:0]),
	.out(wire_sft113a_out[0:0]));
	soft   sft113a_1
	( 
	.in(wire_sft113a_in[1:1]),
	.out(wire_sft113a_out[1:1]));
	soft   sft113a_2
	( 
	.in(wire_sft113a_in[2:2]),
	.out(wire_sft113a_out[2:2]));
	soft   sft113a_3
	( 
	.in(wire_sft113a_in[3:3]),
	.out(wire_sft113a_out[3:3]));
	soft   sft113a_4
	( 
	.in(wire_sft113a_in[4:4]),
	.out(wire_sft113a_out[4:4]));
	soft   sft113a_5
	( 
	.in(wire_sft113a_in[5:5]),
	.out(wire_sft113a_out[5:5]));
	soft   sft113a_6
	( 
	.in(wire_sft113a_in[6:6]),
	.out(wire_sft113a_out[6:6]));
	soft   sft113a_7
	( 
	.in(wire_sft113a_in[7:7]),
	.out(wire_sft113a_out[7:7]));
	soft   sft113a_8
	( 
	.in(wire_sft113a_in[8:8]),
	.out(wire_sft113a_out[8:8]));
	soft   sft113a_9
	( 
	.in(wire_sft113a_in[9:9]),
	.out(wire_sft113a_out[9:9]));
	soft   sft113a_10
	( 
	.in(wire_sft113a_in[10:10]),
	.out(wire_sft113a_out[10:10]));
	soft   sft113a_11
	( 
	.in(wire_sft113a_in[11:11]),
	.out(wire_sft113a_out[11:11]));
	soft   sft113a_12
	( 
	.in(wire_sft113a_in[12:12]),
	.out(wire_sft113a_out[12:12]));
	soft   sft113a_13
	( 
	.in(wire_sft113a_in[13:13]),
	.out(wire_sft113a_out[13:13]));
	soft   sft113a_14
	( 
	.in(wire_sft113a_in[14:14]),
	.out(wire_sft113a_out[14:14]));
	soft   sft113a_15
	( 
	.in(wire_sft113a_in[15:15]),
	.out(wire_sft113a_out[15:15]));
	soft   sft113a_16
	( 
	.in(wire_sft113a_in[16:16]),
	.out(wire_sft113a_out[16:16]));
	soft   sft113a_17
	( 
	.in(wire_sft113a_in[17:17]),
	.out(wire_sft113a_out[17:17]));
	soft   sft113a_18
	( 
	.in(wire_sft113a_in[18:18]),
	.out(wire_sft113a_out[18:18]));
	soft   sft113a_19
	( 
	.in(wire_sft113a_in[19:19]),
	.out(wire_sft113a_out[19:19]));
	soft   sft113a_20
	( 
	.in(wire_sft113a_in[20:20]),
	.out(wire_sft113a_out[20:20]));
	soft   sft113a_21
	( 
	.in(wire_sft113a_in[21:21]),
	.out(wire_sft113a_out[21:21]));
	assign
		wire_sft113a_in = {w1674w, {dffe111, {dffe110, {dffe108, {dffe106, {dffe104, {dffe102, {dffe100, {dffe98, {dffe96, {dffe94, {dffe92, {dffe90, {dffe88, {dffe86, {dffe84, {dffe82, {dffe80, {dffe78, {dffe76, {dffe74, dffe72}}}}}}}}}}}}}}}}}}}}};
	soft   sft114a_0
	( 
	.in(wire_sft114a_in[0:0]),
	.out(wire_sft114a_out[0:0]));
	soft   sft114a_1
	( 
	.in(wire_sft114a_in[1:1]),
	.out(wire_sft114a_out[1:1]));
	soft   sft114a_2
	( 
	.in(wire_sft114a_in[2:2]),
	.out(wire_sft114a_out[2:2]));
	soft   sft114a_3
	( 
	.in(wire_sft114a_in[3:3]),
	.out(wire_sft114a_out[3:3]));
	soft   sft114a_4
	( 
	.in(wire_sft114a_in[4:4]),
	.out(wire_sft114a_out[4:4]));
	soft   sft114a_5
	( 
	.in(wire_sft114a_in[5:5]),
	.out(wire_sft114a_out[5:5]));
	soft   sft114a_6
	( 
	.in(wire_sft114a_in[6:6]),
	.out(wire_sft114a_out[6:6]));
	soft   sft114a_7
	( 
	.in(wire_sft114a_in[7:7]),
	.out(wire_sft114a_out[7:7]));
	soft   sft114a_8
	( 
	.in(wire_sft114a_in[8:8]),
	.out(wire_sft114a_out[8:8]));
	soft   sft114a_9
	( 
	.in(wire_sft114a_in[9:9]),
	.out(wire_sft114a_out[9:9]));
	soft   sft114a_10
	( 
	.in(wire_sft114a_in[10:10]),
	.out(wire_sft114a_out[10:10]));
	soft   sft114a_11
	( 
	.in(wire_sft114a_in[11:11]),
	.out(wire_sft114a_out[11:11]));
	soft   sft114a_12
	( 
	.in(wire_sft114a_in[12:12]),
	.out(wire_sft114a_out[12:12]));
	soft   sft114a_13
	( 
	.in(wire_sft114a_in[13:13]),
	.out(wire_sft114a_out[13:13]));
	soft   sft114a_14
	( 
	.in(wire_sft114a_in[14:14]),
	.out(wire_sft114a_out[14:14]));
	soft   sft114a_15
	( 
	.in(wire_sft114a_in[15:15]),
	.out(wire_sft114a_out[15:15]));
	soft   sft114a_16
	( 
	.in(wire_sft114a_in[16:16]),
	.out(wire_sft114a_out[16:16]));
	soft   sft114a_17
	( 
	.in(wire_sft114a_in[17:17]),
	.out(wire_sft114a_out[17:17]));
	soft   sft114a_18
	( 
	.in(wire_sft114a_in[18:18]),
	.out(wire_sft114a_out[18:18]));
	soft   sft114a_19
	( 
	.in(wire_sft114a_in[19:19]),
	.out(wire_sft114a_out[19:19]));
	soft   sft114a_20
	( 
	.in(wire_sft114a_in[20:20]),
	.out(wire_sft114a_out[20:20]));
	soft   sft114a_21
	( 
	.in(wire_sft114a_in[21:21]),
	.out(wire_sft114a_out[21:21]));
	assign
		wire_sft114a_in = {w1674w, {w1674w, {w1674w, {dffe109, {dffe107, {dffe105, {dffe103, {dffe101, {dffe99, {dffe97, {dffe95, {dffe93, {dffe91, {dffe89, {dffe87, {dffe85, {dffe83, {dffe81, {dffe79, {dffe77, {dffe75, dffe73}}}}}}}}}}}}}}}}}}}}};
	soft   sft115a_0
	( 
	.in(wire_sft115a_in[0:0]),
	.out(wire_sft115a_out[0:0]));
	soft   sft115a_1
	( 
	.in(wire_sft115a_in[1:1]),
	.out(wire_sft115a_out[1:1]));
	soft   sft115a_2
	( 
	.in(wire_sft115a_in[2:2]),
	.out(wire_sft115a_out[2:2]));
	soft   sft115a_3
	( 
	.in(wire_sft115a_in[3:3]),
	.out(wire_sft115a_out[3:3]));
	soft   sft115a_4
	( 
	.in(wire_sft115a_in[4:4]),
	.out(wire_sft115a_out[4:4]));
	soft   sft115a_5
	( 
	.in(wire_sft115a_in[5:5]),
	.out(wire_sft115a_out[5:5]));
	soft   sft115a_6
	( 
	.in(wire_sft115a_in[6:6]),
	.out(wire_sft115a_out[6:6]));
	soft   sft115a_7
	( 
	.in(wire_sft115a_in[7:7]),
	.out(wire_sft115a_out[7:7]));
	soft   sft115a_8
	( 
	.in(wire_sft115a_in[8:8]),
	.out(wire_sft115a_out[8:8]));
	soft   sft115a_9
	( 
	.in(wire_sft115a_in[9:9]),
	.out(wire_sft115a_out[9:9]));
	soft   sft115a_10
	( 
	.in(wire_sft115a_in[10:10]),
	.out(wire_sft115a_out[10:10]));
	soft   sft115a_11
	( 
	.in(wire_sft115a_in[11:11]),
	.out(wire_sft115a_out[11:11]));
	soft   sft115a_12
	( 
	.in(wire_sft115a_in[12:12]),
	.out(wire_sft115a_out[12:12]));
	soft   sft115a_13
	( 
	.in(wire_sft115a_in[13:13]),
	.out(wire_sft115a_out[13:13]));
	soft   sft115a_14
	( 
	.in(wire_sft115a_in[14:14]),
	.out(wire_sft115a_out[14:14]));
	soft   sft115a_15
	( 
	.in(wire_sft115a_in[15:15]),
	.out(wire_sft115a_out[15:15]));
	soft   sft115a_16
	( 
	.in(wire_sft115a_in[16:16]),
	.out(wire_sft115a_out[16:16]));
	soft   sft115a_17
	( 
	.in(wire_sft115a_in[17:17]),
	.out(wire_sft115a_out[17:17]));
	soft   sft115a_18
	( 
	.in(wire_sft115a_in[18:18]),
	.out(wire_sft115a_out[18:18]));
	soft   sft115a_19
	( 
	.in(wire_sft115a_in[19:19]),
	.out(wire_sft115a_out[19:19]));
	soft   sft115a_20
	( 
	.in(wire_sft115a_in[20:20]),
	.out(wire_sft115a_out[20:20]));
	soft   sft115a_21
	( 
	.in(wire_sft115a_in[21:21]),
	.out(wire_sft115a_out[21:21]));
	assign
		wire_sft115a_in = {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {w1674w, {2{w1674w}}}}}}}}}}}}}}}}}}}}}};
	soft   sft116a_0
	( 
	.in(wire_sft116a_in[0:0]),
	.out(wire_sft116a_out[0:0]));
	soft   sft116a_1
	( 
	.in(wire_sft116a_in[1:1]),
	.out(wire_sft116a_out[1:1]));
	soft   sft116a_2
	( 
	.in(wire_sft116a_in[2:2]),
	.out(wire_sft116a_out[2:2]));
	soft   sft116a_3
	( 
	.in(wire_sft116a_in[3:3]),
	.out(wire_sft116a_out[3:3]));
	soft   sft116a_4
	( 
	.in(wire_sft116a_in[4:4]),
	.out(wire_sft116a_out[4:4]));
	soft   sft116a_5
	( 
	.in(wire_sft116a_in[5:5]),
	.out(wire_sft116a_out[5:5]));
	soft   sft116a_6
	( 
	.in(wire_sft116a_in[6:6]),
	.out(wire_sft116a_out[6:6]));
	soft   sft116a_7
	( 
	.in(wire_sft116a_in[7:7]),
	.out(wire_sft116a_out[7:7]));
	soft   sft116a_8
	( 
	.in(wire_sft116a_in[8:8]),
	.out(wire_sft116a_out[8:8]));
	soft   sft116a_9
	( 
	.in(wire_sft116a_in[9:9]),
	.out(wire_sft116a_out[9:9]));
	soft   sft116a_10
	( 
	.in(wire_sft116a_in[10:10]),
	.out(wire_sft116a_out[10:10]));
	soft   sft116a_11
	( 
	.in(wire_sft116a_in[11:11]),
	.out(wire_sft116a_out[11:11]));
	soft   sft116a_12
	( 
	.in(wire_sft116a_in[12:12]),
	.out(wire_sft116a_out[12:12]));
	soft   sft116a_13
	( 
	.in(wire_sft116a_in[13:13]),
	.out(wire_sft116a_out[13:13]));
	soft   sft116a_14
	( 
	.in(wire_sft116a_in[14:14]),
	.out(wire_sft116a_out[14:14]));
	soft   sft116a_15
	( 
	.in(wire_sft116a_in[15:15]),
	.out(wire_sft116a_out[15:15]));
	soft   sft116a_16
	( 
	.in(wire_sft116a_in[16:16]),
	.out(wire_sft116a_out[16:16]));
	soft   sft116a_17
	( 
	.in(wire_sft116a_in[17:17]),
	.out(wire_sft116a_out[17:17]));
	soft   sft116a_18
	( 
	.in(wire_sft116a_in[18:18]),
	.out(wire_sft116a_out[18:18]));
	soft   sft116a_19
	( 
	.in(wire_sft116a_in[19:19]),
	.out(wire_sft116a_out[19:19]));
	soft   sft116a_20
	( 
	.in(wire_sft116a_in[20:20]),
	.out(wire_sft116a_out[20:20]));
	soft   sft116a_21
	( 
	.in(wire_sft116a_in[21:21]),
	.out(wire_sft116a_out[21:21]));
	assign
		wire_sft116a_in = wire_add112_result;
	assign
		dataa_node = {datab[18:0]},
		datab_node = {dataa[3:0]},
		final_result_node = {w1760w[22:0]},
		result = {final_result_node[22:0]},
		w1674w = 1'b0,
		w1760w = {wire_sft116a_out[21:20], wire_sft116a_out[19:18], wire_sft116a_out[17:16], wire_sft116a_out[15:14], wire_sft116a_out[13:12], wire_sft116a_out[11:10], wire_sft116a_out[9:8], wire_sft116a_out[7:6], wire_sft116a_out[5:4], wire_sft116a_out[3:2], wire_sft116a_out[1:0], dffe71, dffe70},
		w_decoder_node1557w = {({dataa_node[18:0]} & {19{w_le_datab_node1556w[3]}}), ({dataa_node[18:0]} & {19{w_le_datab_node1556w[2]}}), ({dataa_node[18:0]} & {19{w_le_datab_node1556w[1]}}), ({dataa_node[18:0]} & {19{w_le_datab_node1556w[0]}})},
		w_le_datab_node1556w = {datab_node[3:0]},
		w_sum_node1558w = {wire_sum_adder69aa_1result[19:0], w_decoder_node1557w[38], wire_sum_adder69aa_0result[19:0], w_decoder_node1557w[0]};
endmodule //fplog_mult12


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=32 LPM_WIDTH=6 LPM_WIDTHS=5 data result sel
//VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = lut 62 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [191:0]  data;
	output   [5:0]  result;
	input   [4:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [191:0]  data;
	tri0   [4:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n10_mux_dataout;
	wire	wire_l1_w0_n11_mux_dataout;
	wire	wire_l1_w0_n12_mux_dataout;
	wire	wire_l1_w0_n13_mux_dataout;
	wire	wire_l1_w0_n14_mux_dataout;
	wire	wire_l1_w0_n15_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w0_n8_mux_dataout;
	wire	wire_l1_w0_n9_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n10_mux_dataout;
	wire	wire_l1_w1_n11_mux_dataout;
	wire	wire_l1_w1_n12_mux_dataout;
	wire	wire_l1_w1_n13_mux_dataout;
	wire	wire_l1_w1_n14_mux_dataout;
	wire	wire_l1_w1_n15_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w1_n8_mux_dataout;
	wire	wire_l1_w1_n9_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n10_mux_dataout;
	wire	wire_l1_w2_n11_mux_dataout;
	wire	wire_l1_w2_n12_mux_dataout;
	wire	wire_l1_w2_n13_mux_dataout;
	wire	wire_l1_w2_n14_mux_dataout;
	wire	wire_l1_w2_n15_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w2_n8_mux_dataout;
	wire	wire_l1_w2_n9_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n10_mux_dataout;
	wire	wire_l1_w3_n11_mux_dataout;
	wire	wire_l1_w3_n12_mux_dataout;
	wire	wire_l1_w3_n13_mux_dataout;
	wire	wire_l1_w3_n14_mux_dataout;
	wire	wire_l1_w3_n15_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w3_n8_mux_dataout;
	wire	wire_l1_w3_n9_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n10_mux_dataout;
	wire	wire_l1_w4_n11_mux_dataout;
	wire	wire_l1_w4_n12_mux_dataout;
	wire	wire_l1_w4_n13_mux_dataout;
	wire	wire_l1_w4_n14_mux_dataout;
	wire	wire_l1_w4_n15_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w4_n8_mux_dataout;
	wire	wire_l1_w4_n9_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n10_mux_dataout;
	wire	wire_l1_w5_n11_mux_dataout;
	wire	wire_l1_w5_n12_mux_dataout;
	wire	wire_l1_w5_n13_mux_dataout;
	wire	wire_l1_w5_n14_mux_dataout;
	wire	wire_l1_w5_n15_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w5_n8_mux_dataout;
	wire	wire_l1_w5_n9_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w0_n4_mux_dataout;
	wire	wire_l2_w0_n5_mux_dataout;
	wire	wire_l2_w0_n6_mux_dataout;
	wire	wire_l2_w0_n7_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w1_n4_mux_dataout;
	wire	wire_l2_w1_n5_mux_dataout;
	wire	wire_l2_w1_n6_mux_dataout;
	wire	wire_l2_w1_n7_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w2_n4_mux_dataout;
	wire	wire_l2_w2_n5_mux_dataout;
	wire	wire_l2_w2_n6_mux_dataout;
	wire	wire_l2_w2_n7_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w3_n4_mux_dataout;
	wire	wire_l2_w3_n5_mux_dataout;
	wire	wire_l2_w3_n6_mux_dataout;
	wire	wire_l2_w3_n7_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w4_n4_mux_dataout;
	wire	wire_l2_w4_n5_mux_dataout;
	wire	wire_l2_w4_n6_mux_dataout;
	wire	wire_l2_w4_n7_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w5_n4_mux_dataout;
	wire	wire_l2_w5_n5_mux_dataout;
	wire	wire_l2_w5_n6_mux_dataout;
	wire	wire_l2_w5_n7_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w0_n2_mux_dataout;
	wire	wire_l3_w0_n3_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w1_n2_mux_dataout;
	wire	wire_l3_w1_n3_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w2_n2_mux_dataout;
	wire	wire_l3_w2_n3_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w3_n2_mux_dataout;
	wire	wire_l3_w3_n3_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w4_n2_mux_dataout;
	wire	wire_l3_w4_n3_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w5_n2_mux_dataout;
	wire	wire_l3_w5_n3_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w0_n1_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w1_n1_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w2_n1_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w3_n1_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w4_n1_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w5_n1_mux_dataout;
	wire	wire_l5_w0_n0_mux_dataout;
	wire	wire_l5_w1_n0_mux_dataout;
	wire	wire_l5_w2_n0_mux_dataout;
	wire	wire_l5_w3_n0_mux_dataout;
	wire	wire_l5_w4_n0_mux_dataout;
	wire	wire_l5_w5_n0_mux_dataout;
	wire  [371:0]  data_wire;
	wire  [5:0]  result_wire_ext;
	wire  [24:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[6] : data_wire[0];
	assign		wire_l1_w0_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[126] : data_wire[120];
	assign		wire_l1_w0_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[138] : data_wire[132];
	assign		wire_l1_w0_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[150] : data_wire[144];
	assign		wire_l1_w0_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[162] : data_wire[156];
	assign		wire_l1_w0_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[174] : data_wire[168];
	assign		wire_l1_w0_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[186] : data_wire[180];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[18] : data_wire[12];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[30] : data_wire[24];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[36];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[54] : data_wire[48];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[66] : data_wire[60];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[78] : data_wire[72];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[90] : data_wire[84];
	assign		wire_l1_w0_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[102] : data_wire[96];
	assign		wire_l1_w0_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[114] : data_wire[108];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[7] : data_wire[1];
	assign		wire_l1_w1_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[127] : data_wire[121];
	assign		wire_l1_w1_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[139] : data_wire[133];
	assign		wire_l1_w1_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[151] : data_wire[145];
	assign		wire_l1_w1_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[163] : data_wire[157];
	assign		wire_l1_w1_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[175] : data_wire[169];
	assign		wire_l1_w1_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[187] : data_wire[181];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[19] : data_wire[13];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[31] : data_wire[25];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[37];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[55] : data_wire[49];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[67] : data_wire[61];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[79] : data_wire[73];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[91] : data_wire[85];
	assign		wire_l1_w1_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[103] : data_wire[97];
	assign		wire_l1_w1_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[115] : data_wire[109];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[8] : data_wire[2];
	assign		wire_l1_w2_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[128] : data_wire[122];
	assign		wire_l1_w2_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[140] : data_wire[134];
	assign		wire_l1_w2_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[152] : data_wire[146];
	assign		wire_l1_w2_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[164] : data_wire[158];
	assign		wire_l1_w2_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[176] : data_wire[170];
	assign		wire_l1_w2_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[188] : data_wire[182];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[20] : data_wire[14];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[32] : data_wire[26];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[38];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[50];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[68] : data_wire[62];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[80] : data_wire[74];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[92] : data_wire[86];
	assign		wire_l1_w2_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[104] : data_wire[98];
	assign		wire_l1_w2_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[116] : data_wire[110];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[9] : data_wire[3];
	assign		wire_l1_w3_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[129] : data_wire[123];
	assign		wire_l1_w3_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[141] : data_wire[135];
	assign		wire_l1_w3_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[153] : data_wire[147];
	assign		wire_l1_w3_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[165] : data_wire[159];
	assign		wire_l1_w3_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[177] : data_wire[171];
	assign		wire_l1_w3_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[189] : data_wire[183];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[21] : data_wire[15];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[33] : data_wire[27];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[39];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[51];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[69] : data_wire[63];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[81] : data_wire[75];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[93] : data_wire[87];
	assign		wire_l1_w3_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[99];
	assign		wire_l1_w3_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[117] : data_wire[111];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[10] : data_wire[4];
	assign		wire_l1_w4_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[130] : data_wire[124];
	assign		wire_l1_w4_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[142] : data_wire[136];
	assign		wire_l1_w4_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[154] : data_wire[148];
	assign		wire_l1_w4_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[166] : data_wire[160];
	assign		wire_l1_w4_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[178] : data_wire[172];
	assign		wire_l1_w4_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[190] : data_wire[184];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[22] : data_wire[16];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[34] : data_wire[28];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[40];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[58] : data_wire[52];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[70] : data_wire[64];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[82] : data_wire[76];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[94] : data_wire[88];
	assign		wire_l1_w4_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[100];
	assign		wire_l1_w4_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[118] : data_wire[112];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[11] : data_wire[5];
	assign		wire_l1_w5_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[131] : data_wire[125];
	assign		wire_l1_w5_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[143] : data_wire[137];
	assign		wire_l1_w5_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[155] : data_wire[149];
	assign		wire_l1_w5_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[167] : data_wire[161];
	assign		wire_l1_w5_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[179] : data_wire[173];
	assign		wire_l1_w5_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[191] : data_wire[185];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[23] : data_wire[17];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[35] : data_wire[29];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[41];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[59] : data_wire[53];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[71] : data_wire[65];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[83] : data_wire[77];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[95] : data_wire[89];
	assign		wire_l1_w5_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[101];
	assign		wire_l1_w5_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[119] : data_wire[113];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[193] : data_wire[192];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[195] : data_wire[194];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[197] : data_wire[196];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[199] : data_wire[198];
	assign		wire_l2_w0_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[201] : data_wire[200];
	assign		wire_l2_w0_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[203] : data_wire[202];
	assign		wire_l2_w0_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[205] : data_wire[204];
	assign		wire_l2_w0_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[207] : data_wire[206];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[209] : data_wire[208];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[211] : data_wire[210];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[213] : data_wire[212];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[215] : data_wire[214];
	assign		wire_l2_w1_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[217] : data_wire[216];
	assign		wire_l2_w1_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[219] : data_wire[218];
	assign		wire_l2_w1_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[221] : data_wire[220];
	assign		wire_l2_w1_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[223] : data_wire[222];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[225] : data_wire[224];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[227] : data_wire[226];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[229] : data_wire[228];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[231] : data_wire[230];
	assign		wire_l2_w2_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[233] : data_wire[232];
	assign		wire_l2_w2_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[235] : data_wire[234];
	assign		wire_l2_w2_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[237] : data_wire[236];
	assign		wire_l2_w2_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[239] : data_wire[238];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[241] : data_wire[240];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[243] : data_wire[242];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[245] : data_wire[244];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[247] : data_wire[246];
	assign		wire_l2_w3_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[249] : data_wire[248];
	assign		wire_l2_w3_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[251] : data_wire[250];
	assign		wire_l2_w3_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[253] : data_wire[252];
	assign		wire_l2_w3_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[255] : data_wire[254];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[257] : data_wire[256];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[259] : data_wire[258];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[261] : data_wire[260];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[263] : data_wire[262];
	assign		wire_l2_w4_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[265] : data_wire[264];
	assign		wire_l2_w4_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[267] : data_wire[266];
	assign		wire_l2_w4_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[269] : data_wire[268];
	assign		wire_l2_w4_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[271] : data_wire[270];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[273] : data_wire[272];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[275] : data_wire[274];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[277] : data_wire[276];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[279] : data_wire[278];
	assign		wire_l2_w5_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[281] : data_wire[280];
	assign		wire_l2_w5_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[283] : data_wire[282];
	assign		wire_l2_w5_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[285] : data_wire[284];
	assign		wire_l2_w5_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[287] : data_wire[286];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[289] : data_wire[288];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[291] : data_wire[290];
	assign		wire_l3_w0_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[293] : data_wire[292];
	assign		wire_l3_w0_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[295] : data_wire[294];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[297] : data_wire[296];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[299] : data_wire[298];
	assign		wire_l3_w1_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[301] : data_wire[300];
	assign		wire_l3_w1_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[303] : data_wire[302];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[305] : data_wire[304];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[307] : data_wire[306];
	assign		wire_l3_w2_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[309] : data_wire[308];
	assign		wire_l3_w2_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[311] : data_wire[310];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[313] : data_wire[312];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[315] : data_wire[314];
	assign		wire_l3_w3_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[317] : data_wire[316];
	assign		wire_l3_w3_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[319] : data_wire[318];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[321] : data_wire[320];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[323] : data_wire[322];
	assign		wire_l3_w4_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[325] : data_wire[324];
	assign		wire_l3_w4_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[327] : data_wire[326];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[329] : data_wire[328];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[331] : data_wire[330];
	assign		wire_l3_w5_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[333] : data_wire[332];
	assign		wire_l3_w5_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[335] : data_wire[334];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[337] : data_wire[336];
	assign		wire_l4_w0_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[339] : data_wire[338];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[341] : data_wire[340];
	assign		wire_l4_w1_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[343] : data_wire[342];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[345] : data_wire[344];
	assign		wire_l4_w2_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[347] : data_wire[346];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[349] : data_wire[348];
	assign		wire_l4_w3_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[351] : data_wire[350];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[353] : data_wire[352];
	assign		wire_l4_w4_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[355] : data_wire[354];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[357] : data_wire[356];
	assign		wire_l4_w5_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[359] : data_wire[358];
	assign		wire_l5_w0_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[361] : data_wire[360];
	assign		wire_l5_w1_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[363] : data_wire[362];
	assign		wire_l5_w2_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[365] : data_wire[364];
	assign		wire_l5_w3_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[367] : data_wire[366];
	assign		wire_l5_w4_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[369] : data_wire[368];
	assign		wire_l5_w5_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[371] : data_wire[370];
	assign
		data_wire = {wire_l4_w5_n1_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n1_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n1_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n1_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n1_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n1_mux_dataout, wire_l4_w0_n0_mux_dataout, wire_l3_w5_n3_mux_dataout, wire_l3_w5_n2_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n3_mux_dataout, wire_l3_w4_n2_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n3_mux_dataout, wire_l3_w3_n2_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n3_mux_dataout, wire_l3_w2_n2_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n3_mux_dataout, wire_l3_w1_n2_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n3_mux_dataout, wire_l3_w0_n2_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w5_n7_mux_dataout, wire_l2_w5_n6_mux_dataout, wire_l2_w5_n5_mux_dataout, wire_l2_w5_n4_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n7_mux_dataout, wire_l2_w4_n6_mux_dataout, wire_l2_w4_n5_mux_dataout, wire_l2_w4_n4_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n7_mux_dataout, wire_l2_w3_n6_mux_dataout, wire_l2_w3_n5_mux_dataout, wire_l2_w3_n4_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n7_mux_dataout, wire_l2_w2_n6_mux_dataout, wire_l2_w2_n5_mux_dataout, wire_l2_w2_n4_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n7_mux_dataout, wire_l2_w1_n6_mux_dataout, wire_l2_w1_n5_mux_dataout, wire_l2_w1_n4_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout
, wire_l2_w0_n7_mux_dataout, wire_l2_w0_n6_mux_dataout, wire_l2_w0_n5_mux_dataout, wire_l2_w0_n4_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w5_n15_mux_dataout, wire_l1_w5_n14_mux_dataout, wire_l1_w5_n13_mux_dataout, wire_l1_w5_n12_mux_dataout, wire_l1_w5_n11_mux_dataout, wire_l1_w5_n10_mux_dataout, wire_l1_w5_n9_mux_dataout, wire_l1_w5_n8_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n15_mux_dataout, wire_l1_w4_n14_mux_dataout, wire_l1_w4_n13_mux_dataout, wire_l1_w4_n12_mux_dataout, wire_l1_w4_n11_mux_dataout, wire_l1_w4_n10_mux_dataout, wire_l1_w4_n9_mux_dataout, wire_l1_w4_n8_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n15_mux_dataout, wire_l1_w3_n14_mux_dataout, wire_l1_w3_n13_mux_dataout, wire_l1_w3_n12_mux_dataout, wire_l1_w3_n11_mux_dataout, wire_l1_w3_n10_mux_dataout, wire_l1_w3_n9_mux_dataout, wire_l1_w3_n8_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n15_mux_dataout, wire_l1_w2_n14_mux_dataout, wire_l1_w2_n13_mux_dataout, wire_l1_w2_n12_mux_dataout, wire_l1_w2_n11_mux_dataout, wire_l1_w2_n10_mux_dataout, wire_l1_w2_n9_mux_dataout, wire_l1_w2_n8_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n15_mux_dataout, wire_l1_w1_n14_mux_dataout, wire_l1_w1_n13_mux_dataout
, wire_l1_w1_n12_mux_dataout, wire_l1_w1_n11_mux_dataout, wire_l1_w1_n10_mux_dataout, wire_l1_w1_n9_mux_dataout, wire_l1_w1_n8_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n15_mux_dataout, wire_l1_w0_n14_mux_dataout, wire_l1_w0_n13_mux_dataout, wire_l1_w0_n12_mux_dataout, wire_l1_w0_n11_mux_dataout, wire_l1_w0_n10_mux_dataout, wire_l1_w0_n9_mux_dataout, wire_l1_w0_n8_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l5_w5_n0_mux_dataout, wire_l5_w4_n0_mux_dataout, wire_l5_w3_n0_mux_dataout, wire_l5_w2_n0_mux_dataout, wire_l5_w1_n0_mux_dataout, wire_l5_w0_n0_mux_dataout},
		sel_wire = {sel[4], {5{1'b0}}, sel[3], {5{1'b0}}, sel[2], {5{1'b0}}, sel[1], {5{1'b0}}, sel[0]};
endmodule //fplog_mux


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=32 LPM_WIDTH=39 LPM_WIDTHS=5 data result sel
//VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = lut 403 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mux1
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [1247:0]  data;
	output   [38:0]  result;
	input   [4:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1247:0]  data;
	tri0   [4:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n10_mux_dataout;
	wire	wire_l1_w0_n11_mux_dataout;
	wire	wire_l1_w0_n12_mux_dataout;
	wire	wire_l1_w0_n13_mux_dataout;
	wire	wire_l1_w0_n14_mux_dataout;
	wire	wire_l1_w0_n15_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w0_n8_mux_dataout;
	wire	wire_l1_w0_n9_mux_dataout;
	wire	wire_l1_w10_n0_mux_dataout;
	wire	wire_l1_w10_n10_mux_dataout;
	wire	wire_l1_w10_n11_mux_dataout;
	wire	wire_l1_w10_n12_mux_dataout;
	wire	wire_l1_w10_n13_mux_dataout;
	wire	wire_l1_w10_n14_mux_dataout;
	wire	wire_l1_w10_n15_mux_dataout;
	wire	wire_l1_w10_n1_mux_dataout;
	wire	wire_l1_w10_n2_mux_dataout;
	wire	wire_l1_w10_n3_mux_dataout;
	wire	wire_l1_w10_n4_mux_dataout;
	wire	wire_l1_w10_n5_mux_dataout;
	wire	wire_l1_w10_n6_mux_dataout;
	wire	wire_l1_w10_n7_mux_dataout;
	wire	wire_l1_w10_n8_mux_dataout;
	wire	wire_l1_w10_n9_mux_dataout;
	wire	wire_l1_w11_n0_mux_dataout;
	wire	wire_l1_w11_n10_mux_dataout;
	wire	wire_l1_w11_n11_mux_dataout;
	wire	wire_l1_w11_n12_mux_dataout;
	wire	wire_l1_w11_n13_mux_dataout;
	wire	wire_l1_w11_n14_mux_dataout;
	wire	wire_l1_w11_n15_mux_dataout;
	wire	wire_l1_w11_n1_mux_dataout;
	wire	wire_l1_w11_n2_mux_dataout;
	wire	wire_l1_w11_n3_mux_dataout;
	wire	wire_l1_w11_n4_mux_dataout;
	wire	wire_l1_w11_n5_mux_dataout;
	wire	wire_l1_w11_n6_mux_dataout;
	wire	wire_l1_w11_n7_mux_dataout;
	wire	wire_l1_w11_n8_mux_dataout;
	wire	wire_l1_w11_n9_mux_dataout;
	wire	wire_l1_w12_n0_mux_dataout;
	wire	wire_l1_w12_n10_mux_dataout;
	wire	wire_l1_w12_n11_mux_dataout;
	wire	wire_l1_w12_n12_mux_dataout;
	wire	wire_l1_w12_n13_mux_dataout;
	wire	wire_l1_w12_n14_mux_dataout;
	wire	wire_l1_w12_n15_mux_dataout;
	wire	wire_l1_w12_n1_mux_dataout;
	wire	wire_l1_w12_n2_mux_dataout;
	wire	wire_l1_w12_n3_mux_dataout;
	wire	wire_l1_w12_n4_mux_dataout;
	wire	wire_l1_w12_n5_mux_dataout;
	wire	wire_l1_w12_n6_mux_dataout;
	wire	wire_l1_w12_n7_mux_dataout;
	wire	wire_l1_w12_n8_mux_dataout;
	wire	wire_l1_w12_n9_mux_dataout;
	wire	wire_l1_w13_n0_mux_dataout;
	wire	wire_l1_w13_n10_mux_dataout;
	wire	wire_l1_w13_n11_mux_dataout;
	wire	wire_l1_w13_n12_mux_dataout;
	wire	wire_l1_w13_n13_mux_dataout;
	wire	wire_l1_w13_n14_mux_dataout;
	wire	wire_l1_w13_n15_mux_dataout;
	wire	wire_l1_w13_n1_mux_dataout;
	wire	wire_l1_w13_n2_mux_dataout;
	wire	wire_l1_w13_n3_mux_dataout;
	wire	wire_l1_w13_n4_mux_dataout;
	wire	wire_l1_w13_n5_mux_dataout;
	wire	wire_l1_w13_n6_mux_dataout;
	wire	wire_l1_w13_n7_mux_dataout;
	wire	wire_l1_w13_n8_mux_dataout;
	wire	wire_l1_w13_n9_mux_dataout;
	wire	wire_l1_w14_n0_mux_dataout;
	wire	wire_l1_w14_n10_mux_dataout;
	wire	wire_l1_w14_n11_mux_dataout;
	wire	wire_l1_w14_n12_mux_dataout;
	wire	wire_l1_w14_n13_mux_dataout;
	wire	wire_l1_w14_n14_mux_dataout;
	wire	wire_l1_w14_n15_mux_dataout;
	wire	wire_l1_w14_n1_mux_dataout;
	wire	wire_l1_w14_n2_mux_dataout;
	wire	wire_l1_w14_n3_mux_dataout;
	wire	wire_l1_w14_n4_mux_dataout;
	wire	wire_l1_w14_n5_mux_dataout;
	wire	wire_l1_w14_n6_mux_dataout;
	wire	wire_l1_w14_n7_mux_dataout;
	wire	wire_l1_w14_n8_mux_dataout;
	wire	wire_l1_w14_n9_mux_dataout;
	wire	wire_l1_w15_n0_mux_dataout;
	wire	wire_l1_w15_n10_mux_dataout;
	wire	wire_l1_w15_n11_mux_dataout;
	wire	wire_l1_w15_n12_mux_dataout;
	wire	wire_l1_w15_n13_mux_dataout;
	wire	wire_l1_w15_n14_mux_dataout;
	wire	wire_l1_w15_n15_mux_dataout;
	wire	wire_l1_w15_n1_mux_dataout;
	wire	wire_l1_w15_n2_mux_dataout;
	wire	wire_l1_w15_n3_mux_dataout;
	wire	wire_l1_w15_n4_mux_dataout;
	wire	wire_l1_w15_n5_mux_dataout;
	wire	wire_l1_w15_n6_mux_dataout;
	wire	wire_l1_w15_n7_mux_dataout;
	wire	wire_l1_w15_n8_mux_dataout;
	wire	wire_l1_w15_n9_mux_dataout;
	wire	wire_l1_w16_n0_mux_dataout;
	wire	wire_l1_w16_n10_mux_dataout;
	wire	wire_l1_w16_n11_mux_dataout;
	wire	wire_l1_w16_n12_mux_dataout;
	wire	wire_l1_w16_n13_mux_dataout;
	wire	wire_l1_w16_n14_mux_dataout;
	wire	wire_l1_w16_n15_mux_dataout;
	wire	wire_l1_w16_n1_mux_dataout;
	wire	wire_l1_w16_n2_mux_dataout;
	wire	wire_l1_w16_n3_mux_dataout;
	wire	wire_l1_w16_n4_mux_dataout;
	wire	wire_l1_w16_n5_mux_dataout;
	wire	wire_l1_w16_n6_mux_dataout;
	wire	wire_l1_w16_n7_mux_dataout;
	wire	wire_l1_w16_n8_mux_dataout;
	wire	wire_l1_w16_n9_mux_dataout;
	wire	wire_l1_w17_n0_mux_dataout;
	wire	wire_l1_w17_n10_mux_dataout;
	wire	wire_l1_w17_n11_mux_dataout;
	wire	wire_l1_w17_n12_mux_dataout;
	wire	wire_l1_w17_n13_mux_dataout;
	wire	wire_l1_w17_n14_mux_dataout;
	wire	wire_l1_w17_n15_mux_dataout;
	wire	wire_l1_w17_n1_mux_dataout;
	wire	wire_l1_w17_n2_mux_dataout;
	wire	wire_l1_w17_n3_mux_dataout;
	wire	wire_l1_w17_n4_mux_dataout;
	wire	wire_l1_w17_n5_mux_dataout;
	wire	wire_l1_w17_n6_mux_dataout;
	wire	wire_l1_w17_n7_mux_dataout;
	wire	wire_l1_w17_n8_mux_dataout;
	wire	wire_l1_w17_n9_mux_dataout;
	wire	wire_l1_w18_n0_mux_dataout;
	wire	wire_l1_w18_n10_mux_dataout;
	wire	wire_l1_w18_n11_mux_dataout;
	wire	wire_l1_w18_n12_mux_dataout;
	wire	wire_l1_w18_n13_mux_dataout;
	wire	wire_l1_w18_n14_mux_dataout;
	wire	wire_l1_w18_n15_mux_dataout;
	wire	wire_l1_w18_n1_mux_dataout;
	wire	wire_l1_w18_n2_mux_dataout;
	wire	wire_l1_w18_n3_mux_dataout;
	wire	wire_l1_w18_n4_mux_dataout;
	wire	wire_l1_w18_n5_mux_dataout;
	wire	wire_l1_w18_n6_mux_dataout;
	wire	wire_l1_w18_n7_mux_dataout;
	wire	wire_l1_w18_n8_mux_dataout;
	wire	wire_l1_w18_n9_mux_dataout;
	wire	wire_l1_w19_n0_mux_dataout;
	wire	wire_l1_w19_n10_mux_dataout;
	wire	wire_l1_w19_n11_mux_dataout;
	wire	wire_l1_w19_n12_mux_dataout;
	wire	wire_l1_w19_n13_mux_dataout;
	wire	wire_l1_w19_n14_mux_dataout;
	wire	wire_l1_w19_n15_mux_dataout;
	wire	wire_l1_w19_n1_mux_dataout;
	wire	wire_l1_w19_n2_mux_dataout;
	wire	wire_l1_w19_n3_mux_dataout;
	wire	wire_l1_w19_n4_mux_dataout;
	wire	wire_l1_w19_n5_mux_dataout;
	wire	wire_l1_w19_n6_mux_dataout;
	wire	wire_l1_w19_n7_mux_dataout;
	wire	wire_l1_w19_n8_mux_dataout;
	wire	wire_l1_w19_n9_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n10_mux_dataout;
	wire	wire_l1_w1_n11_mux_dataout;
	wire	wire_l1_w1_n12_mux_dataout;
	wire	wire_l1_w1_n13_mux_dataout;
	wire	wire_l1_w1_n14_mux_dataout;
	wire	wire_l1_w1_n15_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w1_n8_mux_dataout;
	wire	wire_l1_w1_n9_mux_dataout;
	wire	wire_l1_w20_n0_mux_dataout;
	wire	wire_l1_w20_n10_mux_dataout;
	wire	wire_l1_w20_n11_mux_dataout;
	wire	wire_l1_w20_n12_mux_dataout;
	wire	wire_l1_w20_n13_mux_dataout;
	wire	wire_l1_w20_n14_mux_dataout;
	wire	wire_l1_w20_n15_mux_dataout;
	wire	wire_l1_w20_n1_mux_dataout;
	wire	wire_l1_w20_n2_mux_dataout;
	wire	wire_l1_w20_n3_mux_dataout;
	wire	wire_l1_w20_n4_mux_dataout;
	wire	wire_l1_w20_n5_mux_dataout;
	wire	wire_l1_w20_n6_mux_dataout;
	wire	wire_l1_w20_n7_mux_dataout;
	wire	wire_l1_w20_n8_mux_dataout;
	wire	wire_l1_w20_n9_mux_dataout;
	wire	wire_l1_w21_n0_mux_dataout;
	wire	wire_l1_w21_n10_mux_dataout;
	wire	wire_l1_w21_n11_mux_dataout;
	wire	wire_l1_w21_n12_mux_dataout;
	wire	wire_l1_w21_n13_mux_dataout;
	wire	wire_l1_w21_n14_mux_dataout;
	wire	wire_l1_w21_n15_mux_dataout;
	wire	wire_l1_w21_n1_mux_dataout;
	wire	wire_l1_w21_n2_mux_dataout;
	wire	wire_l1_w21_n3_mux_dataout;
	wire	wire_l1_w21_n4_mux_dataout;
	wire	wire_l1_w21_n5_mux_dataout;
	wire	wire_l1_w21_n6_mux_dataout;
	wire	wire_l1_w21_n7_mux_dataout;
	wire	wire_l1_w21_n8_mux_dataout;
	wire	wire_l1_w21_n9_mux_dataout;
	wire	wire_l1_w22_n0_mux_dataout;
	wire	wire_l1_w22_n10_mux_dataout;
	wire	wire_l1_w22_n11_mux_dataout;
	wire	wire_l1_w22_n12_mux_dataout;
	wire	wire_l1_w22_n13_mux_dataout;
	wire	wire_l1_w22_n14_mux_dataout;
	wire	wire_l1_w22_n15_mux_dataout;
	wire	wire_l1_w22_n1_mux_dataout;
	wire	wire_l1_w22_n2_mux_dataout;
	wire	wire_l1_w22_n3_mux_dataout;
	wire	wire_l1_w22_n4_mux_dataout;
	wire	wire_l1_w22_n5_mux_dataout;
	wire	wire_l1_w22_n6_mux_dataout;
	wire	wire_l1_w22_n7_mux_dataout;
	wire	wire_l1_w22_n8_mux_dataout;
	wire	wire_l1_w22_n9_mux_dataout;
	wire	wire_l1_w23_n0_mux_dataout;
	wire	wire_l1_w23_n10_mux_dataout;
	wire	wire_l1_w23_n11_mux_dataout;
	wire	wire_l1_w23_n12_mux_dataout;
	wire	wire_l1_w23_n13_mux_dataout;
	wire	wire_l1_w23_n14_mux_dataout;
	wire	wire_l1_w23_n15_mux_dataout;
	wire	wire_l1_w23_n1_mux_dataout;
	wire	wire_l1_w23_n2_mux_dataout;
	wire	wire_l1_w23_n3_mux_dataout;
	wire	wire_l1_w23_n4_mux_dataout;
	wire	wire_l1_w23_n5_mux_dataout;
	wire	wire_l1_w23_n6_mux_dataout;
	wire	wire_l1_w23_n7_mux_dataout;
	wire	wire_l1_w23_n8_mux_dataout;
	wire	wire_l1_w23_n9_mux_dataout;
	wire	wire_l1_w24_n0_mux_dataout;
	wire	wire_l1_w24_n10_mux_dataout;
	wire	wire_l1_w24_n11_mux_dataout;
	wire	wire_l1_w24_n12_mux_dataout;
	wire	wire_l1_w24_n13_mux_dataout;
	wire	wire_l1_w24_n14_mux_dataout;
	wire	wire_l1_w24_n15_mux_dataout;
	wire	wire_l1_w24_n1_mux_dataout;
	wire	wire_l1_w24_n2_mux_dataout;
	wire	wire_l1_w24_n3_mux_dataout;
	wire	wire_l1_w24_n4_mux_dataout;
	wire	wire_l1_w24_n5_mux_dataout;
	wire	wire_l1_w24_n6_mux_dataout;
	wire	wire_l1_w24_n7_mux_dataout;
	wire	wire_l1_w24_n8_mux_dataout;
	wire	wire_l1_w24_n9_mux_dataout;
	wire	wire_l1_w25_n0_mux_dataout;
	wire	wire_l1_w25_n10_mux_dataout;
	wire	wire_l1_w25_n11_mux_dataout;
	wire	wire_l1_w25_n12_mux_dataout;
	wire	wire_l1_w25_n13_mux_dataout;
	wire	wire_l1_w25_n14_mux_dataout;
	wire	wire_l1_w25_n15_mux_dataout;
	wire	wire_l1_w25_n1_mux_dataout;
	wire	wire_l1_w25_n2_mux_dataout;
	wire	wire_l1_w25_n3_mux_dataout;
	wire	wire_l1_w25_n4_mux_dataout;
	wire	wire_l1_w25_n5_mux_dataout;
	wire	wire_l1_w25_n6_mux_dataout;
	wire	wire_l1_w25_n7_mux_dataout;
	wire	wire_l1_w25_n8_mux_dataout;
	wire	wire_l1_w25_n9_mux_dataout;
	wire	wire_l1_w26_n0_mux_dataout;
	wire	wire_l1_w26_n10_mux_dataout;
	wire	wire_l1_w26_n11_mux_dataout;
	wire	wire_l1_w26_n12_mux_dataout;
	wire	wire_l1_w26_n13_mux_dataout;
	wire	wire_l1_w26_n14_mux_dataout;
	wire	wire_l1_w26_n15_mux_dataout;
	wire	wire_l1_w26_n1_mux_dataout;
	wire	wire_l1_w26_n2_mux_dataout;
	wire	wire_l1_w26_n3_mux_dataout;
	wire	wire_l1_w26_n4_mux_dataout;
	wire	wire_l1_w26_n5_mux_dataout;
	wire	wire_l1_w26_n6_mux_dataout;
	wire	wire_l1_w26_n7_mux_dataout;
	wire	wire_l1_w26_n8_mux_dataout;
	wire	wire_l1_w26_n9_mux_dataout;
	wire	wire_l1_w27_n0_mux_dataout;
	wire	wire_l1_w27_n10_mux_dataout;
	wire	wire_l1_w27_n11_mux_dataout;
	wire	wire_l1_w27_n12_mux_dataout;
	wire	wire_l1_w27_n13_mux_dataout;
	wire	wire_l1_w27_n14_mux_dataout;
	wire	wire_l1_w27_n15_mux_dataout;
	wire	wire_l1_w27_n1_mux_dataout;
	wire	wire_l1_w27_n2_mux_dataout;
	wire	wire_l1_w27_n3_mux_dataout;
	wire	wire_l1_w27_n4_mux_dataout;
	wire	wire_l1_w27_n5_mux_dataout;
	wire	wire_l1_w27_n6_mux_dataout;
	wire	wire_l1_w27_n7_mux_dataout;
	wire	wire_l1_w27_n8_mux_dataout;
	wire	wire_l1_w27_n9_mux_dataout;
	wire	wire_l1_w28_n0_mux_dataout;
	wire	wire_l1_w28_n10_mux_dataout;
	wire	wire_l1_w28_n11_mux_dataout;
	wire	wire_l1_w28_n12_mux_dataout;
	wire	wire_l1_w28_n13_mux_dataout;
	wire	wire_l1_w28_n14_mux_dataout;
	wire	wire_l1_w28_n15_mux_dataout;
	wire	wire_l1_w28_n1_mux_dataout;
	wire	wire_l1_w28_n2_mux_dataout;
	wire	wire_l1_w28_n3_mux_dataout;
	wire	wire_l1_w28_n4_mux_dataout;
	wire	wire_l1_w28_n5_mux_dataout;
	wire	wire_l1_w28_n6_mux_dataout;
	wire	wire_l1_w28_n7_mux_dataout;
	wire	wire_l1_w28_n8_mux_dataout;
	wire	wire_l1_w28_n9_mux_dataout;
	wire	wire_l1_w29_n0_mux_dataout;
	wire	wire_l1_w29_n10_mux_dataout;
	wire	wire_l1_w29_n11_mux_dataout;
	wire	wire_l1_w29_n12_mux_dataout;
	wire	wire_l1_w29_n13_mux_dataout;
	wire	wire_l1_w29_n14_mux_dataout;
	wire	wire_l1_w29_n15_mux_dataout;
	wire	wire_l1_w29_n1_mux_dataout;
	wire	wire_l1_w29_n2_mux_dataout;
	wire	wire_l1_w29_n3_mux_dataout;
	wire	wire_l1_w29_n4_mux_dataout;
	wire	wire_l1_w29_n5_mux_dataout;
	wire	wire_l1_w29_n6_mux_dataout;
	wire	wire_l1_w29_n7_mux_dataout;
	wire	wire_l1_w29_n8_mux_dataout;
	wire	wire_l1_w29_n9_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n10_mux_dataout;
	wire	wire_l1_w2_n11_mux_dataout;
	wire	wire_l1_w2_n12_mux_dataout;
	wire	wire_l1_w2_n13_mux_dataout;
	wire	wire_l1_w2_n14_mux_dataout;
	wire	wire_l1_w2_n15_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w2_n8_mux_dataout;
	wire	wire_l1_w2_n9_mux_dataout;
	wire	wire_l1_w30_n0_mux_dataout;
	wire	wire_l1_w30_n10_mux_dataout;
	wire	wire_l1_w30_n11_mux_dataout;
	wire	wire_l1_w30_n12_mux_dataout;
	wire	wire_l1_w30_n13_mux_dataout;
	wire	wire_l1_w30_n14_mux_dataout;
	wire	wire_l1_w30_n15_mux_dataout;
	wire	wire_l1_w30_n1_mux_dataout;
	wire	wire_l1_w30_n2_mux_dataout;
	wire	wire_l1_w30_n3_mux_dataout;
	wire	wire_l1_w30_n4_mux_dataout;
	wire	wire_l1_w30_n5_mux_dataout;
	wire	wire_l1_w30_n6_mux_dataout;
	wire	wire_l1_w30_n7_mux_dataout;
	wire	wire_l1_w30_n8_mux_dataout;
	wire	wire_l1_w30_n9_mux_dataout;
	wire	wire_l1_w31_n0_mux_dataout;
	wire	wire_l1_w31_n10_mux_dataout;
	wire	wire_l1_w31_n11_mux_dataout;
	wire	wire_l1_w31_n12_mux_dataout;
	wire	wire_l1_w31_n13_mux_dataout;
	wire	wire_l1_w31_n14_mux_dataout;
	wire	wire_l1_w31_n15_mux_dataout;
	wire	wire_l1_w31_n1_mux_dataout;
	wire	wire_l1_w31_n2_mux_dataout;
	wire	wire_l1_w31_n3_mux_dataout;
	wire	wire_l1_w31_n4_mux_dataout;
	wire	wire_l1_w31_n5_mux_dataout;
	wire	wire_l1_w31_n6_mux_dataout;
	wire	wire_l1_w31_n7_mux_dataout;
	wire	wire_l1_w31_n8_mux_dataout;
	wire	wire_l1_w31_n9_mux_dataout;
	wire	wire_l1_w32_n0_mux_dataout;
	wire	wire_l1_w32_n10_mux_dataout;
	wire	wire_l1_w32_n11_mux_dataout;
	wire	wire_l1_w32_n12_mux_dataout;
	wire	wire_l1_w32_n13_mux_dataout;
	wire	wire_l1_w32_n14_mux_dataout;
	wire	wire_l1_w32_n15_mux_dataout;
	wire	wire_l1_w32_n1_mux_dataout;
	wire	wire_l1_w32_n2_mux_dataout;
	wire	wire_l1_w32_n3_mux_dataout;
	wire	wire_l1_w32_n4_mux_dataout;
	wire	wire_l1_w32_n5_mux_dataout;
	wire	wire_l1_w32_n6_mux_dataout;
	wire	wire_l1_w32_n7_mux_dataout;
	wire	wire_l1_w32_n8_mux_dataout;
	wire	wire_l1_w32_n9_mux_dataout;
	wire	wire_l1_w33_n0_mux_dataout;
	wire	wire_l1_w33_n10_mux_dataout;
	wire	wire_l1_w33_n11_mux_dataout;
	wire	wire_l1_w33_n12_mux_dataout;
	wire	wire_l1_w33_n13_mux_dataout;
	wire	wire_l1_w33_n14_mux_dataout;
	wire	wire_l1_w33_n15_mux_dataout;
	wire	wire_l1_w33_n1_mux_dataout;
	wire	wire_l1_w33_n2_mux_dataout;
	wire	wire_l1_w33_n3_mux_dataout;
	wire	wire_l1_w33_n4_mux_dataout;
	wire	wire_l1_w33_n5_mux_dataout;
	wire	wire_l1_w33_n6_mux_dataout;
	wire	wire_l1_w33_n7_mux_dataout;
	wire	wire_l1_w33_n8_mux_dataout;
	wire	wire_l1_w33_n9_mux_dataout;
	wire	wire_l1_w34_n0_mux_dataout;
	wire	wire_l1_w34_n10_mux_dataout;
	wire	wire_l1_w34_n11_mux_dataout;
	wire	wire_l1_w34_n12_mux_dataout;
	wire	wire_l1_w34_n13_mux_dataout;
	wire	wire_l1_w34_n14_mux_dataout;
	wire	wire_l1_w34_n15_mux_dataout;
	wire	wire_l1_w34_n1_mux_dataout;
	wire	wire_l1_w34_n2_mux_dataout;
	wire	wire_l1_w34_n3_mux_dataout;
	wire	wire_l1_w34_n4_mux_dataout;
	wire	wire_l1_w34_n5_mux_dataout;
	wire	wire_l1_w34_n6_mux_dataout;
	wire	wire_l1_w34_n7_mux_dataout;
	wire	wire_l1_w34_n8_mux_dataout;
	wire	wire_l1_w34_n9_mux_dataout;
	wire	wire_l1_w35_n0_mux_dataout;
	wire	wire_l1_w35_n10_mux_dataout;
	wire	wire_l1_w35_n11_mux_dataout;
	wire	wire_l1_w35_n12_mux_dataout;
	wire	wire_l1_w35_n13_mux_dataout;
	wire	wire_l1_w35_n14_mux_dataout;
	wire	wire_l1_w35_n15_mux_dataout;
	wire	wire_l1_w35_n1_mux_dataout;
	wire	wire_l1_w35_n2_mux_dataout;
	wire	wire_l1_w35_n3_mux_dataout;
	wire	wire_l1_w35_n4_mux_dataout;
	wire	wire_l1_w35_n5_mux_dataout;
	wire	wire_l1_w35_n6_mux_dataout;
	wire	wire_l1_w35_n7_mux_dataout;
	wire	wire_l1_w35_n8_mux_dataout;
	wire	wire_l1_w35_n9_mux_dataout;
	wire	wire_l1_w36_n0_mux_dataout;
	wire	wire_l1_w36_n10_mux_dataout;
	wire	wire_l1_w36_n11_mux_dataout;
	wire	wire_l1_w36_n12_mux_dataout;
	wire	wire_l1_w36_n13_mux_dataout;
	wire	wire_l1_w36_n14_mux_dataout;
	wire	wire_l1_w36_n15_mux_dataout;
	wire	wire_l1_w36_n1_mux_dataout;
	wire	wire_l1_w36_n2_mux_dataout;
	wire	wire_l1_w36_n3_mux_dataout;
	wire	wire_l1_w36_n4_mux_dataout;
	wire	wire_l1_w36_n5_mux_dataout;
	wire	wire_l1_w36_n6_mux_dataout;
	wire	wire_l1_w36_n7_mux_dataout;
	wire	wire_l1_w36_n8_mux_dataout;
	wire	wire_l1_w36_n9_mux_dataout;
	wire	wire_l1_w37_n0_mux_dataout;
	wire	wire_l1_w37_n10_mux_dataout;
	wire	wire_l1_w37_n11_mux_dataout;
	wire	wire_l1_w37_n12_mux_dataout;
	wire	wire_l1_w37_n13_mux_dataout;
	wire	wire_l1_w37_n14_mux_dataout;
	wire	wire_l1_w37_n15_mux_dataout;
	wire	wire_l1_w37_n1_mux_dataout;
	wire	wire_l1_w37_n2_mux_dataout;
	wire	wire_l1_w37_n3_mux_dataout;
	wire	wire_l1_w37_n4_mux_dataout;
	wire	wire_l1_w37_n5_mux_dataout;
	wire	wire_l1_w37_n6_mux_dataout;
	wire	wire_l1_w37_n7_mux_dataout;
	wire	wire_l1_w37_n8_mux_dataout;
	wire	wire_l1_w37_n9_mux_dataout;
	wire	wire_l1_w38_n0_mux_dataout;
	wire	wire_l1_w38_n10_mux_dataout;
	wire	wire_l1_w38_n11_mux_dataout;
	wire	wire_l1_w38_n12_mux_dataout;
	wire	wire_l1_w38_n13_mux_dataout;
	wire	wire_l1_w38_n14_mux_dataout;
	wire	wire_l1_w38_n15_mux_dataout;
	wire	wire_l1_w38_n1_mux_dataout;
	wire	wire_l1_w38_n2_mux_dataout;
	wire	wire_l1_w38_n3_mux_dataout;
	wire	wire_l1_w38_n4_mux_dataout;
	wire	wire_l1_w38_n5_mux_dataout;
	wire	wire_l1_w38_n6_mux_dataout;
	wire	wire_l1_w38_n7_mux_dataout;
	wire	wire_l1_w38_n8_mux_dataout;
	wire	wire_l1_w38_n9_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n10_mux_dataout;
	wire	wire_l1_w3_n11_mux_dataout;
	wire	wire_l1_w3_n12_mux_dataout;
	wire	wire_l1_w3_n13_mux_dataout;
	wire	wire_l1_w3_n14_mux_dataout;
	wire	wire_l1_w3_n15_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w3_n8_mux_dataout;
	wire	wire_l1_w3_n9_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n10_mux_dataout;
	wire	wire_l1_w4_n11_mux_dataout;
	wire	wire_l1_w4_n12_mux_dataout;
	wire	wire_l1_w4_n13_mux_dataout;
	wire	wire_l1_w4_n14_mux_dataout;
	wire	wire_l1_w4_n15_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w4_n8_mux_dataout;
	wire	wire_l1_w4_n9_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n10_mux_dataout;
	wire	wire_l1_w5_n11_mux_dataout;
	wire	wire_l1_w5_n12_mux_dataout;
	wire	wire_l1_w5_n13_mux_dataout;
	wire	wire_l1_w5_n14_mux_dataout;
	wire	wire_l1_w5_n15_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w5_n8_mux_dataout;
	wire	wire_l1_w5_n9_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n10_mux_dataout;
	wire	wire_l1_w6_n11_mux_dataout;
	wire	wire_l1_w6_n12_mux_dataout;
	wire	wire_l1_w6_n13_mux_dataout;
	wire	wire_l1_w6_n14_mux_dataout;
	wire	wire_l1_w6_n15_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w6_n8_mux_dataout;
	wire	wire_l1_w6_n9_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n10_mux_dataout;
	wire	wire_l1_w7_n11_mux_dataout;
	wire	wire_l1_w7_n12_mux_dataout;
	wire	wire_l1_w7_n13_mux_dataout;
	wire	wire_l1_w7_n14_mux_dataout;
	wire	wire_l1_w7_n15_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l1_w7_n8_mux_dataout;
	wire	wire_l1_w7_n9_mux_dataout;
	wire	wire_l1_w8_n0_mux_dataout;
	wire	wire_l1_w8_n10_mux_dataout;
	wire	wire_l1_w8_n11_mux_dataout;
	wire	wire_l1_w8_n12_mux_dataout;
	wire	wire_l1_w8_n13_mux_dataout;
	wire	wire_l1_w8_n14_mux_dataout;
	wire	wire_l1_w8_n15_mux_dataout;
	wire	wire_l1_w8_n1_mux_dataout;
	wire	wire_l1_w8_n2_mux_dataout;
	wire	wire_l1_w8_n3_mux_dataout;
	wire	wire_l1_w8_n4_mux_dataout;
	wire	wire_l1_w8_n5_mux_dataout;
	wire	wire_l1_w8_n6_mux_dataout;
	wire	wire_l1_w8_n7_mux_dataout;
	wire	wire_l1_w8_n8_mux_dataout;
	wire	wire_l1_w8_n9_mux_dataout;
	wire	wire_l1_w9_n0_mux_dataout;
	wire	wire_l1_w9_n10_mux_dataout;
	wire	wire_l1_w9_n11_mux_dataout;
	wire	wire_l1_w9_n12_mux_dataout;
	wire	wire_l1_w9_n13_mux_dataout;
	wire	wire_l1_w9_n14_mux_dataout;
	wire	wire_l1_w9_n15_mux_dataout;
	wire	wire_l1_w9_n1_mux_dataout;
	wire	wire_l1_w9_n2_mux_dataout;
	wire	wire_l1_w9_n3_mux_dataout;
	wire	wire_l1_w9_n4_mux_dataout;
	wire	wire_l1_w9_n5_mux_dataout;
	wire	wire_l1_w9_n6_mux_dataout;
	wire	wire_l1_w9_n7_mux_dataout;
	wire	wire_l1_w9_n8_mux_dataout;
	wire	wire_l1_w9_n9_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w0_n4_mux_dataout;
	wire	wire_l2_w0_n5_mux_dataout;
	wire	wire_l2_w0_n6_mux_dataout;
	wire	wire_l2_w0_n7_mux_dataout;
	wire	wire_l2_w10_n0_mux_dataout;
	wire	wire_l2_w10_n1_mux_dataout;
	wire	wire_l2_w10_n2_mux_dataout;
	wire	wire_l2_w10_n3_mux_dataout;
	wire	wire_l2_w10_n4_mux_dataout;
	wire	wire_l2_w10_n5_mux_dataout;
	wire	wire_l2_w10_n6_mux_dataout;
	wire	wire_l2_w10_n7_mux_dataout;
	wire	wire_l2_w11_n0_mux_dataout;
	wire	wire_l2_w11_n1_mux_dataout;
	wire	wire_l2_w11_n2_mux_dataout;
	wire	wire_l2_w11_n3_mux_dataout;
	wire	wire_l2_w11_n4_mux_dataout;
	wire	wire_l2_w11_n5_mux_dataout;
	wire	wire_l2_w11_n6_mux_dataout;
	wire	wire_l2_w11_n7_mux_dataout;
	wire	wire_l2_w12_n0_mux_dataout;
	wire	wire_l2_w12_n1_mux_dataout;
	wire	wire_l2_w12_n2_mux_dataout;
	wire	wire_l2_w12_n3_mux_dataout;
	wire	wire_l2_w12_n4_mux_dataout;
	wire	wire_l2_w12_n5_mux_dataout;
	wire	wire_l2_w12_n6_mux_dataout;
	wire	wire_l2_w12_n7_mux_dataout;
	wire	wire_l2_w13_n0_mux_dataout;
	wire	wire_l2_w13_n1_mux_dataout;
	wire	wire_l2_w13_n2_mux_dataout;
	wire	wire_l2_w13_n3_mux_dataout;
	wire	wire_l2_w13_n4_mux_dataout;
	wire	wire_l2_w13_n5_mux_dataout;
	wire	wire_l2_w13_n6_mux_dataout;
	wire	wire_l2_w13_n7_mux_dataout;
	wire	wire_l2_w14_n0_mux_dataout;
	wire	wire_l2_w14_n1_mux_dataout;
	wire	wire_l2_w14_n2_mux_dataout;
	wire	wire_l2_w14_n3_mux_dataout;
	wire	wire_l2_w14_n4_mux_dataout;
	wire	wire_l2_w14_n5_mux_dataout;
	wire	wire_l2_w14_n6_mux_dataout;
	wire	wire_l2_w14_n7_mux_dataout;
	wire	wire_l2_w15_n0_mux_dataout;
	wire	wire_l2_w15_n1_mux_dataout;
	wire	wire_l2_w15_n2_mux_dataout;
	wire	wire_l2_w15_n3_mux_dataout;
	wire	wire_l2_w15_n4_mux_dataout;
	wire	wire_l2_w15_n5_mux_dataout;
	wire	wire_l2_w15_n6_mux_dataout;
	wire	wire_l2_w15_n7_mux_dataout;
	wire	wire_l2_w16_n0_mux_dataout;
	wire	wire_l2_w16_n1_mux_dataout;
	wire	wire_l2_w16_n2_mux_dataout;
	wire	wire_l2_w16_n3_mux_dataout;
	wire	wire_l2_w16_n4_mux_dataout;
	wire	wire_l2_w16_n5_mux_dataout;
	wire	wire_l2_w16_n6_mux_dataout;
	wire	wire_l2_w16_n7_mux_dataout;
	wire	wire_l2_w17_n0_mux_dataout;
	wire	wire_l2_w17_n1_mux_dataout;
	wire	wire_l2_w17_n2_mux_dataout;
	wire	wire_l2_w17_n3_mux_dataout;
	wire	wire_l2_w17_n4_mux_dataout;
	wire	wire_l2_w17_n5_mux_dataout;
	wire	wire_l2_w17_n6_mux_dataout;
	wire	wire_l2_w17_n7_mux_dataout;
	wire	wire_l2_w18_n0_mux_dataout;
	wire	wire_l2_w18_n1_mux_dataout;
	wire	wire_l2_w18_n2_mux_dataout;
	wire	wire_l2_w18_n3_mux_dataout;
	wire	wire_l2_w18_n4_mux_dataout;
	wire	wire_l2_w18_n5_mux_dataout;
	wire	wire_l2_w18_n6_mux_dataout;
	wire	wire_l2_w18_n7_mux_dataout;
	wire	wire_l2_w19_n0_mux_dataout;
	wire	wire_l2_w19_n1_mux_dataout;
	wire	wire_l2_w19_n2_mux_dataout;
	wire	wire_l2_w19_n3_mux_dataout;
	wire	wire_l2_w19_n4_mux_dataout;
	wire	wire_l2_w19_n5_mux_dataout;
	wire	wire_l2_w19_n6_mux_dataout;
	wire	wire_l2_w19_n7_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w1_n4_mux_dataout;
	wire	wire_l2_w1_n5_mux_dataout;
	wire	wire_l2_w1_n6_mux_dataout;
	wire	wire_l2_w1_n7_mux_dataout;
	wire	wire_l2_w20_n0_mux_dataout;
	wire	wire_l2_w20_n1_mux_dataout;
	wire	wire_l2_w20_n2_mux_dataout;
	wire	wire_l2_w20_n3_mux_dataout;
	wire	wire_l2_w20_n4_mux_dataout;
	wire	wire_l2_w20_n5_mux_dataout;
	wire	wire_l2_w20_n6_mux_dataout;
	wire	wire_l2_w20_n7_mux_dataout;
	wire	wire_l2_w21_n0_mux_dataout;
	wire	wire_l2_w21_n1_mux_dataout;
	wire	wire_l2_w21_n2_mux_dataout;
	wire	wire_l2_w21_n3_mux_dataout;
	wire	wire_l2_w21_n4_mux_dataout;
	wire	wire_l2_w21_n5_mux_dataout;
	wire	wire_l2_w21_n6_mux_dataout;
	wire	wire_l2_w21_n7_mux_dataout;
	wire	wire_l2_w22_n0_mux_dataout;
	wire	wire_l2_w22_n1_mux_dataout;
	wire	wire_l2_w22_n2_mux_dataout;
	wire	wire_l2_w22_n3_mux_dataout;
	wire	wire_l2_w22_n4_mux_dataout;
	wire	wire_l2_w22_n5_mux_dataout;
	wire	wire_l2_w22_n6_mux_dataout;
	wire	wire_l2_w22_n7_mux_dataout;
	wire	wire_l2_w23_n0_mux_dataout;
	wire	wire_l2_w23_n1_mux_dataout;
	wire	wire_l2_w23_n2_mux_dataout;
	wire	wire_l2_w23_n3_mux_dataout;
	wire	wire_l2_w23_n4_mux_dataout;
	wire	wire_l2_w23_n5_mux_dataout;
	wire	wire_l2_w23_n6_mux_dataout;
	wire	wire_l2_w23_n7_mux_dataout;
	wire	wire_l2_w24_n0_mux_dataout;
	wire	wire_l2_w24_n1_mux_dataout;
	wire	wire_l2_w24_n2_mux_dataout;
	wire	wire_l2_w24_n3_mux_dataout;
	wire	wire_l2_w24_n4_mux_dataout;
	wire	wire_l2_w24_n5_mux_dataout;
	wire	wire_l2_w24_n6_mux_dataout;
	wire	wire_l2_w24_n7_mux_dataout;
	wire	wire_l2_w25_n0_mux_dataout;
	wire	wire_l2_w25_n1_mux_dataout;
	wire	wire_l2_w25_n2_mux_dataout;
	wire	wire_l2_w25_n3_mux_dataout;
	wire	wire_l2_w25_n4_mux_dataout;
	wire	wire_l2_w25_n5_mux_dataout;
	wire	wire_l2_w25_n6_mux_dataout;
	wire	wire_l2_w25_n7_mux_dataout;
	wire	wire_l2_w26_n0_mux_dataout;
	wire	wire_l2_w26_n1_mux_dataout;
	wire	wire_l2_w26_n2_mux_dataout;
	wire	wire_l2_w26_n3_mux_dataout;
	wire	wire_l2_w26_n4_mux_dataout;
	wire	wire_l2_w26_n5_mux_dataout;
	wire	wire_l2_w26_n6_mux_dataout;
	wire	wire_l2_w26_n7_mux_dataout;
	wire	wire_l2_w27_n0_mux_dataout;
	wire	wire_l2_w27_n1_mux_dataout;
	wire	wire_l2_w27_n2_mux_dataout;
	wire	wire_l2_w27_n3_mux_dataout;
	wire	wire_l2_w27_n4_mux_dataout;
	wire	wire_l2_w27_n5_mux_dataout;
	wire	wire_l2_w27_n6_mux_dataout;
	wire	wire_l2_w27_n7_mux_dataout;
	wire	wire_l2_w28_n0_mux_dataout;
	wire	wire_l2_w28_n1_mux_dataout;
	wire	wire_l2_w28_n2_mux_dataout;
	wire	wire_l2_w28_n3_mux_dataout;
	wire	wire_l2_w28_n4_mux_dataout;
	wire	wire_l2_w28_n5_mux_dataout;
	wire	wire_l2_w28_n6_mux_dataout;
	wire	wire_l2_w28_n7_mux_dataout;
	wire	wire_l2_w29_n0_mux_dataout;
	wire	wire_l2_w29_n1_mux_dataout;
	wire	wire_l2_w29_n2_mux_dataout;
	wire	wire_l2_w29_n3_mux_dataout;
	wire	wire_l2_w29_n4_mux_dataout;
	wire	wire_l2_w29_n5_mux_dataout;
	wire	wire_l2_w29_n6_mux_dataout;
	wire	wire_l2_w29_n7_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w2_n4_mux_dataout;
	wire	wire_l2_w2_n5_mux_dataout;
	wire	wire_l2_w2_n6_mux_dataout;
	wire	wire_l2_w2_n7_mux_dataout;
	wire	wire_l2_w30_n0_mux_dataout;
	wire	wire_l2_w30_n1_mux_dataout;
	wire	wire_l2_w30_n2_mux_dataout;
	wire	wire_l2_w30_n3_mux_dataout;
	wire	wire_l2_w30_n4_mux_dataout;
	wire	wire_l2_w30_n5_mux_dataout;
	wire	wire_l2_w30_n6_mux_dataout;
	wire	wire_l2_w30_n7_mux_dataout;
	wire	wire_l2_w31_n0_mux_dataout;
	wire	wire_l2_w31_n1_mux_dataout;
	wire	wire_l2_w31_n2_mux_dataout;
	wire	wire_l2_w31_n3_mux_dataout;
	wire	wire_l2_w31_n4_mux_dataout;
	wire	wire_l2_w31_n5_mux_dataout;
	wire	wire_l2_w31_n6_mux_dataout;
	wire	wire_l2_w31_n7_mux_dataout;
	wire	wire_l2_w32_n0_mux_dataout;
	wire	wire_l2_w32_n1_mux_dataout;
	wire	wire_l2_w32_n2_mux_dataout;
	wire	wire_l2_w32_n3_mux_dataout;
	wire	wire_l2_w32_n4_mux_dataout;
	wire	wire_l2_w32_n5_mux_dataout;
	wire	wire_l2_w32_n6_mux_dataout;
	wire	wire_l2_w32_n7_mux_dataout;
	wire	wire_l2_w33_n0_mux_dataout;
	wire	wire_l2_w33_n1_mux_dataout;
	wire	wire_l2_w33_n2_mux_dataout;
	wire	wire_l2_w33_n3_mux_dataout;
	wire	wire_l2_w33_n4_mux_dataout;
	wire	wire_l2_w33_n5_mux_dataout;
	wire	wire_l2_w33_n6_mux_dataout;
	wire	wire_l2_w33_n7_mux_dataout;
	wire	wire_l2_w34_n0_mux_dataout;
	wire	wire_l2_w34_n1_mux_dataout;
	wire	wire_l2_w34_n2_mux_dataout;
	wire	wire_l2_w34_n3_mux_dataout;
	wire	wire_l2_w34_n4_mux_dataout;
	wire	wire_l2_w34_n5_mux_dataout;
	wire	wire_l2_w34_n6_mux_dataout;
	wire	wire_l2_w34_n7_mux_dataout;
	wire	wire_l2_w35_n0_mux_dataout;
	wire	wire_l2_w35_n1_mux_dataout;
	wire	wire_l2_w35_n2_mux_dataout;
	wire	wire_l2_w35_n3_mux_dataout;
	wire	wire_l2_w35_n4_mux_dataout;
	wire	wire_l2_w35_n5_mux_dataout;
	wire	wire_l2_w35_n6_mux_dataout;
	wire	wire_l2_w35_n7_mux_dataout;
	wire	wire_l2_w36_n0_mux_dataout;
	wire	wire_l2_w36_n1_mux_dataout;
	wire	wire_l2_w36_n2_mux_dataout;
	wire	wire_l2_w36_n3_mux_dataout;
	wire	wire_l2_w36_n4_mux_dataout;
	wire	wire_l2_w36_n5_mux_dataout;
	wire	wire_l2_w36_n6_mux_dataout;
	wire	wire_l2_w36_n7_mux_dataout;
	wire	wire_l2_w37_n0_mux_dataout;
	wire	wire_l2_w37_n1_mux_dataout;
	wire	wire_l2_w37_n2_mux_dataout;
	wire	wire_l2_w37_n3_mux_dataout;
	wire	wire_l2_w37_n4_mux_dataout;
	wire	wire_l2_w37_n5_mux_dataout;
	wire	wire_l2_w37_n6_mux_dataout;
	wire	wire_l2_w37_n7_mux_dataout;
	wire	wire_l2_w38_n0_mux_dataout;
	wire	wire_l2_w38_n1_mux_dataout;
	wire	wire_l2_w38_n2_mux_dataout;
	wire	wire_l2_w38_n3_mux_dataout;
	wire	wire_l2_w38_n4_mux_dataout;
	wire	wire_l2_w38_n5_mux_dataout;
	wire	wire_l2_w38_n6_mux_dataout;
	wire	wire_l2_w38_n7_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w3_n4_mux_dataout;
	wire	wire_l2_w3_n5_mux_dataout;
	wire	wire_l2_w3_n6_mux_dataout;
	wire	wire_l2_w3_n7_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w4_n4_mux_dataout;
	wire	wire_l2_w4_n5_mux_dataout;
	wire	wire_l2_w4_n6_mux_dataout;
	wire	wire_l2_w4_n7_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w5_n4_mux_dataout;
	wire	wire_l2_w5_n5_mux_dataout;
	wire	wire_l2_w5_n6_mux_dataout;
	wire	wire_l2_w5_n7_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w6_n4_mux_dataout;
	wire	wire_l2_w6_n5_mux_dataout;
	wire	wire_l2_w6_n6_mux_dataout;
	wire	wire_l2_w6_n7_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l2_w7_n4_mux_dataout;
	wire	wire_l2_w7_n5_mux_dataout;
	wire	wire_l2_w7_n6_mux_dataout;
	wire	wire_l2_w7_n7_mux_dataout;
	wire	wire_l2_w8_n0_mux_dataout;
	wire	wire_l2_w8_n1_mux_dataout;
	wire	wire_l2_w8_n2_mux_dataout;
	wire	wire_l2_w8_n3_mux_dataout;
	wire	wire_l2_w8_n4_mux_dataout;
	wire	wire_l2_w8_n5_mux_dataout;
	wire	wire_l2_w8_n6_mux_dataout;
	wire	wire_l2_w8_n7_mux_dataout;
	wire	wire_l2_w9_n0_mux_dataout;
	wire	wire_l2_w9_n1_mux_dataout;
	wire	wire_l2_w9_n2_mux_dataout;
	wire	wire_l2_w9_n3_mux_dataout;
	wire	wire_l2_w9_n4_mux_dataout;
	wire	wire_l2_w9_n5_mux_dataout;
	wire	wire_l2_w9_n6_mux_dataout;
	wire	wire_l2_w9_n7_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w0_n2_mux_dataout;
	wire	wire_l3_w0_n3_mux_dataout;
	wire	wire_l3_w10_n0_mux_dataout;
	wire	wire_l3_w10_n1_mux_dataout;
	wire	wire_l3_w10_n2_mux_dataout;
	wire	wire_l3_w10_n3_mux_dataout;
	wire	wire_l3_w11_n0_mux_dataout;
	wire	wire_l3_w11_n1_mux_dataout;
	wire	wire_l3_w11_n2_mux_dataout;
	wire	wire_l3_w11_n3_mux_dataout;
	wire	wire_l3_w12_n0_mux_dataout;
	wire	wire_l3_w12_n1_mux_dataout;
	wire	wire_l3_w12_n2_mux_dataout;
	wire	wire_l3_w12_n3_mux_dataout;
	wire	wire_l3_w13_n0_mux_dataout;
	wire	wire_l3_w13_n1_mux_dataout;
	wire	wire_l3_w13_n2_mux_dataout;
	wire	wire_l3_w13_n3_mux_dataout;
	wire	wire_l3_w14_n0_mux_dataout;
	wire	wire_l3_w14_n1_mux_dataout;
	wire	wire_l3_w14_n2_mux_dataout;
	wire	wire_l3_w14_n3_mux_dataout;
	wire	wire_l3_w15_n0_mux_dataout;
	wire	wire_l3_w15_n1_mux_dataout;
	wire	wire_l3_w15_n2_mux_dataout;
	wire	wire_l3_w15_n3_mux_dataout;
	wire	wire_l3_w16_n0_mux_dataout;
	wire	wire_l3_w16_n1_mux_dataout;
	wire	wire_l3_w16_n2_mux_dataout;
	wire	wire_l3_w16_n3_mux_dataout;
	wire	wire_l3_w17_n0_mux_dataout;
	wire	wire_l3_w17_n1_mux_dataout;
	wire	wire_l3_w17_n2_mux_dataout;
	wire	wire_l3_w17_n3_mux_dataout;
	wire	wire_l3_w18_n0_mux_dataout;
	wire	wire_l3_w18_n1_mux_dataout;
	wire	wire_l3_w18_n2_mux_dataout;
	wire	wire_l3_w18_n3_mux_dataout;
	wire	wire_l3_w19_n0_mux_dataout;
	wire	wire_l3_w19_n1_mux_dataout;
	wire	wire_l3_w19_n2_mux_dataout;
	wire	wire_l3_w19_n3_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w1_n2_mux_dataout;
	wire	wire_l3_w1_n3_mux_dataout;
	wire	wire_l3_w20_n0_mux_dataout;
	wire	wire_l3_w20_n1_mux_dataout;
	wire	wire_l3_w20_n2_mux_dataout;
	wire	wire_l3_w20_n3_mux_dataout;
	wire	wire_l3_w21_n0_mux_dataout;
	wire	wire_l3_w21_n1_mux_dataout;
	wire	wire_l3_w21_n2_mux_dataout;
	wire	wire_l3_w21_n3_mux_dataout;
	wire	wire_l3_w22_n0_mux_dataout;
	wire	wire_l3_w22_n1_mux_dataout;
	wire	wire_l3_w22_n2_mux_dataout;
	wire	wire_l3_w22_n3_mux_dataout;
	wire	wire_l3_w23_n0_mux_dataout;
	wire	wire_l3_w23_n1_mux_dataout;
	wire	wire_l3_w23_n2_mux_dataout;
	wire	wire_l3_w23_n3_mux_dataout;
	wire	wire_l3_w24_n0_mux_dataout;
	wire	wire_l3_w24_n1_mux_dataout;
	wire	wire_l3_w24_n2_mux_dataout;
	wire	wire_l3_w24_n3_mux_dataout;
	wire	wire_l3_w25_n0_mux_dataout;
	wire	wire_l3_w25_n1_mux_dataout;
	wire	wire_l3_w25_n2_mux_dataout;
	wire	wire_l3_w25_n3_mux_dataout;
	wire	wire_l3_w26_n0_mux_dataout;
	wire	wire_l3_w26_n1_mux_dataout;
	wire	wire_l3_w26_n2_mux_dataout;
	wire	wire_l3_w26_n3_mux_dataout;
	wire	wire_l3_w27_n0_mux_dataout;
	wire	wire_l3_w27_n1_mux_dataout;
	wire	wire_l3_w27_n2_mux_dataout;
	wire	wire_l3_w27_n3_mux_dataout;
	wire	wire_l3_w28_n0_mux_dataout;
	wire	wire_l3_w28_n1_mux_dataout;
	wire	wire_l3_w28_n2_mux_dataout;
	wire	wire_l3_w28_n3_mux_dataout;
	wire	wire_l3_w29_n0_mux_dataout;
	wire	wire_l3_w29_n1_mux_dataout;
	wire	wire_l3_w29_n2_mux_dataout;
	wire	wire_l3_w29_n3_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w2_n2_mux_dataout;
	wire	wire_l3_w2_n3_mux_dataout;
	wire	wire_l3_w30_n0_mux_dataout;
	wire	wire_l3_w30_n1_mux_dataout;
	wire	wire_l3_w30_n2_mux_dataout;
	wire	wire_l3_w30_n3_mux_dataout;
	wire	wire_l3_w31_n0_mux_dataout;
	wire	wire_l3_w31_n1_mux_dataout;
	wire	wire_l3_w31_n2_mux_dataout;
	wire	wire_l3_w31_n3_mux_dataout;
	wire	wire_l3_w32_n0_mux_dataout;
	wire	wire_l3_w32_n1_mux_dataout;
	wire	wire_l3_w32_n2_mux_dataout;
	wire	wire_l3_w32_n3_mux_dataout;
	wire	wire_l3_w33_n0_mux_dataout;
	wire	wire_l3_w33_n1_mux_dataout;
	wire	wire_l3_w33_n2_mux_dataout;
	wire	wire_l3_w33_n3_mux_dataout;
	wire	wire_l3_w34_n0_mux_dataout;
	wire	wire_l3_w34_n1_mux_dataout;
	wire	wire_l3_w34_n2_mux_dataout;
	wire	wire_l3_w34_n3_mux_dataout;
	wire	wire_l3_w35_n0_mux_dataout;
	wire	wire_l3_w35_n1_mux_dataout;
	wire	wire_l3_w35_n2_mux_dataout;
	wire	wire_l3_w35_n3_mux_dataout;
	wire	wire_l3_w36_n0_mux_dataout;
	wire	wire_l3_w36_n1_mux_dataout;
	wire	wire_l3_w36_n2_mux_dataout;
	wire	wire_l3_w36_n3_mux_dataout;
	wire	wire_l3_w37_n0_mux_dataout;
	wire	wire_l3_w37_n1_mux_dataout;
	wire	wire_l3_w37_n2_mux_dataout;
	wire	wire_l3_w37_n3_mux_dataout;
	wire	wire_l3_w38_n0_mux_dataout;
	wire	wire_l3_w38_n1_mux_dataout;
	wire	wire_l3_w38_n2_mux_dataout;
	wire	wire_l3_w38_n3_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w3_n2_mux_dataout;
	wire	wire_l3_w3_n3_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w4_n2_mux_dataout;
	wire	wire_l3_w4_n3_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w5_n2_mux_dataout;
	wire	wire_l3_w5_n3_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w6_n2_mux_dataout;
	wire	wire_l3_w6_n3_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l3_w7_n2_mux_dataout;
	wire	wire_l3_w7_n3_mux_dataout;
	wire	wire_l3_w8_n0_mux_dataout;
	wire	wire_l3_w8_n1_mux_dataout;
	wire	wire_l3_w8_n2_mux_dataout;
	wire	wire_l3_w8_n3_mux_dataout;
	wire	wire_l3_w9_n0_mux_dataout;
	wire	wire_l3_w9_n1_mux_dataout;
	wire	wire_l3_w9_n2_mux_dataout;
	wire	wire_l3_w9_n3_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w0_n1_mux_dataout;
	wire	wire_l4_w10_n0_mux_dataout;
	wire	wire_l4_w10_n1_mux_dataout;
	wire	wire_l4_w11_n0_mux_dataout;
	wire	wire_l4_w11_n1_mux_dataout;
	wire	wire_l4_w12_n0_mux_dataout;
	wire	wire_l4_w12_n1_mux_dataout;
	wire	wire_l4_w13_n0_mux_dataout;
	wire	wire_l4_w13_n1_mux_dataout;
	wire	wire_l4_w14_n0_mux_dataout;
	wire	wire_l4_w14_n1_mux_dataout;
	wire	wire_l4_w15_n0_mux_dataout;
	wire	wire_l4_w15_n1_mux_dataout;
	wire	wire_l4_w16_n0_mux_dataout;
	wire	wire_l4_w16_n1_mux_dataout;
	wire	wire_l4_w17_n0_mux_dataout;
	wire	wire_l4_w17_n1_mux_dataout;
	wire	wire_l4_w18_n0_mux_dataout;
	wire	wire_l4_w18_n1_mux_dataout;
	wire	wire_l4_w19_n0_mux_dataout;
	wire	wire_l4_w19_n1_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w1_n1_mux_dataout;
	wire	wire_l4_w20_n0_mux_dataout;
	wire	wire_l4_w20_n1_mux_dataout;
	wire	wire_l4_w21_n0_mux_dataout;
	wire	wire_l4_w21_n1_mux_dataout;
	wire	wire_l4_w22_n0_mux_dataout;
	wire	wire_l4_w22_n1_mux_dataout;
	wire	wire_l4_w23_n0_mux_dataout;
	wire	wire_l4_w23_n1_mux_dataout;
	wire	wire_l4_w24_n0_mux_dataout;
	wire	wire_l4_w24_n1_mux_dataout;
	wire	wire_l4_w25_n0_mux_dataout;
	wire	wire_l4_w25_n1_mux_dataout;
	wire	wire_l4_w26_n0_mux_dataout;
	wire	wire_l4_w26_n1_mux_dataout;
	wire	wire_l4_w27_n0_mux_dataout;
	wire	wire_l4_w27_n1_mux_dataout;
	wire	wire_l4_w28_n0_mux_dataout;
	wire	wire_l4_w28_n1_mux_dataout;
	wire	wire_l4_w29_n0_mux_dataout;
	wire	wire_l4_w29_n1_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w2_n1_mux_dataout;
	wire	wire_l4_w30_n0_mux_dataout;
	wire	wire_l4_w30_n1_mux_dataout;
	wire	wire_l4_w31_n0_mux_dataout;
	wire	wire_l4_w31_n1_mux_dataout;
	wire	wire_l4_w32_n0_mux_dataout;
	wire	wire_l4_w32_n1_mux_dataout;
	wire	wire_l4_w33_n0_mux_dataout;
	wire	wire_l4_w33_n1_mux_dataout;
	wire	wire_l4_w34_n0_mux_dataout;
	wire	wire_l4_w34_n1_mux_dataout;
	wire	wire_l4_w35_n0_mux_dataout;
	wire	wire_l4_w35_n1_mux_dataout;
	wire	wire_l4_w36_n0_mux_dataout;
	wire	wire_l4_w36_n1_mux_dataout;
	wire	wire_l4_w37_n0_mux_dataout;
	wire	wire_l4_w37_n1_mux_dataout;
	wire	wire_l4_w38_n0_mux_dataout;
	wire	wire_l4_w38_n1_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w3_n1_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w4_n1_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w5_n1_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w6_n1_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire	wire_l4_w7_n1_mux_dataout;
	wire	wire_l4_w8_n0_mux_dataout;
	wire	wire_l4_w8_n1_mux_dataout;
	wire	wire_l4_w9_n0_mux_dataout;
	wire	wire_l4_w9_n1_mux_dataout;
	wire	wire_l5_w0_n0_mux_dataout;
	wire	wire_l5_w10_n0_mux_dataout;
	wire	wire_l5_w11_n0_mux_dataout;
	wire	wire_l5_w12_n0_mux_dataout;
	wire	wire_l5_w13_n0_mux_dataout;
	wire	wire_l5_w14_n0_mux_dataout;
	wire	wire_l5_w15_n0_mux_dataout;
	wire	wire_l5_w16_n0_mux_dataout;
	wire	wire_l5_w17_n0_mux_dataout;
	wire	wire_l5_w18_n0_mux_dataout;
	wire	wire_l5_w19_n0_mux_dataout;
	wire	wire_l5_w1_n0_mux_dataout;
	wire	wire_l5_w20_n0_mux_dataout;
	wire	wire_l5_w21_n0_mux_dataout;
	wire	wire_l5_w22_n0_mux_dataout;
	wire	wire_l5_w23_n0_mux_dataout;
	wire	wire_l5_w24_n0_mux_dataout;
	wire	wire_l5_w25_n0_mux_dataout;
	wire	wire_l5_w26_n0_mux_dataout;
	wire	wire_l5_w27_n0_mux_dataout;
	wire	wire_l5_w28_n0_mux_dataout;
	wire	wire_l5_w29_n0_mux_dataout;
	wire	wire_l5_w2_n0_mux_dataout;
	wire	wire_l5_w30_n0_mux_dataout;
	wire	wire_l5_w31_n0_mux_dataout;
	wire	wire_l5_w32_n0_mux_dataout;
	wire	wire_l5_w33_n0_mux_dataout;
	wire	wire_l5_w34_n0_mux_dataout;
	wire	wire_l5_w35_n0_mux_dataout;
	wire	wire_l5_w36_n0_mux_dataout;
	wire	wire_l5_w37_n0_mux_dataout;
	wire	wire_l5_w38_n0_mux_dataout;
	wire	wire_l5_w3_n0_mux_dataout;
	wire	wire_l5_w4_n0_mux_dataout;
	wire	wire_l5_w5_n0_mux_dataout;
	wire	wire_l5_w6_n0_mux_dataout;
	wire	wire_l5_w7_n0_mux_dataout;
	wire	wire_l5_w8_n0_mux_dataout;
	wire	wire_l5_w9_n0_mux_dataout;
	wire  [2417:0]  data_wire;
	wire  [38:0]  result_wire_ext;
	wire  [24:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[39] : data_wire[0];
	assign		wire_l1_w0_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[819] : data_wire[780];
	assign		wire_l1_w0_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[897] : data_wire[858];
	assign		wire_l1_w0_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[975] : data_wire[936];
	assign		wire_l1_w0_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1053] : data_wire[1014];
	assign		wire_l1_w0_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1131] : data_wire[1092];
	assign		wire_l1_w0_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1209] : data_wire[1170];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[117] : data_wire[78];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[195] : data_wire[156];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[273] : data_wire[234];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[351] : data_wire[312];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[429] : data_wire[390];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[507] : data_wire[468];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[585] : data_wire[546];
	assign		wire_l1_w0_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[663] : data_wire[624];
	assign		wire_l1_w0_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[741] : data_wire[702];
	assign		wire_l1_w10_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[49] : data_wire[10];
	assign		wire_l1_w10_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[829] : data_wire[790];
	assign		wire_l1_w10_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[907] : data_wire[868];
	assign		wire_l1_w10_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[985] : data_wire[946];
	assign		wire_l1_w10_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1063] : data_wire[1024];
	assign		wire_l1_w10_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1141] : data_wire[1102];
	assign		wire_l1_w10_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1219] : data_wire[1180];
	assign		wire_l1_w10_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[127] : data_wire[88];
	assign		wire_l1_w10_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[205] : data_wire[166];
	assign		wire_l1_w10_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[283] : data_wire[244];
	assign		wire_l1_w10_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[361] : data_wire[322];
	assign		wire_l1_w10_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[439] : data_wire[400];
	assign		wire_l1_w10_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[517] : data_wire[478];
	assign		wire_l1_w10_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[595] : data_wire[556];
	assign		wire_l1_w10_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[673] : data_wire[634];
	assign		wire_l1_w10_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[751] : data_wire[712];
	assign		wire_l1_w11_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[50] : data_wire[11];
	assign		wire_l1_w11_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[830] : data_wire[791];
	assign		wire_l1_w11_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[908] : data_wire[869];
	assign		wire_l1_w11_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[986] : data_wire[947];
	assign		wire_l1_w11_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1064] : data_wire[1025];
	assign		wire_l1_w11_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1142] : data_wire[1103];
	assign		wire_l1_w11_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1220] : data_wire[1181];
	assign		wire_l1_w11_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[128] : data_wire[89];
	assign		wire_l1_w11_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[206] : data_wire[167];
	assign		wire_l1_w11_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[284] : data_wire[245];
	assign		wire_l1_w11_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[362] : data_wire[323];
	assign		wire_l1_w11_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[440] : data_wire[401];
	assign		wire_l1_w11_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[518] : data_wire[479];
	assign		wire_l1_w11_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[596] : data_wire[557];
	assign		wire_l1_w11_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[674] : data_wire[635];
	assign		wire_l1_w11_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[752] : data_wire[713];
	assign		wire_l1_w12_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[51] : data_wire[12];
	assign		wire_l1_w12_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[831] : data_wire[792];
	assign		wire_l1_w12_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[909] : data_wire[870];
	assign		wire_l1_w12_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[987] : data_wire[948];
	assign		wire_l1_w12_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1065] : data_wire[1026];
	assign		wire_l1_w12_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1143] : data_wire[1104];
	assign		wire_l1_w12_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1221] : data_wire[1182];
	assign		wire_l1_w12_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[129] : data_wire[90];
	assign		wire_l1_w12_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[207] : data_wire[168];
	assign		wire_l1_w12_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[285] : data_wire[246];
	assign		wire_l1_w12_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[363] : data_wire[324];
	assign		wire_l1_w12_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[441] : data_wire[402];
	assign		wire_l1_w12_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[519] : data_wire[480];
	assign		wire_l1_w12_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[597] : data_wire[558];
	assign		wire_l1_w12_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[675] : data_wire[636];
	assign		wire_l1_w12_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[753] : data_wire[714];
	assign		wire_l1_w13_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[52] : data_wire[13];
	assign		wire_l1_w13_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[832] : data_wire[793];
	assign		wire_l1_w13_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[910] : data_wire[871];
	assign		wire_l1_w13_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[988] : data_wire[949];
	assign		wire_l1_w13_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1066] : data_wire[1027];
	assign		wire_l1_w13_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1144] : data_wire[1105];
	assign		wire_l1_w13_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1222] : data_wire[1183];
	assign		wire_l1_w13_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[130] : data_wire[91];
	assign		wire_l1_w13_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[208] : data_wire[169];
	assign		wire_l1_w13_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[286] : data_wire[247];
	assign		wire_l1_w13_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[364] : data_wire[325];
	assign		wire_l1_w13_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[442] : data_wire[403];
	assign		wire_l1_w13_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[520] : data_wire[481];
	assign		wire_l1_w13_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[598] : data_wire[559];
	assign		wire_l1_w13_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[676] : data_wire[637];
	assign		wire_l1_w13_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[754] : data_wire[715];
	assign		wire_l1_w14_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[53] : data_wire[14];
	assign		wire_l1_w14_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[833] : data_wire[794];
	assign		wire_l1_w14_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[911] : data_wire[872];
	assign		wire_l1_w14_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[989] : data_wire[950];
	assign		wire_l1_w14_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1067] : data_wire[1028];
	assign		wire_l1_w14_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1145] : data_wire[1106];
	assign		wire_l1_w14_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1223] : data_wire[1184];
	assign		wire_l1_w14_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[131] : data_wire[92];
	assign		wire_l1_w14_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[209] : data_wire[170];
	assign		wire_l1_w14_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[287] : data_wire[248];
	assign		wire_l1_w14_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[365] : data_wire[326];
	assign		wire_l1_w14_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[443] : data_wire[404];
	assign		wire_l1_w14_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[521] : data_wire[482];
	assign		wire_l1_w14_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[599] : data_wire[560];
	assign		wire_l1_w14_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[677] : data_wire[638];
	assign		wire_l1_w14_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[755] : data_wire[716];
	assign		wire_l1_w15_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[54] : data_wire[15];
	assign		wire_l1_w15_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[834] : data_wire[795];
	assign		wire_l1_w15_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[912] : data_wire[873];
	assign		wire_l1_w15_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[990] : data_wire[951];
	assign		wire_l1_w15_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1068] : data_wire[1029];
	assign		wire_l1_w15_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1146] : data_wire[1107];
	assign		wire_l1_w15_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1224] : data_wire[1185];
	assign		wire_l1_w15_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[132] : data_wire[93];
	assign		wire_l1_w15_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[210] : data_wire[171];
	assign		wire_l1_w15_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[288] : data_wire[249];
	assign		wire_l1_w15_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[366] : data_wire[327];
	assign		wire_l1_w15_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[444] : data_wire[405];
	assign		wire_l1_w15_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[522] : data_wire[483];
	assign		wire_l1_w15_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[600] : data_wire[561];
	assign		wire_l1_w15_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[678] : data_wire[639];
	assign		wire_l1_w15_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[756] : data_wire[717];
	assign		wire_l1_w16_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[55] : data_wire[16];
	assign		wire_l1_w16_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[835] : data_wire[796];
	assign		wire_l1_w16_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[913] : data_wire[874];
	assign		wire_l1_w16_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[991] : data_wire[952];
	assign		wire_l1_w16_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1069] : data_wire[1030];
	assign		wire_l1_w16_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1147] : data_wire[1108];
	assign		wire_l1_w16_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1225] : data_wire[1186];
	assign		wire_l1_w16_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[133] : data_wire[94];
	assign		wire_l1_w16_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[211] : data_wire[172];
	assign		wire_l1_w16_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[289] : data_wire[250];
	assign		wire_l1_w16_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[367] : data_wire[328];
	assign		wire_l1_w16_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[445] : data_wire[406];
	assign		wire_l1_w16_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[523] : data_wire[484];
	assign		wire_l1_w16_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[601] : data_wire[562];
	assign		wire_l1_w16_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[679] : data_wire[640];
	assign		wire_l1_w16_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[757] : data_wire[718];
	assign		wire_l1_w17_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[17];
	assign		wire_l1_w17_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[836] : data_wire[797];
	assign		wire_l1_w17_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[914] : data_wire[875];
	assign		wire_l1_w17_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[992] : data_wire[953];
	assign		wire_l1_w17_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1070] : data_wire[1031];
	assign		wire_l1_w17_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1148] : data_wire[1109];
	assign		wire_l1_w17_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1226] : data_wire[1187];
	assign		wire_l1_w17_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[134] : data_wire[95];
	assign		wire_l1_w17_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[212] : data_wire[173];
	assign		wire_l1_w17_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[290] : data_wire[251];
	assign		wire_l1_w17_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[368] : data_wire[329];
	assign		wire_l1_w17_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[446] : data_wire[407];
	assign		wire_l1_w17_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[524] : data_wire[485];
	assign		wire_l1_w17_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[602] : data_wire[563];
	assign		wire_l1_w17_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[680] : data_wire[641];
	assign		wire_l1_w17_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[758] : data_wire[719];
	assign		wire_l1_w18_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[18];
	assign		wire_l1_w18_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[837] : data_wire[798];
	assign		wire_l1_w18_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[915] : data_wire[876];
	assign		wire_l1_w18_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[993] : data_wire[954];
	assign		wire_l1_w18_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1071] : data_wire[1032];
	assign		wire_l1_w18_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1149] : data_wire[1110];
	assign		wire_l1_w18_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1227] : data_wire[1188];
	assign		wire_l1_w18_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[135] : data_wire[96];
	assign		wire_l1_w18_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[213] : data_wire[174];
	assign		wire_l1_w18_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[291] : data_wire[252];
	assign		wire_l1_w18_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[369] : data_wire[330];
	assign		wire_l1_w18_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[447] : data_wire[408];
	assign		wire_l1_w18_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[525] : data_wire[486];
	assign		wire_l1_w18_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[603] : data_wire[564];
	assign		wire_l1_w18_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[681] : data_wire[642];
	assign		wire_l1_w18_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[759] : data_wire[720];
	assign		wire_l1_w19_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[58] : data_wire[19];
	assign		wire_l1_w19_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[838] : data_wire[799];
	assign		wire_l1_w19_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[916] : data_wire[877];
	assign		wire_l1_w19_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[994] : data_wire[955];
	assign		wire_l1_w19_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1072] : data_wire[1033];
	assign		wire_l1_w19_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1150] : data_wire[1111];
	assign		wire_l1_w19_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1228] : data_wire[1189];
	assign		wire_l1_w19_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[136] : data_wire[97];
	assign		wire_l1_w19_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[214] : data_wire[175];
	assign		wire_l1_w19_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[292] : data_wire[253];
	assign		wire_l1_w19_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[370] : data_wire[331];
	assign		wire_l1_w19_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[448] : data_wire[409];
	assign		wire_l1_w19_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[526] : data_wire[487];
	assign		wire_l1_w19_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[604] : data_wire[565];
	assign		wire_l1_w19_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[682] : data_wire[643];
	assign		wire_l1_w19_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[760] : data_wire[721];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[40] : data_wire[1];
	assign		wire_l1_w1_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[820] : data_wire[781];
	assign		wire_l1_w1_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[898] : data_wire[859];
	assign		wire_l1_w1_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[976] : data_wire[937];
	assign		wire_l1_w1_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1054] : data_wire[1015];
	assign		wire_l1_w1_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1132] : data_wire[1093];
	assign		wire_l1_w1_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1210] : data_wire[1171];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[118] : data_wire[79];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[196] : data_wire[157];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[274] : data_wire[235];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[352] : data_wire[313];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[430] : data_wire[391];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[508] : data_wire[469];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[586] : data_wire[547];
	assign		wire_l1_w1_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[664] : data_wire[625];
	assign		wire_l1_w1_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[742] : data_wire[703];
	assign		wire_l1_w20_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[59] : data_wire[20];
	assign		wire_l1_w20_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[839] : data_wire[800];
	assign		wire_l1_w20_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[917] : data_wire[878];
	assign		wire_l1_w20_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[995] : data_wire[956];
	assign		wire_l1_w20_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1073] : data_wire[1034];
	assign		wire_l1_w20_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1151] : data_wire[1112];
	assign		wire_l1_w20_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1229] : data_wire[1190];
	assign		wire_l1_w20_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[137] : data_wire[98];
	assign		wire_l1_w20_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[215] : data_wire[176];
	assign		wire_l1_w20_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[293] : data_wire[254];
	assign		wire_l1_w20_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[371] : data_wire[332];
	assign		wire_l1_w20_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[449] : data_wire[410];
	assign		wire_l1_w20_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[527] : data_wire[488];
	assign		wire_l1_w20_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[605] : data_wire[566];
	assign		wire_l1_w20_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[683] : data_wire[644];
	assign		wire_l1_w20_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[761] : data_wire[722];
	assign		wire_l1_w21_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[60] : data_wire[21];
	assign		wire_l1_w21_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[840] : data_wire[801];
	assign		wire_l1_w21_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[918] : data_wire[879];
	assign		wire_l1_w21_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[996] : data_wire[957];
	assign		wire_l1_w21_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1074] : data_wire[1035];
	assign		wire_l1_w21_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1152] : data_wire[1113];
	assign		wire_l1_w21_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1230] : data_wire[1191];
	assign		wire_l1_w21_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[138] : data_wire[99];
	assign		wire_l1_w21_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[216] : data_wire[177];
	assign		wire_l1_w21_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[294] : data_wire[255];
	assign		wire_l1_w21_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[372] : data_wire[333];
	assign		wire_l1_w21_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[450] : data_wire[411];
	assign		wire_l1_w21_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[528] : data_wire[489];
	assign		wire_l1_w21_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[606] : data_wire[567];
	assign		wire_l1_w21_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[684] : data_wire[645];
	assign		wire_l1_w21_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[762] : data_wire[723];
	assign		wire_l1_w22_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[61] : data_wire[22];
	assign		wire_l1_w22_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[841] : data_wire[802];
	assign		wire_l1_w22_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[919] : data_wire[880];
	assign		wire_l1_w22_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[997] : data_wire[958];
	assign		wire_l1_w22_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1075] : data_wire[1036];
	assign		wire_l1_w22_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1153] : data_wire[1114];
	assign		wire_l1_w22_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1231] : data_wire[1192];
	assign		wire_l1_w22_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[139] : data_wire[100];
	assign		wire_l1_w22_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[217] : data_wire[178];
	assign		wire_l1_w22_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[295] : data_wire[256];
	assign		wire_l1_w22_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[373] : data_wire[334];
	assign		wire_l1_w22_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[451] : data_wire[412];
	assign		wire_l1_w22_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[529] : data_wire[490];
	assign		wire_l1_w22_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[607] : data_wire[568];
	assign		wire_l1_w22_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[685] : data_wire[646];
	assign		wire_l1_w22_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[763] : data_wire[724];
	assign		wire_l1_w23_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[62] : data_wire[23];
	assign		wire_l1_w23_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[842] : data_wire[803];
	assign		wire_l1_w23_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[920] : data_wire[881];
	assign		wire_l1_w23_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[998] : data_wire[959];
	assign		wire_l1_w23_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1076] : data_wire[1037];
	assign		wire_l1_w23_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1154] : data_wire[1115];
	assign		wire_l1_w23_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1232] : data_wire[1193];
	assign		wire_l1_w23_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[140] : data_wire[101];
	assign		wire_l1_w23_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[218] : data_wire[179];
	assign		wire_l1_w23_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[296] : data_wire[257];
	assign		wire_l1_w23_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[374] : data_wire[335];
	assign		wire_l1_w23_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[452] : data_wire[413];
	assign		wire_l1_w23_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[530] : data_wire[491];
	assign		wire_l1_w23_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[608] : data_wire[569];
	assign		wire_l1_w23_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[686] : data_wire[647];
	assign		wire_l1_w23_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[764] : data_wire[725];
	assign		wire_l1_w24_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[63] : data_wire[24];
	assign		wire_l1_w24_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[843] : data_wire[804];
	assign		wire_l1_w24_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[921] : data_wire[882];
	assign		wire_l1_w24_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[999] : data_wire[960];
	assign		wire_l1_w24_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1077] : data_wire[1038];
	assign		wire_l1_w24_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1155] : data_wire[1116];
	assign		wire_l1_w24_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1233] : data_wire[1194];
	assign		wire_l1_w24_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[141] : data_wire[102];
	assign		wire_l1_w24_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[219] : data_wire[180];
	assign		wire_l1_w24_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[297] : data_wire[258];
	assign		wire_l1_w24_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[375] : data_wire[336];
	assign		wire_l1_w24_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[453] : data_wire[414];
	assign		wire_l1_w24_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[531] : data_wire[492];
	assign		wire_l1_w24_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[609] : data_wire[570];
	assign		wire_l1_w24_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[687] : data_wire[648];
	assign		wire_l1_w24_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[765] : data_wire[726];
	assign		wire_l1_w25_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[64] : data_wire[25];
	assign		wire_l1_w25_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[844] : data_wire[805];
	assign		wire_l1_w25_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[922] : data_wire[883];
	assign		wire_l1_w25_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1000] : data_wire[961];
	assign		wire_l1_w25_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1078] : data_wire[1039];
	assign		wire_l1_w25_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1156] : data_wire[1117];
	assign		wire_l1_w25_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1234] : data_wire[1195];
	assign		wire_l1_w25_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[142] : data_wire[103];
	assign		wire_l1_w25_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[220] : data_wire[181];
	assign		wire_l1_w25_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[298] : data_wire[259];
	assign		wire_l1_w25_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[376] : data_wire[337];
	assign		wire_l1_w25_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[454] : data_wire[415];
	assign		wire_l1_w25_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[532] : data_wire[493];
	assign		wire_l1_w25_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[610] : data_wire[571];
	assign		wire_l1_w25_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[688] : data_wire[649];
	assign		wire_l1_w25_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[766] : data_wire[727];
	assign		wire_l1_w26_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[65] : data_wire[26];
	assign		wire_l1_w26_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[845] : data_wire[806];
	assign		wire_l1_w26_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[923] : data_wire[884];
	assign		wire_l1_w26_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1001] : data_wire[962];
	assign		wire_l1_w26_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1079] : data_wire[1040];
	assign		wire_l1_w26_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1157] : data_wire[1118];
	assign		wire_l1_w26_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1235] : data_wire[1196];
	assign		wire_l1_w26_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[143] : data_wire[104];
	assign		wire_l1_w26_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[221] : data_wire[182];
	assign		wire_l1_w26_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[299] : data_wire[260];
	assign		wire_l1_w26_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[377] : data_wire[338];
	assign		wire_l1_w26_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[455] : data_wire[416];
	assign		wire_l1_w26_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[533] : data_wire[494];
	assign		wire_l1_w26_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[611] : data_wire[572];
	assign		wire_l1_w26_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[689] : data_wire[650];
	assign		wire_l1_w26_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[767] : data_wire[728];
	assign		wire_l1_w27_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[66] : data_wire[27];
	assign		wire_l1_w27_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[846] : data_wire[807];
	assign		wire_l1_w27_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[924] : data_wire[885];
	assign		wire_l1_w27_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1002] : data_wire[963];
	assign		wire_l1_w27_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1080] : data_wire[1041];
	assign		wire_l1_w27_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1158] : data_wire[1119];
	assign		wire_l1_w27_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1236] : data_wire[1197];
	assign		wire_l1_w27_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[144] : data_wire[105];
	assign		wire_l1_w27_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[222] : data_wire[183];
	assign		wire_l1_w27_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[300] : data_wire[261];
	assign		wire_l1_w27_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[378] : data_wire[339];
	assign		wire_l1_w27_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[456] : data_wire[417];
	assign		wire_l1_w27_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[534] : data_wire[495];
	assign		wire_l1_w27_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[612] : data_wire[573];
	assign		wire_l1_w27_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[690] : data_wire[651];
	assign		wire_l1_w27_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[768] : data_wire[729];
	assign		wire_l1_w28_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[67] : data_wire[28];
	assign		wire_l1_w28_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[847] : data_wire[808];
	assign		wire_l1_w28_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[925] : data_wire[886];
	assign		wire_l1_w28_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1003] : data_wire[964];
	assign		wire_l1_w28_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1081] : data_wire[1042];
	assign		wire_l1_w28_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1159] : data_wire[1120];
	assign		wire_l1_w28_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1237] : data_wire[1198];
	assign		wire_l1_w28_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[145] : data_wire[106];
	assign		wire_l1_w28_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[223] : data_wire[184];
	assign		wire_l1_w28_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[301] : data_wire[262];
	assign		wire_l1_w28_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[379] : data_wire[340];
	assign		wire_l1_w28_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[457] : data_wire[418];
	assign		wire_l1_w28_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[535] : data_wire[496];
	assign		wire_l1_w28_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[613] : data_wire[574];
	assign		wire_l1_w28_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[691] : data_wire[652];
	assign		wire_l1_w28_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[769] : data_wire[730];
	assign		wire_l1_w29_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[68] : data_wire[29];
	assign		wire_l1_w29_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[848] : data_wire[809];
	assign		wire_l1_w29_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[926] : data_wire[887];
	assign		wire_l1_w29_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1004] : data_wire[965];
	assign		wire_l1_w29_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1082] : data_wire[1043];
	assign		wire_l1_w29_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1160] : data_wire[1121];
	assign		wire_l1_w29_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1238] : data_wire[1199];
	assign		wire_l1_w29_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[146] : data_wire[107];
	assign		wire_l1_w29_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[224] : data_wire[185];
	assign		wire_l1_w29_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[302] : data_wire[263];
	assign		wire_l1_w29_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[380] : data_wire[341];
	assign		wire_l1_w29_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[458] : data_wire[419];
	assign		wire_l1_w29_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[536] : data_wire[497];
	assign		wire_l1_w29_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[614] : data_wire[575];
	assign		wire_l1_w29_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[692] : data_wire[653];
	assign		wire_l1_w29_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[770] : data_wire[731];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[41] : data_wire[2];
	assign		wire_l1_w2_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[821] : data_wire[782];
	assign		wire_l1_w2_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[899] : data_wire[860];
	assign		wire_l1_w2_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[977] : data_wire[938];
	assign		wire_l1_w2_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1055] : data_wire[1016];
	assign		wire_l1_w2_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1133] : data_wire[1094];
	assign		wire_l1_w2_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1211] : data_wire[1172];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[119] : data_wire[80];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[197] : data_wire[158];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[275] : data_wire[236];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[353] : data_wire[314];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[431] : data_wire[392];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[509] : data_wire[470];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[587] : data_wire[548];
	assign		wire_l1_w2_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[665] : data_wire[626];
	assign		wire_l1_w2_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[743] : data_wire[704];
	assign		wire_l1_w30_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[69] : data_wire[30];
	assign		wire_l1_w30_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[849] : data_wire[810];
	assign		wire_l1_w30_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[927] : data_wire[888];
	assign		wire_l1_w30_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1005] : data_wire[966];
	assign		wire_l1_w30_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1083] : data_wire[1044];
	assign		wire_l1_w30_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1161] : data_wire[1122];
	assign		wire_l1_w30_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1239] : data_wire[1200];
	assign		wire_l1_w30_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[147] : data_wire[108];
	assign		wire_l1_w30_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[225] : data_wire[186];
	assign		wire_l1_w30_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[303] : data_wire[264];
	assign		wire_l1_w30_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[381] : data_wire[342];
	assign		wire_l1_w30_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[459] : data_wire[420];
	assign		wire_l1_w30_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[537] : data_wire[498];
	assign		wire_l1_w30_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[615] : data_wire[576];
	assign		wire_l1_w30_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[693] : data_wire[654];
	assign		wire_l1_w30_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[771] : data_wire[732];
	assign		wire_l1_w31_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[70] : data_wire[31];
	assign		wire_l1_w31_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[850] : data_wire[811];
	assign		wire_l1_w31_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[928] : data_wire[889];
	assign		wire_l1_w31_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1006] : data_wire[967];
	assign		wire_l1_w31_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1084] : data_wire[1045];
	assign		wire_l1_w31_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1162] : data_wire[1123];
	assign		wire_l1_w31_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1240] : data_wire[1201];
	assign		wire_l1_w31_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[148] : data_wire[109];
	assign		wire_l1_w31_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[226] : data_wire[187];
	assign		wire_l1_w31_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[304] : data_wire[265];
	assign		wire_l1_w31_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[382] : data_wire[343];
	assign		wire_l1_w31_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[460] : data_wire[421];
	assign		wire_l1_w31_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[538] : data_wire[499];
	assign		wire_l1_w31_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[616] : data_wire[577];
	assign		wire_l1_w31_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[694] : data_wire[655];
	assign		wire_l1_w31_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[772] : data_wire[733];
	assign		wire_l1_w32_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[71] : data_wire[32];
	assign		wire_l1_w32_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[851] : data_wire[812];
	assign		wire_l1_w32_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[929] : data_wire[890];
	assign		wire_l1_w32_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1007] : data_wire[968];
	assign		wire_l1_w32_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1085] : data_wire[1046];
	assign		wire_l1_w32_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1163] : data_wire[1124];
	assign		wire_l1_w32_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1241] : data_wire[1202];
	assign		wire_l1_w32_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[149] : data_wire[110];
	assign		wire_l1_w32_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[227] : data_wire[188];
	assign		wire_l1_w32_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[305] : data_wire[266];
	assign		wire_l1_w32_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[383] : data_wire[344];
	assign		wire_l1_w32_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[461] : data_wire[422];
	assign		wire_l1_w32_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[539] : data_wire[500];
	assign		wire_l1_w32_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[617] : data_wire[578];
	assign		wire_l1_w32_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[695] : data_wire[656];
	assign		wire_l1_w32_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[773] : data_wire[734];
	assign		wire_l1_w33_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[72] : data_wire[33];
	assign		wire_l1_w33_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[852] : data_wire[813];
	assign		wire_l1_w33_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[930] : data_wire[891];
	assign		wire_l1_w33_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1008] : data_wire[969];
	assign		wire_l1_w33_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1086] : data_wire[1047];
	assign		wire_l1_w33_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1164] : data_wire[1125];
	assign		wire_l1_w33_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1242] : data_wire[1203];
	assign		wire_l1_w33_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[150] : data_wire[111];
	assign		wire_l1_w33_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[228] : data_wire[189];
	assign		wire_l1_w33_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[306] : data_wire[267];
	assign		wire_l1_w33_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[384] : data_wire[345];
	assign		wire_l1_w33_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[462] : data_wire[423];
	assign		wire_l1_w33_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[540] : data_wire[501];
	assign		wire_l1_w33_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[618] : data_wire[579];
	assign		wire_l1_w33_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[696] : data_wire[657];
	assign		wire_l1_w33_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[774] : data_wire[735];
	assign		wire_l1_w34_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[73] : data_wire[34];
	assign		wire_l1_w34_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[853] : data_wire[814];
	assign		wire_l1_w34_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[931] : data_wire[892];
	assign		wire_l1_w34_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1009] : data_wire[970];
	assign		wire_l1_w34_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1087] : data_wire[1048];
	assign		wire_l1_w34_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1165] : data_wire[1126];
	assign		wire_l1_w34_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1243] : data_wire[1204];
	assign		wire_l1_w34_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[151] : data_wire[112];
	assign		wire_l1_w34_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[229] : data_wire[190];
	assign		wire_l1_w34_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[307] : data_wire[268];
	assign		wire_l1_w34_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[385] : data_wire[346];
	assign		wire_l1_w34_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[463] : data_wire[424];
	assign		wire_l1_w34_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[541] : data_wire[502];
	assign		wire_l1_w34_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[619] : data_wire[580];
	assign		wire_l1_w34_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[697] : data_wire[658];
	assign		wire_l1_w34_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[775] : data_wire[736];
	assign		wire_l1_w35_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[74] : data_wire[35];
	assign		wire_l1_w35_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[854] : data_wire[815];
	assign		wire_l1_w35_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[932] : data_wire[893];
	assign		wire_l1_w35_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1010] : data_wire[971];
	assign		wire_l1_w35_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1088] : data_wire[1049];
	assign		wire_l1_w35_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1166] : data_wire[1127];
	assign		wire_l1_w35_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1244] : data_wire[1205];
	assign		wire_l1_w35_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[152] : data_wire[113];
	assign		wire_l1_w35_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[230] : data_wire[191];
	assign		wire_l1_w35_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[308] : data_wire[269];
	assign		wire_l1_w35_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[386] : data_wire[347];
	assign		wire_l1_w35_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[464] : data_wire[425];
	assign		wire_l1_w35_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[542] : data_wire[503];
	assign		wire_l1_w35_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[620] : data_wire[581];
	assign		wire_l1_w35_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[698] : data_wire[659];
	assign		wire_l1_w35_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[776] : data_wire[737];
	assign		wire_l1_w36_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[75] : data_wire[36];
	assign		wire_l1_w36_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[855] : data_wire[816];
	assign		wire_l1_w36_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[933] : data_wire[894];
	assign		wire_l1_w36_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1011] : data_wire[972];
	assign		wire_l1_w36_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1089] : data_wire[1050];
	assign		wire_l1_w36_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1167] : data_wire[1128];
	assign		wire_l1_w36_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1245] : data_wire[1206];
	assign		wire_l1_w36_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[153] : data_wire[114];
	assign		wire_l1_w36_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[231] : data_wire[192];
	assign		wire_l1_w36_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[309] : data_wire[270];
	assign		wire_l1_w36_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[387] : data_wire[348];
	assign		wire_l1_w36_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[465] : data_wire[426];
	assign		wire_l1_w36_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[543] : data_wire[504];
	assign		wire_l1_w36_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[621] : data_wire[582];
	assign		wire_l1_w36_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[699] : data_wire[660];
	assign		wire_l1_w36_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[777] : data_wire[738];
	assign		wire_l1_w37_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[76] : data_wire[37];
	assign		wire_l1_w37_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[856] : data_wire[817];
	assign		wire_l1_w37_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[934] : data_wire[895];
	assign		wire_l1_w37_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1012] : data_wire[973];
	assign		wire_l1_w37_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1090] : data_wire[1051];
	assign		wire_l1_w37_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1168] : data_wire[1129];
	assign		wire_l1_w37_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1246] : data_wire[1207];
	assign		wire_l1_w37_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[154] : data_wire[115];
	assign		wire_l1_w37_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[232] : data_wire[193];
	assign		wire_l1_w37_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[310] : data_wire[271];
	assign		wire_l1_w37_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[388] : data_wire[349];
	assign		wire_l1_w37_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[466] : data_wire[427];
	assign		wire_l1_w37_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[544] : data_wire[505];
	assign		wire_l1_w37_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[622] : data_wire[583];
	assign		wire_l1_w37_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[700] : data_wire[661];
	assign		wire_l1_w37_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[778] : data_wire[739];
	assign		wire_l1_w38_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[77] : data_wire[38];
	assign		wire_l1_w38_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[857] : data_wire[818];
	assign		wire_l1_w38_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[935] : data_wire[896];
	assign		wire_l1_w38_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1013] : data_wire[974];
	assign		wire_l1_w38_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1091] : data_wire[1052];
	assign		wire_l1_w38_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1169] : data_wire[1130];
	assign		wire_l1_w38_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1247] : data_wire[1208];
	assign		wire_l1_w38_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[155] : data_wire[116];
	assign		wire_l1_w38_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[233] : data_wire[194];
	assign		wire_l1_w38_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[311] : data_wire[272];
	assign		wire_l1_w38_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[389] : data_wire[350];
	assign		wire_l1_w38_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[467] : data_wire[428];
	assign		wire_l1_w38_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[545] : data_wire[506];
	assign		wire_l1_w38_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[623] : data_wire[584];
	assign		wire_l1_w38_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[701] : data_wire[662];
	assign		wire_l1_w38_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[779] : data_wire[740];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[3];
	assign		wire_l1_w3_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[822] : data_wire[783];
	assign		wire_l1_w3_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[900] : data_wire[861];
	assign		wire_l1_w3_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[978] : data_wire[939];
	assign		wire_l1_w3_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1056] : data_wire[1017];
	assign		wire_l1_w3_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1134] : data_wire[1095];
	assign		wire_l1_w3_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1212] : data_wire[1173];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[120] : data_wire[81];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[198] : data_wire[159];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[276] : data_wire[237];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[354] : data_wire[315];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[432] : data_wire[393];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[510] : data_wire[471];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[588] : data_wire[549];
	assign		wire_l1_w3_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[666] : data_wire[627];
	assign		wire_l1_w3_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[744] : data_wire[705];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[4];
	assign		wire_l1_w4_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[823] : data_wire[784];
	assign		wire_l1_w4_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[901] : data_wire[862];
	assign		wire_l1_w4_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[979] : data_wire[940];
	assign		wire_l1_w4_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1057] : data_wire[1018];
	assign		wire_l1_w4_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1135] : data_wire[1096];
	assign		wire_l1_w4_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1213] : data_wire[1174];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[121] : data_wire[82];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[199] : data_wire[160];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[277] : data_wire[238];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[355] : data_wire[316];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[433] : data_wire[394];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[511] : data_wire[472];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[589] : data_wire[550];
	assign		wire_l1_w4_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[667] : data_wire[628];
	assign		wire_l1_w4_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[745] : data_wire[706];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[5];
	assign		wire_l1_w5_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[824] : data_wire[785];
	assign		wire_l1_w5_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[902] : data_wire[863];
	assign		wire_l1_w5_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[980] : data_wire[941];
	assign		wire_l1_w5_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1058] : data_wire[1019];
	assign		wire_l1_w5_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1136] : data_wire[1097];
	assign		wire_l1_w5_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1214] : data_wire[1175];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[122] : data_wire[83];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[200] : data_wire[161];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[278] : data_wire[239];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[356] : data_wire[317];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[434] : data_wire[395];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[512] : data_wire[473];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[590] : data_wire[551];
	assign		wire_l1_w5_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[668] : data_wire[629];
	assign		wire_l1_w5_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[746] : data_wire[707];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[6];
	assign		wire_l1_w6_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[825] : data_wire[786];
	assign		wire_l1_w6_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[903] : data_wire[864];
	assign		wire_l1_w6_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[981] : data_wire[942];
	assign		wire_l1_w6_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1059] : data_wire[1020];
	assign		wire_l1_w6_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1137] : data_wire[1098];
	assign		wire_l1_w6_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1215] : data_wire[1176];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[123] : data_wire[84];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[201] : data_wire[162];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[279] : data_wire[240];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[357] : data_wire[318];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[435] : data_wire[396];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[513] : data_wire[474];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[591] : data_wire[552];
	assign		wire_l1_w6_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[669] : data_wire[630];
	assign		wire_l1_w6_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[747] : data_wire[708];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[7];
	assign		wire_l1_w7_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[826] : data_wire[787];
	assign		wire_l1_w7_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[904] : data_wire[865];
	assign		wire_l1_w7_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[982] : data_wire[943];
	assign		wire_l1_w7_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1060] : data_wire[1021];
	assign		wire_l1_w7_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1138] : data_wire[1099];
	assign		wire_l1_w7_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1216] : data_wire[1177];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[124] : data_wire[85];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[202] : data_wire[163];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[280] : data_wire[241];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[358] : data_wire[319];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[436] : data_wire[397];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[514] : data_wire[475];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[592] : data_wire[553];
	assign		wire_l1_w7_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[670] : data_wire[631];
	assign		wire_l1_w7_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[748] : data_wire[709];
	assign		wire_l1_w8_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[8];
	assign		wire_l1_w8_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[827] : data_wire[788];
	assign		wire_l1_w8_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[905] : data_wire[866];
	assign		wire_l1_w8_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[983] : data_wire[944];
	assign		wire_l1_w8_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1061] : data_wire[1022];
	assign		wire_l1_w8_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1139] : data_wire[1100];
	assign		wire_l1_w8_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1217] : data_wire[1178];
	assign		wire_l1_w8_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[125] : data_wire[86];
	assign		wire_l1_w8_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[203] : data_wire[164];
	assign		wire_l1_w8_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[281] : data_wire[242];
	assign		wire_l1_w8_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[359] : data_wire[320];
	assign		wire_l1_w8_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[437] : data_wire[398];
	assign		wire_l1_w8_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[515] : data_wire[476];
	assign		wire_l1_w8_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[593] : data_wire[554];
	assign		wire_l1_w8_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[671] : data_wire[632];
	assign		wire_l1_w8_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[749] : data_wire[710];
	assign		wire_l1_w9_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[48] : data_wire[9];
	assign		wire_l1_w9_n10_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[828] : data_wire[789];
	assign		wire_l1_w9_n11_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[906] : data_wire[867];
	assign		wire_l1_w9_n12_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[984] : data_wire[945];
	assign		wire_l1_w9_n13_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1062] : data_wire[1023];
	assign		wire_l1_w9_n14_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1140] : data_wire[1101];
	assign		wire_l1_w9_n15_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1218] : data_wire[1179];
	assign		wire_l1_w9_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[126] : data_wire[87];
	assign		wire_l1_w9_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[204] : data_wire[165];
	assign		wire_l1_w9_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[282] : data_wire[243];
	assign		wire_l1_w9_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[360] : data_wire[321];
	assign		wire_l1_w9_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[438] : data_wire[399];
	assign		wire_l1_w9_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[516] : data_wire[477];
	assign		wire_l1_w9_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[594] : data_wire[555];
	assign		wire_l1_w9_n8_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[672] : data_wire[633];
	assign		wire_l1_w9_n9_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[750] : data_wire[711];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1249] : data_wire[1248];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1251] : data_wire[1250];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1253] : data_wire[1252];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1255] : data_wire[1254];
	assign		wire_l2_w0_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1257] : data_wire[1256];
	assign		wire_l2_w0_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1259] : data_wire[1258];
	assign		wire_l2_w0_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1261] : data_wire[1260];
	assign		wire_l2_w0_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1263] : data_wire[1262];
	assign		wire_l2_w10_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1409] : data_wire[1408];
	assign		wire_l2_w10_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1411] : data_wire[1410];
	assign		wire_l2_w10_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1413] : data_wire[1412];
	assign		wire_l2_w10_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1415] : data_wire[1414];
	assign		wire_l2_w10_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1417] : data_wire[1416];
	assign		wire_l2_w10_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1419] : data_wire[1418];
	assign		wire_l2_w10_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1421] : data_wire[1420];
	assign		wire_l2_w10_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1423] : data_wire[1422];
	assign		wire_l2_w11_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1425] : data_wire[1424];
	assign		wire_l2_w11_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1427] : data_wire[1426];
	assign		wire_l2_w11_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1429] : data_wire[1428];
	assign		wire_l2_w11_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1431] : data_wire[1430];
	assign		wire_l2_w11_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1433] : data_wire[1432];
	assign		wire_l2_w11_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1435] : data_wire[1434];
	assign		wire_l2_w11_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1437] : data_wire[1436];
	assign		wire_l2_w11_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1439] : data_wire[1438];
	assign		wire_l2_w12_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1441] : data_wire[1440];
	assign		wire_l2_w12_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1443] : data_wire[1442];
	assign		wire_l2_w12_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1445] : data_wire[1444];
	assign		wire_l2_w12_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1447] : data_wire[1446];
	assign		wire_l2_w12_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1449] : data_wire[1448];
	assign		wire_l2_w12_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1451] : data_wire[1450];
	assign		wire_l2_w12_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1453] : data_wire[1452];
	assign		wire_l2_w12_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1455] : data_wire[1454];
	assign		wire_l2_w13_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1457] : data_wire[1456];
	assign		wire_l2_w13_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1459] : data_wire[1458];
	assign		wire_l2_w13_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1461] : data_wire[1460];
	assign		wire_l2_w13_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1463] : data_wire[1462];
	assign		wire_l2_w13_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1465] : data_wire[1464];
	assign		wire_l2_w13_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1467] : data_wire[1466];
	assign		wire_l2_w13_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1469] : data_wire[1468];
	assign		wire_l2_w13_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1471] : data_wire[1470];
	assign		wire_l2_w14_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1473] : data_wire[1472];
	assign		wire_l2_w14_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1475] : data_wire[1474];
	assign		wire_l2_w14_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1477] : data_wire[1476];
	assign		wire_l2_w14_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1479] : data_wire[1478];
	assign		wire_l2_w14_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1481] : data_wire[1480];
	assign		wire_l2_w14_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1483] : data_wire[1482];
	assign		wire_l2_w14_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1485] : data_wire[1484];
	assign		wire_l2_w14_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1487] : data_wire[1486];
	assign		wire_l2_w15_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1489] : data_wire[1488];
	assign		wire_l2_w15_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1491] : data_wire[1490];
	assign		wire_l2_w15_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1493] : data_wire[1492];
	assign		wire_l2_w15_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1495] : data_wire[1494];
	assign		wire_l2_w15_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1497] : data_wire[1496];
	assign		wire_l2_w15_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1499] : data_wire[1498];
	assign		wire_l2_w15_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1501] : data_wire[1500];
	assign		wire_l2_w15_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1503] : data_wire[1502];
	assign		wire_l2_w16_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1505] : data_wire[1504];
	assign		wire_l2_w16_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1507] : data_wire[1506];
	assign		wire_l2_w16_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1509] : data_wire[1508];
	assign		wire_l2_w16_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1511] : data_wire[1510];
	assign		wire_l2_w16_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1513] : data_wire[1512];
	assign		wire_l2_w16_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1515] : data_wire[1514];
	assign		wire_l2_w16_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1517] : data_wire[1516];
	assign		wire_l2_w16_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1519] : data_wire[1518];
	assign		wire_l2_w17_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1521] : data_wire[1520];
	assign		wire_l2_w17_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1523] : data_wire[1522];
	assign		wire_l2_w17_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1525] : data_wire[1524];
	assign		wire_l2_w17_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1527] : data_wire[1526];
	assign		wire_l2_w17_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1529] : data_wire[1528];
	assign		wire_l2_w17_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1531] : data_wire[1530];
	assign		wire_l2_w17_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1533] : data_wire[1532];
	assign		wire_l2_w17_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1535] : data_wire[1534];
	assign		wire_l2_w18_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1537] : data_wire[1536];
	assign		wire_l2_w18_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1539] : data_wire[1538];
	assign		wire_l2_w18_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1541] : data_wire[1540];
	assign		wire_l2_w18_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1543] : data_wire[1542];
	assign		wire_l2_w18_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1545] : data_wire[1544];
	assign		wire_l2_w18_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1547] : data_wire[1546];
	assign		wire_l2_w18_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1549] : data_wire[1548];
	assign		wire_l2_w18_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1551] : data_wire[1550];
	assign		wire_l2_w19_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1553] : data_wire[1552];
	assign		wire_l2_w19_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1555] : data_wire[1554];
	assign		wire_l2_w19_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1557] : data_wire[1556];
	assign		wire_l2_w19_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1559] : data_wire[1558];
	assign		wire_l2_w19_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1561] : data_wire[1560];
	assign		wire_l2_w19_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1563] : data_wire[1562];
	assign		wire_l2_w19_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1565] : data_wire[1564];
	assign		wire_l2_w19_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1567] : data_wire[1566];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1265] : data_wire[1264];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1267] : data_wire[1266];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1269] : data_wire[1268];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1271] : data_wire[1270];
	assign		wire_l2_w1_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1273] : data_wire[1272];
	assign		wire_l2_w1_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1275] : data_wire[1274];
	assign		wire_l2_w1_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1277] : data_wire[1276];
	assign		wire_l2_w1_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1279] : data_wire[1278];
	assign		wire_l2_w20_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1569] : data_wire[1568];
	assign		wire_l2_w20_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1571] : data_wire[1570];
	assign		wire_l2_w20_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1573] : data_wire[1572];
	assign		wire_l2_w20_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1575] : data_wire[1574];
	assign		wire_l2_w20_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1577] : data_wire[1576];
	assign		wire_l2_w20_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1579] : data_wire[1578];
	assign		wire_l2_w20_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1581] : data_wire[1580];
	assign		wire_l2_w20_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1583] : data_wire[1582];
	assign		wire_l2_w21_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1585] : data_wire[1584];
	assign		wire_l2_w21_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1587] : data_wire[1586];
	assign		wire_l2_w21_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1589] : data_wire[1588];
	assign		wire_l2_w21_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1591] : data_wire[1590];
	assign		wire_l2_w21_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1593] : data_wire[1592];
	assign		wire_l2_w21_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1595] : data_wire[1594];
	assign		wire_l2_w21_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1597] : data_wire[1596];
	assign		wire_l2_w21_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1599] : data_wire[1598];
	assign		wire_l2_w22_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1601] : data_wire[1600];
	assign		wire_l2_w22_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1603] : data_wire[1602];
	assign		wire_l2_w22_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1605] : data_wire[1604];
	assign		wire_l2_w22_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1607] : data_wire[1606];
	assign		wire_l2_w22_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1609] : data_wire[1608];
	assign		wire_l2_w22_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1611] : data_wire[1610];
	assign		wire_l2_w22_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1613] : data_wire[1612];
	assign		wire_l2_w22_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1615] : data_wire[1614];
	assign		wire_l2_w23_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1617] : data_wire[1616];
	assign		wire_l2_w23_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1619] : data_wire[1618];
	assign		wire_l2_w23_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1621] : data_wire[1620];
	assign		wire_l2_w23_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1623] : data_wire[1622];
	assign		wire_l2_w23_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1625] : data_wire[1624];
	assign		wire_l2_w23_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1627] : data_wire[1626];
	assign		wire_l2_w23_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1629] : data_wire[1628];
	assign		wire_l2_w23_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1631] : data_wire[1630];
	assign		wire_l2_w24_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1633] : data_wire[1632];
	assign		wire_l2_w24_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1635] : data_wire[1634];
	assign		wire_l2_w24_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1637] : data_wire[1636];
	assign		wire_l2_w24_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1639] : data_wire[1638];
	assign		wire_l2_w24_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1641] : data_wire[1640];
	assign		wire_l2_w24_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1643] : data_wire[1642];
	assign		wire_l2_w24_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1645] : data_wire[1644];
	assign		wire_l2_w24_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1647] : data_wire[1646];
	assign		wire_l2_w25_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1649] : data_wire[1648];
	assign		wire_l2_w25_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1651] : data_wire[1650];
	assign		wire_l2_w25_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1653] : data_wire[1652];
	assign		wire_l2_w25_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1655] : data_wire[1654];
	assign		wire_l2_w25_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1657] : data_wire[1656];
	assign		wire_l2_w25_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1659] : data_wire[1658];
	assign		wire_l2_w25_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1661] : data_wire[1660];
	assign		wire_l2_w25_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1663] : data_wire[1662];
	assign		wire_l2_w26_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1665] : data_wire[1664];
	assign		wire_l2_w26_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1667] : data_wire[1666];
	assign		wire_l2_w26_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1669] : data_wire[1668];
	assign		wire_l2_w26_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1671] : data_wire[1670];
	assign		wire_l2_w26_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1673] : data_wire[1672];
	assign		wire_l2_w26_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1675] : data_wire[1674];
	assign		wire_l2_w26_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1677] : data_wire[1676];
	assign		wire_l2_w26_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1679] : data_wire[1678];
	assign		wire_l2_w27_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1681] : data_wire[1680];
	assign		wire_l2_w27_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1683] : data_wire[1682];
	assign		wire_l2_w27_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1685] : data_wire[1684];
	assign		wire_l2_w27_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1687] : data_wire[1686];
	assign		wire_l2_w27_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1689] : data_wire[1688];
	assign		wire_l2_w27_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1691] : data_wire[1690];
	assign		wire_l2_w27_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1693] : data_wire[1692];
	assign		wire_l2_w27_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1695] : data_wire[1694];
	assign		wire_l2_w28_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1697] : data_wire[1696];
	assign		wire_l2_w28_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1699] : data_wire[1698];
	assign		wire_l2_w28_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1701] : data_wire[1700];
	assign		wire_l2_w28_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1703] : data_wire[1702];
	assign		wire_l2_w28_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1705] : data_wire[1704];
	assign		wire_l2_w28_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1707] : data_wire[1706];
	assign		wire_l2_w28_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1709] : data_wire[1708];
	assign		wire_l2_w28_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1711] : data_wire[1710];
	assign		wire_l2_w29_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1713] : data_wire[1712];
	assign		wire_l2_w29_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1715] : data_wire[1714];
	assign		wire_l2_w29_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1717] : data_wire[1716];
	assign		wire_l2_w29_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1719] : data_wire[1718];
	assign		wire_l2_w29_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1721] : data_wire[1720];
	assign		wire_l2_w29_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1723] : data_wire[1722];
	assign		wire_l2_w29_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1725] : data_wire[1724];
	assign		wire_l2_w29_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1727] : data_wire[1726];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1281] : data_wire[1280];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1283] : data_wire[1282];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1285] : data_wire[1284];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1287] : data_wire[1286];
	assign		wire_l2_w2_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1289] : data_wire[1288];
	assign		wire_l2_w2_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1291] : data_wire[1290];
	assign		wire_l2_w2_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1293] : data_wire[1292];
	assign		wire_l2_w2_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1295] : data_wire[1294];
	assign		wire_l2_w30_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1729] : data_wire[1728];
	assign		wire_l2_w30_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1731] : data_wire[1730];
	assign		wire_l2_w30_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1733] : data_wire[1732];
	assign		wire_l2_w30_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1735] : data_wire[1734];
	assign		wire_l2_w30_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1737] : data_wire[1736];
	assign		wire_l2_w30_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1739] : data_wire[1738];
	assign		wire_l2_w30_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1741] : data_wire[1740];
	assign		wire_l2_w30_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1743] : data_wire[1742];
	assign		wire_l2_w31_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1745] : data_wire[1744];
	assign		wire_l2_w31_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1747] : data_wire[1746];
	assign		wire_l2_w31_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1749] : data_wire[1748];
	assign		wire_l2_w31_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1751] : data_wire[1750];
	assign		wire_l2_w31_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1753] : data_wire[1752];
	assign		wire_l2_w31_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1755] : data_wire[1754];
	assign		wire_l2_w31_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1757] : data_wire[1756];
	assign		wire_l2_w31_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1759] : data_wire[1758];
	assign		wire_l2_w32_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1761] : data_wire[1760];
	assign		wire_l2_w32_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1763] : data_wire[1762];
	assign		wire_l2_w32_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1765] : data_wire[1764];
	assign		wire_l2_w32_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1767] : data_wire[1766];
	assign		wire_l2_w32_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1769] : data_wire[1768];
	assign		wire_l2_w32_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1771] : data_wire[1770];
	assign		wire_l2_w32_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1773] : data_wire[1772];
	assign		wire_l2_w32_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1775] : data_wire[1774];
	assign		wire_l2_w33_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1777] : data_wire[1776];
	assign		wire_l2_w33_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1779] : data_wire[1778];
	assign		wire_l2_w33_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1781] : data_wire[1780];
	assign		wire_l2_w33_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1783] : data_wire[1782];
	assign		wire_l2_w33_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1785] : data_wire[1784];
	assign		wire_l2_w33_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1787] : data_wire[1786];
	assign		wire_l2_w33_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1789] : data_wire[1788];
	assign		wire_l2_w33_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1791] : data_wire[1790];
	assign		wire_l2_w34_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1793] : data_wire[1792];
	assign		wire_l2_w34_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1795] : data_wire[1794];
	assign		wire_l2_w34_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1797] : data_wire[1796];
	assign		wire_l2_w34_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1799] : data_wire[1798];
	assign		wire_l2_w34_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1801] : data_wire[1800];
	assign		wire_l2_w34_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1803] : data_wire[1802];
	assign		wire_l2_w34_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1805] : data_wire[1804];
	assign		wire_l2_w34_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1807] : data_wire[1806];
	assign		wire_l2_w35_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1809] : data_wire[1808];
	assign		wire_l2_w35_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1811] : data_wire[1810];
	assign		wire_l2_w35_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1813] : data_wire[1812];
	assign		wire_l2_w35_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1815] : data_wire[1814];
	assign		wire_l2_w35_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1817] : data_wire[1816];
	assign		wire_l2_w35_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1819] : data_wire[1818];
	assign		wire_l2_w35_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1821] : data_wire[1820];
	assign		wire_l2_w35_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1823] : data_wire[1822];
	assign		wire_l2_w36_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1825] : data_wire[1824];
	assign		wire_l2_w36_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1827] : data_wire[1826];
	assign		wire_l2_w36_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1829] : data_wire[1828];
	assign		wire_l2_w36_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1831] : data_wire[1830];
	assign		wire_l2_w36_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1833] : data_wire[1832];
	assign		wire_l2_w36_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1835] : data_wire[1834];
	assign		wire_l2_w36_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1837] : data_wire[1836];
	assign		wire_l2_w36_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1839] : data_wire[1838];
	assign		wire_l2_w37_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1841] : data_wire[1840];
	assign		wire_l2_w37_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1843] : data_wire[1842];
	assign		wire_l2_w37_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1845] : data_wire[1844];
	assign		wire_l2_w37_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1847] : data_wire[1846];
	assign		wire_l2_w37_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1849] : data_wire[1848];
	assign		wire_l2_w37_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1851] : data_wire[1850];
	assign		wire_l2_w37_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1853] : data_wire[1852];
	assign		wire_l2_w37_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1855] : data_wire[1854];
	assign		wire_l2_w38_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1857] : data_wire[1856];
	assign		wire_l2_w38_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1859] : data_wire[1858];
	assign		wire_l2_w38_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1861] : data_wire[1860];
	assign		wire_l2_w38_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1863] : data_wire[1862];
	assign		wire_l2_w38_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1865] : data_wire[1864];
	assign		wire_l2_w38_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1867] : data_wire[1866];
	assign		wire_l2_w38_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1869] : data_wire[1868];
	assign		wire_l2_w38_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1871] : data_wire[1870];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1297] : data_wire[1296];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1299] : data_wire[1298];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1301] : data_wire[1300];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1303] : data_wire[1302];
	assign		wire_l2_w3_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1305] : data_wire[1304];
	assign		wire_l2_w3_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1307] : data_wire[1306];
	assign		wire_l2_w3_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1309] : data_wire[1308];
	assign		wire_l2_w3_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1311] : data_wire[1310];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1313] : data_wire[1312];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1315] : data_wire[1314];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1317] : data_wire[1316];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1319] : data_wire[1318];
	assign		wire_l2_w4_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1321] : data_wire[1320];
	assign		wire_l2_w4_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1323] : data_wire[1322];
	assign		wire_l2_w4_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1325] : data_wire[1324];
	assign		wire_l2_w4_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1327] : data_wire[1326];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1329] : data_wire[1328];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1331] : data_wire[1330];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1333] : data_wire[1332];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1335] : data_wire[1334];
	assign		wire_l2_w5_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1337] : data_wire[1336];
	assign		wire_l2_w5_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1339] : data_wire[1338];
	assign		wire_l2_w5_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1341] : data_wire[1340];
	assign		wire_l2_w5_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1343] : data_wire[1342];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1345] : data_wire[1344];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1347] : data_wire[1346];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1349] : data_wire[1348];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1351] : data_wire[1350];
	assign		wire_l2_w6_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1353] : data_wire[1352];
	assign		wire_l2_w6_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1355] : data_wire[1354];
	assign		wire_l2_w6_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1357] : data_wire[1356];
	assign		wire_l2_w6_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1359] : data_wire[1358];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1361] : data_wire[1360];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1363] : data_wire[1362];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1365] : data_wire[1364];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1367] : data_wire[1366];
	assign		wire_l2_w7_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1369] : data_wire[1368];
	assign		wire_l2_w7_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1371] : data_wire[1370];
	assign		wire_l2_w7_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1373] : data_wire[1372];
	assign		wire_l2_w7_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1375] : data_wire[1374];
	assign		wire_l2_w8_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1377] : data_wire[1376];
	assign		wire_l2_w8_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1379] : data_wire[1378];
	assign		wire_l2_w8_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1381] : data_wire[1380];
	assign		wire_l2_w8_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1383] : data_wire[1382];
	assign		wire_l2_w8_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1385] : data_wire[1384];
	assign		wire_l2_w8_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1387] : data_wire[1386];
	assign		wire_l2_w8_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1389] : data_wire[1388];
	assign		wire_l2_w8_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1391] : data_wire[1390];
	assign		wire_l2_w9_n0_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1393] : data_wire[1392];
	assign		wire_l2_w9_n1_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1395] : data_wire[1394];
	assign		wire_l2_w9_n2_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1397] : data_wire[1396];
	assign		wire_l2_w9_n3_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1399] : data_wire[1398];
	assign		wire_l2_w9_n4_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1401] : data_wire[1400];
	assign		wire_l2_w9_n5_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1403] : data_wire[1402];
	assign		wire_l2_w9_n6_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1405] : data_wire[1404];
	assign		wire_l2_w9_n7_mux_dataout = (sel_wire[6] === 1'b1) ? data_wire[1407] : data_wire[1406];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1873] : data_wire[1872];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1875] : data_wire[1874];
	assign		wire_l3_w0_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1877] : data_wire[1876];
	assign		wire_l3_w0_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1879] : data_wire[1878];
	assign		wire_l3_w10_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1953] : data_wire[1952];
	assign		wire_l3_w10_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1955] : data_wire[1954];
	assign		wire_l3_w10_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1957] : data_wire[1956];
	assign		wire_l3_w10_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1959] : data_wire[1958];
	assign		wire_l3_w11_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1961] : data_wire[1960];
	assign		wire_l3_w11_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1963] : data_wire[1962];
	assign		wire_l3_w11_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1965] : data_wire[1964];
	assign		wire_l3_w11_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1967] : data_wire[1966];
	assign		wire_l3_w12_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1969] : data_wire[1968];
	assign		wire_l3_w12_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1971] : data_wire[1970];
	assign		wire_l3_w12_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1973] : data_wire[1972];
	assign		wire_l3_w12_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1975] : data_wire[1974];
	assign		wire_l3_w13_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1977] : data_wire[1976];
	assign		wire_l3_w13_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1979] : data_wire[1978];
	assign		wire_l3_w13_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1981] : data_wire[1980];
	assign		wire_l3_w13_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1983] : data_wire[1982];
	assign		wire_l3_w14_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1985] : data_wire[1984];
	assign		wire_l3_w14_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1987] : data_wire[1986];
	assign		wire_l3_w14_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1989] : data_wire[1988];
	assign		wire_l3_w14_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1991] : data_wire[1990];
	assign		wire_l3_w15_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1993] : data_wire[1992];
	assign		wire_l3_w15_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1995] : data_wire[1994];
	assign		wire_l3_w15_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1997] : data_wire[1996];
	assign		wire_l3_w15_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1999] : data_wire[1998];
	assign		wire_l3_w16_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2001] : data_wire[2000];
	assign		wire_l3_w16_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2003] : data_wire[2002];
	assign		wire_l3_w16_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2005] : data_wire[2004];
	assign		wire_l3_w16_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2007] : data_wire[2006];
	assign		wire_l3_w17_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2009] : data_wire[2008];
	assign		wire_l3_w17_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2011] : data_wire[2010];
	assign		wire_l3_w17_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2013] : data_wire[2012];
	assign		wire_l3_w17_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2015] : data_wire[2014];
	assign		wire_l3_w18_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2017] : data_wire[2016];
	assign		wire_l3_w18_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2019] : data_wire[2018];
	assign		wire_l3_w18_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2021] : data_wire[2020];
	assign		wire_l3_w18_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2023] : data_wire[2022];
	assign		wire_l3_w19_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2025] : data_wire[2024];
	assign		wire_l3_w19_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2027] : data_wire[2026];
	assign		wire_l3_w19_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2029] : data_wire[2028];
	assign		wire_l3_w19_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2031] : data_wire[2030];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1881] : data_wire[1880];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1883] : data_wire[1882];
	assign		wire_l3_w1_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1885] : data_wire[1884];
	assign		wire_l3_w1_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1887] : data_wire[1886];
	assign		wire_l3_w20_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2033] : data_wire[2032];
	assign		wire_l3_w20_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2035] : data_wire[2034];
	assign		wire_l3_w20_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2037] : data_wire[2036];
	assign		wire_l3_w20_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2039] : data_wire[2038];
	assign		wire_l3_w21_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2041] : data_wire[2040];
	assign		wire_l3_w21_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2043] : data_wire[2042];
	assign		wire_l3_w21_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2045] : data_wire[2044];
	assign		wire_l3_w21_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2047] : data_wire[2046];
	assign		wire_l3_w22_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2049] : data_wire[2048];
	assign		wire_l3_w22_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2051] : data_wire[2050];
	assign		wire_l3_w22_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2053] : data_wire[2052];
	assign		wire_l3_w22_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2055] : data_wire[2054];
	assign		wire_l3_w23_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2057] : data_wire[2056];
	assign		wire_l3_w23_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2059] : data_wire[2058];
	assign		wire_l3_w23_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2061] : data_wire[2060];
	assign		wire_l3_w23_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2063] : data_wire[2062];
	assign		wire_l3_w24_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2065] : data_wire[2064];
	assign		wire_l3_w24_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2067] : data_wire[2066];
	assign		wire_l3_w24_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2069] : data_wire[2068];
	assign		wire_l3_w24_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2071] : data_wire[2070];
	assign		wire_l3_w25_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2073] : data_wire[2072];
	assign		wire_l3_w25_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2075] : data_wire[2074];
	assign		wire_l3_w25_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2077] : data_wire[2076];
	assign		wire_l3_w25_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2079] : data_wire[2078];
	assign		wire_l3_w26_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2081] : data_wire[2080];
	assign		wire_l3_w26_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2083] : data_wire[2082];
	assign		wire_l3_w26_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2085] : data_wire[2084];
	assign		wire_l3_w26_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2087] : data_wire[2086];
	assign		wire_l3_w27_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2089] : data_wire[2088];
	assign		wire_l3_w27_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2091] : data_wire[2090];
	assign		wire_l3_w27_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2093] : data_wire[2092];
	assign		wire_l3_w27_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2095] : data_wire[2094];
	assign		wire_l3_w28_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2097] : data_wire[2096];
	assign		wire_l3_w28_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2099] : data_wire[2098];
	assign		wire_l3_w28_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2101] : data_wire[2100];
	assign		wire_l3_w28_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2103] : data_wire[2102];
	assign		wire_l3_w29_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2105] : data_wire[2104];
	assign		wire_l3_w29_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2107] : data_wire[2106];
	assign		wire_l3_w29_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2109] : data_wire[2108];
	assign		wire_l3_w29_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2111] : data_wire[2110];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1889] : data_wire[1888];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1891] : data_wire[1890];
	assign		wire_l3_w2_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1893] : data_wire[1892];
	assign		wire_l3_w2_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1895] : data_wire[1894];
	assign		wire_l3_w30_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2113] : data_wire[2112];
	assign		wire_l3_w30_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2115] : data_wire[2114];
	assign		wire_l3_w30_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2117] : data_wire[2116];
	assign		wire_l3_w30_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2119] : data_wire[2118];
	assign		wire_l3_w31_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2121] : data_wire[2120];
	assign		wire_l3_w31_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2123] : data_wire[2122];
	assign		wire_l3_w31_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2125] : data_wire[2124];
	assign		wire_l3_w31_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2127] : data_wire[2126];
	assign		wire_l3_w32_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2129] : data_wire[2128];
	assign		wire_l3_w32_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2131] : data_wire[2130];
	assign		wire_l3_w32_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2133] : data_wire[2132];
	assign		wire_l3_w32_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2135] : data_wire[2134];
	assign		wire_l3_w33_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2137] : data_wire[2136];
	assign		wire_l3_w33_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2139] : data_wire[2138];
	assign		wire_l3_w33_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2141] : data_wire[2140];
	assign		wire_l3_w33_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2143] : data_wire[2142];
	assign		wire_l3_w34_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2145] : data_wire[2144];
	assign		wire_l3_w34_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2147] : data_wire[2146];
	assign		wire_l3_w34_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2149] : data_wire[2148];
	assign		wire_l3_w34_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2151] : data_wire[2150];
	assign		wire_l3_w35_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2153] : data_wire[2152];
	assign		wire_l3_w35_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2155] : data_wire[2154];
	assign		wire_l3_w35_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2157] : data_wire[2156];
	assign		wire_l3_w35_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2159] : data_wire[2158];
	assign		wire_l3_w36_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2161] : data_wire[2160];
	assign		wire_l3_w36_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2163] : data_wire[2162];
	assign		wire_l3_w36_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2165] : data_wire[2164];
	assign		wire_l3_w36_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2167] : data_wire[2166];
	assign		wire_l3_w37_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2169] : data_wire[2168];
	assign		wire_l3_w37_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2171] : data_wire[2170];
	assign		wire_l3_w37_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2173] : data_wire[2172];
	assign		wire_l3_w37_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2175] : data_wire[2174];
	assign		wire_l3_w38_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2177] : data_wire[2176];
	assign		wire_l3_w38_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2179] : data_wire[2178];
	assign		wire_l3_w38_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2181] : data_wire[2180];
	assign		wire_l3_w38_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[2183] : data_wire[2182];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1897] : data_wire[1896];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1899] : data_wire[1898];
	assign		wire_l3_w3_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1901] : data_wire[1900];
	assign		wire_l3_w3_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1903] : data_wire[1902];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1905] : data_wire[1904];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1907] : data_wire[1906];
	assign		wire_l3_w4_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1909] : data_wire[1908];
	assign		wire_l3_w4_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1911] : data_wire[1910];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1913] : data_wire[1912];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1915] : data_wire[1914];
	assign		wire_l3_w5_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1917] : data_wire[1916];
	assign		wire_l3_w5_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1919] : data_wire[1918];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1921] : data_wire[1920];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1923] : data_wire[1922];
	assign		wire_l3_w6_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1925] : data_wire[1924];
	assign		wire_l3_w6_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1927] : data_wire[1926];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1929] : data_wire[1928];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1931] : data_wire[1930];
	assign		wire_l3_w7_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1933] : data_wire[1932];
	assign		wire_l3_w7_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1935] : data_wire[1934];
	assign		wire_l3_w8_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1937] : data_wire[1936];
	assign		wire_l3_w8_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1939] : data_wire[1938];
	assign		wire_l3_w8_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1941] : data_wire[1940];
	assign		wire_l3_w8_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1943] : data_wire[1942];
	assign		wire_l3_w9_n0_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1945] : data_wire[1944];
	assign		wire_l3_w9_n1_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1947] : data_wire[1946];
	assign		wire_l3_w9_n2_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1949] : data_wire[1948];
	assign		wire_l3_w9_n3_mux_dataout = (sel_wire[12] === 1'b1) ? data_wire[1951] : data_wire[1950];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2185] : data_wire[2184];
	assign		wire_l4_w0_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2187] : data_wire[2186];
	assign		wire_l4_w10_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2225] : data_wire[2224];
	assign		wire_l4_w10_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2227] : data_wire[2226];
	assign		wire_l4_w11_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2229] : data_wire[2228];
	assign		wire_l4_w11_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2231] : data_wire[2230];
	assign		wire_l4_w12_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2233] : data_wire[2232];
	assign		wire_l4_w12_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2235] : data_wire[2234];
	assign		wire_l4_w13_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2237] : data_wire[2236];
	assign		wire_l4_w13_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2239] : data_wire[2238];
	assign		wire_l4_w14_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2241] : data_wire[2240];
	assign		wire_l4_w14_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2243] : data_wire[2242];
	assign		wire_l4_w15_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2245] : data_wire[2244];
	assign		wire_l4_w15_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2247] : data_wire[2246];
	assign		wire_l4_w16_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2249] : data_wire[2248];
	assign		wire_l4_w16_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2251] : data_wire[2250];
	assign		wire_l4_w17_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2253] : data_wire[2252];
	assign		wire_l4_w17_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2255] : data_wire[2254];
	assign		wire_l4_w18_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2257] : data_wire[2256];
	assign		wire_l4_w18_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2259] : data_wire[2258];
	assign		wire_l4_w19_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2261] : data_wire[2260];
	assign		wire_l4_w19_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2263] : data_wire[2262];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2189] : data_wire[2188];
	assign		wire_l4_w1_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2191] : data_wire[2190];
	assign		wire_l4_w20_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2265] : data_wire[2264];
	assign		wire_l4_w20_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2267] : data_wire[2266];
	assign		wire_l4_w21_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2269] : data_wire[2268];
	assign		wire_l4_w21_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2271] : data_wire[2270];
	assign		wire_l4_w22_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2273] : data_wire[2272];
	assign		wire_l4_w22_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2275] : data_wire[2274];
	assign		wire_l4_w23_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2277] : data_wire[2276];
	assign		wire_l4_w23_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2279] : data_wire[2278];
	assign		wire_l4_w24_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2281] : data_wire[2280];
	assign		wire_l4_w24_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2283] : data_wire[2282];
	assign		wire_l4_w25_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2285] : data_wire[2284];
	assign		wire_l4_w25_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2287] : data_wire[2286];
	assign		wire_l4_w26_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2289] : data_wire[2288];
	assign		wire_l4_w26_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2291] : data_wire[2290];
	assign		wire_l4_w27_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2293] : data_wire[2292];
	assign		wire_l4_w27_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2295] : data_wire[2294];
	assign		wire_l4_w28_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2297] : data_wire[2296];
	assign		wire_l4_w28_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2299] : data_wire[2298];
	assign		wire_l4_w29_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2301] : data_wire[2300];
	assign		wire_l4_w29_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2303] : data_wire[2302];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2193] : data_wire[2192];
	assign		wire_l4_w2_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2195] : data_wire[2194];
	assign		wire_l4_w30_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2305] : data_wire[2304];
	assign		wire_l4_w30_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2307] : data_wire[2306];
	assign		wire_l4_w31_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2309] : data_wire[2308];
	assign		wire_l4_w31_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2311] : data_wire[2310];
	assign		wire_l4_w32_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2313] : data_wire[2312];
	assign		wire_l4_w32_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2315] : data_wire[2314];
	assign		wire_l4_w33_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2317] : data_wire[2316];
	assign		wire_l4_w33_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2319] : data_wire[2318];
	assign		wire_l4_w34_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2321] : data_wire[2320];
	assign		wire_l4_w34_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2323] : data_wire[2322];
	assign		wire_l4_w35_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2325] : data_wire[2324];
	assign		wire_l4_w35_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2327] : data_wire[2326];
	assign		wire_l4_w36_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2329] : data_wire[2328];
	assign		wire_l4_w36_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2331] : data_wire[2330];
	assign		wire_l4_w37_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2333] : data_wire[2332];
	assign		wire_l4_w37_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2335] : data_wire[2334];
	assign		wire_l4_w38_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2337] : data_wire[2336];
	assign		wire_l4_w38_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2339] : data_wire[2338];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2197] : data_wire[2196];
	assign		wire_l4_w3_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2199] : data_wire[2198];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2201] : data_wire[2200];
	assign		wire_l4_w4_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2203] : data_wire[2202];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2205] : data_wire[2204];
	assign		wire_l4_w5_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2207] : data_wire[2206];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2209] : data_wire[2208];
	assign		wire_l4_w6_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2211] : data_wire[2210];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2213] : data_wire[2212];
	assign		wire_l4_w7_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2215] : data_wire[2214];
	assign		wire_l4_w8_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2217] : data_wire[2216];
	assign		wire_l4_w8_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2219] : data_wire[2218];
	assign		wire_l4_w9_n0_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2221] : data_wire[2220];
	assign		wire_l4_w9_n1_mux_dataout = (sel_wire[18] === 1'b1) ? data_wire[2223] : data_wire[2222];
	assign		wire_l5_w0_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2341] : data_wire[2340];
	assign		wire_l5_w10_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2361] : data_wire[2360];
	assign		wire_l5_w11_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2363] : data_wire[2362];
	assign		wire_l5_w12_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2365] : data_wire[2364];
	assign		wire_l5_w13_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2367] : data_wire[2366];
	assign		wire_l5_w14_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2369] : data_wire[2368];
	assign		wire_l5_w15_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2371] : data_wire[2370];
	assign		wire_l5_w16_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2373] : data_wire[2372];
	assign		wire_l5_w17_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2375] : data_wire[2374];
	assign		wire_l5_w18_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2377] : data_wire[2376];
	assign		wire_l5_w19_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2379] : data_wire[2378];
	assign		wire_l5_w1_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2343] : data_wire[2342];
	assign		wire_l5_w20_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2381] : data_wire[2380];
	assign		wire_l5_w21_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2383] : data_wire[2382];
	assign		wire_l5_w22_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2385] : data_wire[2384];
	assign		wire_l5_w23_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2387] : data_wire[2386];
	assign		wire_l5_w24_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2389] : data_wire[2388];
	assign		wire_l5_w25_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2391] : data_wire[2390];
	assign		wire_l5_w26_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2393] : data_wire[2392];
	assign		wire_l5_w27_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2395] : data_wire[2394];
	assign		wire_l5_w28_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2397] : data_wire[2396];
	assign		wire_l5_w29_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2399] : data_wire[2398];
	assign		wire_l5_w2_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2345] : data_wire[2344];
	assign		wire_l5_w30_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2401] : data_wire[2400];
	assign		wire_l5_w31_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2403] : data_wire[2402];
	assign		wire_l5_w32_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2405] : data_wire[2404];
	assign		wire_l5_w33_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2407] : data_wire[2406];
	assign		wire_l5_w34_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2409] : data_wire[2408];
	assign		wire_l5_w35_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2411] : data_wire[2410];
	assign		wire_l5_w36_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2413] : data_wire[2412];
	assign		wire_l5_w37_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2415] : data_wire[2414];
	assign		wire_l5_w38_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2417] : data_wire[2416];
	assign		wire_l5_w3_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2347] : data_wire[2346];
	assign		wire_l5_w4_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2349] : data_wire[2348];
	assign		wire_l5_w5_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2351] : data_wire[2350];
	assign		wire_l5_w6_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2353] : data_wire[2352];
	assign		wire_l5_w7_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2355] : data_wire[2354];
	assign		wire_l5_w8_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2357] : data_wire[2356];
	assign		wire_l5_w9_n0_mux_dataout = (sel_wire[24] === 1'b1) ? data_wire[2359] : data_wire[2358];
	assign
		data_wire = {wire_l4_w38_n1_mux_dataout, wire_l4_w38_n0_mux_dataout, wire_l4_w37_n1_mux_dataout, wire_l4_w37_n0_mux_dataout, wire_l4_w36_n1_mux_dataout, wire_l4_w36_n0_mux_dataout, wire_l4_w35_n1_mux_dataout, wire_l4_w35_n0_mux_dataout, wire_l4_w34_n1_mux_dataout, wire_l4_w34_n0_mux_dataout, wire_l4_w33_n1_mux_dataout, wire_l4_w33_n0_mux_dataout, wire_l4_w32_n1_mux_dataout, wire_l4_w32_n0_mux_dataout, wire_l4_w31_n1_mux_dataout, wire_l4_w31_n0_mux_dataout, wire_l4_w30_n1_mux_dataout, wire_l4_w30_n0_mux_dataout, wire_l4_w29_n1_mux_dataout, wire_l4_w29_n0_mux_dataout, wire_l4_w28_n1_mux_dataout, wire_l4_w28_n0_mux_dataout, wire_l4_w27_n1_mux_dataout, wire_l4_w27_n0_mux_dataout, wire_l4_w26_n1_mux_dataout, wire_l4_w26_n0_mux_dataout, wire_l4_w25_n1_mux_dataout, wire_l4_w25_n0_mux_dataout, wire_l4_w24_n1_mux_dataout, wire_l4_w24_n0_mux_dataout, wire_l4_w23_n1_mux_dataout, wire_l4_w23_n0_mux_dataout, wire_l4_w22_n1_mux_dataout, wire_l4_w22_n0_mux_dataout, wire_l4_w21_n1_mux_dataout, wire_l4_w21_n0_mux_dataout, wire_l4_w20_n1_mux_dataout, wire_l4_w20_n0_mux_dataout, wire_l4_w19_n1_mux_dataout, wire_l4_w19_n0_mux_dataout, wire_l4_w18_n1_mux_dataout, wire_l4_w18_n0_mux_dataout, wire_l4_w17_n1_mux_dataout, wire_l4_w17_n0_mux_dataout, wire_l4_w16_n1_mux_dataout, wire_l4_w16_n0_mux_dataout, wire_l4_w15_n1_mux_dataout, wire_l4_w15_n0_mux_dataout, wire_l4_w14_n1_mux_dataout, wire_l4_w14_n0_mux_dataout, wire_l4_w13_n1_mux_dataout, wire_l4_w13_n0_mux_dataout, wire_l4_w12_n1_mux_dataout, wire_l4_w12_n0_mux_dataout, wire_l4_w11_n1_mux_dataout, wire_l4_w11_n0_mux_dataout, wire_l4_w10_n1_mux_dataout, wire_l4_w10_n0_mux_dataout, wire_l4_w9_n1_mux_dataout, wire_l4_w9_n0_mux_dataout, wire_l4_w8_n1_mux_dataout, wire_l4_w8_n0_mux_dataout, wire_l4_w7_n1_mux_dataout, wire_l4_w7_n0_mux_dataout, wire_l4_w6_n1_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n1_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n1_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n1_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n1_mux_dataout, wire_l4_w2_n0_mux_dataout
, wire_l4_w1_n1_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n1_mux_dataout, wire_l4_w0_n0_mux_dataout, wire_l3_w38_n3_mux_dataout, wire_l3_w38_n2_mux_dataout, wire_l3_w38_n1_mux_dataout, wire_l3_w38_n0_mux_dataout, wire_l3_w37_n3_mux_dataout, wire_l3_w37_n2_mux_dataout, wire_l3_w37_n1_mux_dataout, wire_l3_w37_n0_mux_dataout, wire_l3_w36_n3_mux_dataout, wire_l3_w36_n2_mux_dataout, wire_l3_w36_n1_mux_dataout, wire_l3_w36_n0_mux_dataout, wire_l3_w35_n3_mux_dataout, wire_l3_w35_n2_mux_dataout, wire_l3_w35_n1_mux_dataout, wire_l3_w35_n0_mux_dataout, wire_l3_w34_n3_mux_dataout, wire_l3_w34_n2_mux_dataout, wire_l3_w34_n1_mux_dataout, wire_l3_w34_n0_mux_dataout, wire_l3_w33_n3_mux_dataout, wire_l3_w33_n2_mux_dataout, wire_l3_w33_n1_mux_dataout, wire_l3_w33_n0_mux_dataout, wire_l3_w32_n3_mux_dataout, wire_l3_w32_n2_mux_dataout, wire_l3_w32_n1_mux_dataout, wire_l3_w32_n0_mux_dataout, wire_l3_w31_n3_mux_dataout, wire_l3_w31_n2_mux_dataout, wire_l3_w31_n1_mux_dataout, wire_l3_w31_n0_mux_dataout, wire_l3_w30_n3_mux_dataout, wire_l3_w30_n2_mux_dataout, wire_l3_w30_n1_mux_dataout, wire_l3_w30_n0_mux_dataout, wire_l3_w29_n3_mux_dataout, wire_l3_w29_n2_mux_dataout, wire_l3_w29_n1_mux_dataout, wire_l3_w29_n0_mux_dataout, wire_l3_w28_n3_mux_dataout, wire_l3_w28_n2_mux_dataout, wire_l3_w28_n1_mux_dataout, wire_l3_w28_n0_mux_dataout, wire_l3_w27_n3_mux_dataout, wire_l3_w27_n2_mux_dataout, wire_l3_w27_n1_mux_dataout, wire_l3_w27_n0_mux_dataout, wire_l3_w26_n3_mux_dataout, wire_l3_w26_n2_mux_dataout, wire_l3_w26_n1_mux_dataout, wire_l3_w26_n0_mux_dataout, wire_l3_w25_n3_mux_dataout, wire_l3_w25_n2_mux_dataout, wire_l3_w25_n1_mux_dataout, wire_l3_w25_n0_mux_dataout, wire_l3_w24_n3_mux_dataout, wire_l3_w24_n2_mux_dataout, wire_l3_w24_n1_mux_dataout, wire_l3_w24_n0_mux_dataout, wire_l3_w23_n3_mux_dataout, wire_l3_w23_n2_mux_dataout, wire_l3_w23_n1_mux_dataout, wire_l3_w23_n0_mux_dataout, wire_l3_w22_n3_mux_dataout, wire_l3_w22_n2_mux_dataout, wire_l3_w22_n1_mux_dataout, wire_l3_w22_n0_mux_dataout, wire_l3_w21_n3_mux_dataout, wire_l3_w21_n2_mux_dataout
, wire_l3_w21_n1_mux_dataout, wire_l3_w21_n0_mux_dataout, wire_l3_w20_n3_mux_dataout, wire_l3_w20_n2_mux_dataout, wire_l3_w20_n1_mux_dataout, wire_l3_w20_n0_mux_dataout, wire_l3_w19_n3_mux_dataout, wire_l3_w19_n2_mux_dataout, wire_l3_w19_n1_mux_dataout, wire_l3_w19_n0_mux_dataout, wire_l3_w18_n3_mux_dataout, wire_l3_w18_n2_mux_dataout, wire_l3_w18_n1_mux_dataout, wire_l3_w18_n0_mux_dataout, wire_l3_w17_n3_mux_dataout, wire_l3_w17_n2_mux_dataout, wire_l3_w17_n1_mux_dataout, wire_l3_w17_n0_mux_dataout, wire_l3_w16_n3_mux_dataout, wire_l3_w16_n2_mux_dataout, wire_l3_w16_n1_mux_dataout, wire_l3_w16_n0_mux_dataout, wire_l3_w15_n3_mux_dataout, wire_l3_w15_n2_mux_dataout, wire_l3_w15_n1_mux_dataout, wire_l3_w15_n0_mux_dataout, wire_l3_w14_n3_mux_dataout, wire_l3_w14_n2_mux_dataout, wire_l3_w14_n1_mux_dataout, wire_l3_w14_n0_mux_dataout, wire_l3_w13_n3_mux_dataout, wire_l3_w13_n2_mux_dataout, wire_l3_w13_n1_mux_dataout, wire_l3_w13_n0_mux_dataout, wire_l3_w12_n3_mux_dataout, wire_l3_w12_n2_mux_dataout, wire_l3_w12_n1_mux_dataout, wire_l3_w12_n0_mux_dataout, wire_l3_w11_n3_mux_dataout, wire_l3_w11_n2_mux_dataout, wire_l3_w11_n1_mux_dataout, wire_l3_w11_n0_mux_dataout, wire_l3_w10_n3_mux_dataout, wire_l3_w10_n2_mux_dataout, wire_l3_w10_n1_mux_dataout, wire_l3_w10_n0_mux_dataout, wire_l3_w9_n3_mux_dataout, wire_l3_w9_n2_mux_dataout, wire_l3_w9_n1_mux_dataout, wire_l3_w9_n0_mux_dataout, wire_l3_w8_n3_mux_dataout, wire_l3_w8_n2_mux_dataout, wire_l3_w8_n1_mux_dataout, wire_l3_w8_n0_mux_dataout, wire_l3_w7_n3_mux_dataout, wire_l3_w7_n2_mux_dataout, wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n3_mux_dataout, wire_l3_w6_n2_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n3_mux_dataout, wire_l3_w5_n2_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n3_mux_dataout, wire_l3_w4_n2_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n3_mux_dataout, wire_l3_w3_n2_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n3_mux_dataout
, wire_l3_w2_n2_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n3_mux_dataout, wire_l3_w1_n2_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n3_mux_dataout, wire_l3_w0_n2_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w38_n7_mux_dataout, wire_l2_w38_n6_mux_dataout, wire_l2_w38_n5_mux_dataout, wire_l2_w38_n4_mux_dataout, wire_l2_w38_n3_mux_dataout, wire_l2_w38_n2_mux_dataout, wire_l2_w38_n1_mux_dataout, wire_l2_w38_n0_mux_dataout, wire_l2_w37_n7_mux_dataout, wire_l2_w37_n6_mux_dataout, wire_l2_w37_n5_mux_dataout, wire_l2_w37_n4_mux_dataout, wire_l2_w37_n3_mux_dataout, wire_l2_w37_n2_mux_dataout, wire_l2_w37_n1_mux_dataout, wire_l2_w37_n0_mux_dataout, wire_l2_w36_n7_mux_dataout, wire_l2_w36_n6_mux_dataout, wire_l2_w36_n5_mux_dataout, wire_l2_w36_n4_mux_dataout, wire_l2_w36_n3_mux_dataout, wire_l2_w36_n2_mux_dataout, wire_l2_w36_n1_mux_dataout, wire_l2_w36_n0_mux_dataout, wire_l2_w35_n7_mux_dataout, wire_l2_w35_n6_mux_dataout, wire_l2_w35_n5_mux_dataout, wire_l2_w35_n4_mux_dataout, wire_l2_w35_n3_mux_dataout, wire_l2_w35_n2_mux_dataout, wire_l2_w35_n1_mux_dataout, wire_l2_w35_n0_mux_dataout, wire_l2_w34_n7_mux_dataout, wire_l2_w34_n6_mux_dataout, wire_l2_w34_n5_mux_dataout, wire_l2_w34_n4_mux_dataout, wire_l2_w34_n3_mux_dataout, wire_l2_w34_n2_mux_dataout, wire_l2_w34_n1_mux_dataout, wire_l2_w34_n0_mux_dataout, wire_l2_w33_n7_mux_dataout, wire_l2_w33_n6_mux_dataout, wire_l2_w33_n5_mux_dataout, wire_l2_w33_n4_mux_dataout, wire_l2_w33_n3_mux_dataout, wire_l2_w33_n2_mux_dataout, wire_l2_w33_n1_mux_dataout, wire_l2_w33_n0_mux_dataout, wire_l2_w32_n7_mux_dataout, wire_l2_w32_n6_mux_dataout, wire_l2_w32_n5_mux_dataout, wire_l2_w32_n4_mux_dataout, wire_l2_w32_n3_mux_dataout, wire_l2_w32_n2_mux_dataout, wire_l2_w32_n1_mux_dataout, wire_l2_w32_n0_mux_dataout, wire_l2_w31_n7_mux_dataout, wire_l2_w31_n6_mux_dataout, wire_l2_w31_n5_mux_dataout, wire_l2_w31_n4_mux_dataout, wire_l2_w31_n3_mux_dataout, wire_l2_w31_n2_mux_dataout, wire_l2_w31_n1_mux_dataout
, wire_l2_w31_n0_mux_dataout, wire_l2_w30_n7_mux_dataout, wire_l2_w30_n6_mux_dataout, wire_l2_w30_n5_mux_dataout, wire_l2_w30_n4_mux_dataout, wire_l2_w30_n3_mux_dataout, wire_l2_w30_n2_mux_dataout, wire_l2_w30_n1_mux_dataout, wire_l2_w30_n0_mux_dataout, wire_l2_w29_n7_mux_dataout, wire_l2_w29_n6_mux_dataout, wire_l2_w29_n5_mux_dataout, wire_l2_w29_n4_mux_dataout, wire_l2_w29_n3_mux_dataout, wire_l2_w29_n2_mux_dataout, wire_l2_w29_n1_mux_dataout, wire_l2_w29_n0_mux_dataout, wire_l2_w28_n7_mux_dataout, wire_l2_w28_n6_mux_dataout, wire_l2_w28_n5_mux_dataout, wire_l2_w28_n4_mux_dataout, wire_l2_w28_n3_mux_dataout, wire_l2_w28_n2_mux_dataout, wire_l2_w28_n1_mux_dataout, wire_l2_w28_n0_mux_dataout, wire_l2_w27_n7_mux_dataout, wire_l2_w27_n6_mux_dataout, wire_l2_w27_n5_mux_dataout, wire_l2_w27_n4_mux_dataout, wire_l2_w27_n3_mux_dataout, wire_l2_w27_n2_mux_dataout, wire_l2_w27_n1_mux_dataout, wire_l2_w27_n0_mux_dataout, wire_l2_w26_n7_mux_dataout, wire_l2_w26_n6_mux_dataout, wire_l2_w26_n5_mux_dataout, wire_l2_w26_n4_mux_dataout, wire_l2_w26_n3_mux_dataout, wire_l2_w26_n2_mux_dataout, wire_l2_w26_n1_mux_dataout, wire_l2_w26_n0_mux_dataout, wire_l2_w25_n7_mux_dataout, wire_l2_w25_n6_mux_dataout, wire_l2_w25_n5_mux_dataout, wire_l2_w25_n4_mux_dataout, wire_l2_w25_n3_mux_dataout, wire_l2_w25_n2_mux_dataout, wire_l2_w25_n1_mux_dataout, wire_l2_w25_n0_mux_dataout, wire_l2_w24_n7_mux_dataout, wire_l2_w24_n6_mux_dataout, wire_l2_w24_n5_mux_dataout, wire_l2_w24_n4_mux_dataout, wire_l2_w24_n3_mux_dataout, wire_l2_w24_n2_mux_dataout, wire_l2_w24_n1_mux_dataout, wire_l2_w24_n0_mux_dataout, wire_l2_w23_n7_mux_dataout, wire_l2_w23_n6_mux_dataout, wire_l2_w23_n5_mux_dataout, wire_l2_w23_n4_mux_dataout, wire_l2_w23_n3_mux_dataout, wire_l2_w23_n2_mux_dataout, wire_l2_w23_n1_mux_dataout, wire_l2_w23_n0_mux_dataout, wire_l2_w22_n7_mux_dataout, wire_l2_w22_n6_mux_dataout, wire_l2_w22_n5_mux_dataout, wire_l2_w22_n4_mux_dataout, wire_l2_w22_n3_mux_dataout, wire_l2_w22_n2_mux_dataout, wire_l2_w22_n1_mux_dataout, wire_l2_w22_n0_mux_dataout, wire_l2_w21_n7_mux_dataout
, wire_l2_w21_n6_mux_dataout, wire_l2_w21_n5_mux_dataout, wire_l2_w21_n4_mux_dataout, wire_l2_w21_n3_mux_dataout, wire_l2_w21_n2_mux_dataout, wire_l2_w21_n1_mux_dataout, wire_l2_w21_n0_mux_dataout, wire_l2_w20_n7_mux_dataout, wire_l2_w20_n6_mux_dataout, wire_l2_w20_n5_mux_dataout, wire_l2_w20_n4_mux_dataout, wire_l2_w20_n3_mux_dataout, wire_l2_w20_n2_mux_dataout, wire_l2_w20_n1_mux_dataout, wire_l2_w20_n0_mux_dataout, wire_l2_w19_n7_mux_dataout, wire_l2_w19_n6_mux_dataout, wire_l2_w19_n5_mux_dataout, wire_l2_w19_n4_mux_dataout, wire_l2_w19_n3_mux_dataout, wire_l2_w19_n2_mux_dataout, wire_l2_w19_n1_mux_dataout, wire_l2_w19_n0_mux_dataout, wire_l2_w18_n7_mux_dataout, wire_l2_w18_n6_mux_dataout, wire_l2_w18_n5_mux_dataout, wire_l2_w18_n4_mux_dataout, wire_l2_w18_n3_mux_dataout, wire_l2_w18_n2_mux_dataout, wire_l2_w18_n1_mux_dataout, wire_l2_w18_n0_mux_dataout, wire_l2_w17_n7_mux_dataout, wire_l2_w17_n6_mux_dataout, wire_l2_w17_n5_mux_dataout, wire_l2_w17_n4_mux_dataout, wire_l2_w17_n3_mux_dataout, wire_l2_w17_n2_mux_dataout, wire_l2_w17_n1_mux_dataout, wire_l2_w17_n0_mux_dataout, wire_l2_w16_n7_mux_dataout, wire_l2_w16_n6_mux_dataout, wire_l2_w16_n5_mux_dataout, wire_l2_w16_n4_mux_dataout, wire_l2_w16_n3_mux_dataout, wire_l2_w16_n2_mux_dataout, wire_l2_w16_n1_mux_dataout, wire_l2_w16_n0_mux_dataout, wire_l2_w15_n7_mux_dataout, wire_l2_w15_n6_mux_dataout, wire_l2_w15_n5_mux_dataout, wire_l2_w15_n4_mux_dataout, wire_l2_w15_n3_mux_dataout, wire_l2_w15_n2_mux_dataout, wire_l2_w15_n1_mux_dataout, wire_l2_w15_n0_mux_dataout, wire_l2_w14_n7_mux_dataout, wire_l2_w14_n6_mux_dataout, wire_l2_w14_n5_mux_dataout, wire_l2_w14_n4_mux_dataout, wire_l2_w14_n3_mux_dataout, wire_l2_w14_n2_mux_dataout, wire_l2_w14_n1_mux_dataout, wire_l2_w14_n0_mux_dataout, wire_l2_w13_n7_mux_dataout, wire_l2_w13_n6_mux_dataout, wire_l2_w13_n5_mux_dataout, wire_l2_w13_n4_mux_dataout, wire_l2_w13_n3_mux_dataout, wire_l2_w13_n2_mux_dataout, wire_l2_w13_n1_mux_dataout, wire_l2_w13_n0_mux_dataout, wire_l2_w12_n7_mux_dataout, wire_l2_w12_n6_mux_dataout, wire_l2_w12_n5_mux_dataout
, wire_l2_w12_n4_mux_dataout, wire_l2_w12_n3_mux_dataout, wire_l2_w12_n2_mux_dataout, wire_l2_w12_n1_mux_dataout, wire_l2_w12_n0_mux_dataout, wire_l2_w11_n7_mux_dataout, wire_l2_w11_n6_mux_dataout, wire_l2_w11_n5_mux_dataout, wire_l2_w11_n4_mux_dataout, wire_l2_w11_n3_mux_dataout, wire_l2_w11_n2_mux_dataout, wire_l2_w11_n1_mux_dataout, wire_l2_w11_n0_mux_dataout, wire_l2_w10_n7_mux_dataout, wire_l2_w10_n6_mux_dataout, wire_l2_w10_n5_mux_dataout, wire_l2_w10_n4_mux_dataout, wire_l2_w10_n3_mux_dataout, wire_l2_w10_n2_mux_dataout, wire_l2_w10_n1_mux_dataout, wire_l2_w10_n0_mux_dataout, wire_l2_w9_n7_mux_dataout, wire_l2_w9_n6_mux_dataout, wire_l2_w9_n5_mux_dataout, wire_l2_w9_n4_mux_dataout, wire_l2_w9_n3_mux_dataout, wire_l2_w9_n2_mux_dataout, wire_l2_w9_n1_mux_dataout, wire_l2_w9_n0_mux_dataout, wire_l2_w8_n7_mux_dataout, wire_l2_w8_n6_mux_dataout, wire_l2_w8_n5_mux_dataout, wire_l2_w8_n4_mux_dataout, wire_l2_w8_n3_mux_dataout, wire_l2_w8_n2_mux_dataout, wire_l2_w8_n1_mux_dataout, wire_l2_w8_n0_mux_dataout, wire_l2_w7_n7_mux_dataout, wire_l2_w7_n6_mux_dataout, wire_l2_w7_n5_mux_dataout, wire_l2_w7_n4_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n7_mux_dataout, wire_l2_w6_n6_mux_dataout, wire_l2_w6_n5_mux_dataout, wire_l2_w6_n4_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n7_mux_dataout, wire_l2_w5_n6_mux_dataout, wire_l2_w5_n5_mux_dataout, wire_l2_w5_n4_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n7_mux_dataout, wire_l2_w4_n6_mux_dataout, wire_l2_w4_n5_mux_dataout, wire_l2_w4_n4_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n7_mux_dataout, wire_l2_w3_n6_mux_dataout, wire_l2_w3_n5_mux_dataout, wire_l2_w3_n4_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout
, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n7_mux_dataout, wire_l2_w2_n6_mux_dataout, wire_l2_w2_n5_mux_dataout, wire_l2_w2_n4_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n7_mux_dataout, wire_l2_w1_n6_mux_dataout, wire_l2_w1_n5_mux_dataout, wire_l2_w1_n4_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n7_mux_dataout, wire_l2_w0_n6_mux_dataout, wire_l2_w0_n5_mux_dataout, wire_l2_w0_n4_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w38_n15_mux_dataout, wire_l1_w38_n14_mux_dataout, wire_l1_w38_n13_mux_dataout, wire_l1_w38_n12_mux_dataout, wire_l1_w38_n11_mux_dataout, wire_l1_w38_n10_mux_dataout, wire_l1_w38_n9_mux_dataout, wire_l1_w38_n8_mux_dataout, wire_l1_w38_n7_mux_dataout, wire_l1_w38_n6_mux_dataout, wire_l1_w38_n5_mux_dataout, wire_l1_w38_n4_mux_dataout, wire_l1_w38_n3_mux_dataout, wire_l1_w38_n2_mux_dataout, wire_l1_w38_n1_mux_dataout, wire_l1_w38_n0_mux_dataout, wire_l1_w37_n15_mux_dataout, wire_l1_w37_n14_mux_dataout, wire_l1_w37_n13_mux_dataout, wire_l1_w37_n12_mux_dataout, wire_l1_w37_n11_mux_dataout, wire_l1_w37_n10_mux_dataout, wire_l1_w37_n9_mux_dataout, wire_l1_w37_n8_mux_dataout, wire_l1_w37_n7_mux_dataout, wire_l1_w37_n6_mux_dataout, wire_l1_w37_n5_mux_dataout, wire_l1_w37_n4_mux_dataout, wire_l1_w37_n3_mux_dataout, wire_l1_w37_n2_mux_dataout, wire_l1_w37_n1_mux_dataout, wire_l1_w37_n0_mux_dataout, wire_l1_w36_n15_mux_dataout, wire_l1_w36_n14_mux_dataout, wire_l1_w36_n13_mux_dataout, wire_l1_w36_n12_mux_dataout, wire_l1_w36_n11_mux_dataout, wire_l1_w36_n10_mux_dataout, wire_l1_w36_n9_mux_dataout, wire_l1_w36_n8_mux_dataout, wire_l1_w36_n7_mux_dataout, wire_l1_w36_n6_mux_dataout, wire_l1_w36_n5_mux_dataout, wire_l1_w36_n4_mux_dataout, wire_l1_w36_n3_mux_dataout, wire_l1_w36_n2_mux_dataout, wire_l1_w36_n1_mux_dataout, wire_l1_w36_n0_mux_dataout, wire_l1_w35_n15_mux_dataout
, wire_l1_w35_n14_mux_dataout, wire_l1_w35_n13_mux_dataout, wire_l1_w35_n12_mux_dataout, wire_l1_w35_n11_mux_dataout, wire_l1_w35_n10_mux_dataout, wire_l1_w35_n9_mux_dataout, wire_l1_w35_n8_mux_dataout, wire_l1_w35_n7_mux_dataout, wire_l1_w35_n6_mux_dataout, wire_l1_w35_n5_mux_dataout, wire_l1_w35_n4_mux_dataout, wire_l1_w35_n3_mux_dataout, wire_l1_w35_n2_mux_dataout, wire_l1_w35_n1_mux_dataout, wire_l1_w35_n0_mux_dataout, wire_l1_w34_n15_mux_dataout, wire_l1_w34_n14_mux_dataout, wire_l1_w34_n13_mux_dataout, wire_l1_w34_n12_mux_dataout, wire_l1_w34_n11_mux_dataout, wire_l1_w34_n10_mux_dataout, wire_l1_w34_n9_mux_dataout, wire_l1_w34_n8_mux_dataout, wire_l1_w34_n7_mux_dataout, wire_l1_w34_n6_mux_dataout, wire_l1_w34_n5_mux_dataout, wire_l1_w34_n4_mux_dataout, wire_l1_w34_n3_mux_dataout, wire_l1_w34_n2_mux_dataout, wire_l1_w34_n1_mux_dataout, wire_l1_w34_n0_mux_dataout, wire_l1_w33_n15_mux_dataout, wire_l1_w33_n14_mux_dataout, wire_l1_w33_n13_mux_dataout, wire_l1_w33_n12_mux_dataout, wire_l1_w33_n11_mux_dataout, wire_l1_w33_n10_mux_dataout, wire_l1_w33_n9_mux_dataout, wire_l1_w33_n8_mux_dataout, wire_l1_w33_n7_mux_dataout, wire_l1_w33_n6_mux_dataout, wire_l1_w33_n5_mux_dataout, wire_l1_w33_n4_mux_dataout, wire_l1_w33_n3_mux_dataout, wire_l1_w33_n2_mux_dataout, wire_l1_w33_n1_mux_dataout, wire_l1_w33_n0_mux_dataout, wire_l1_w32_n15_mux_dataout, wire_l1_w32_n14_mux_dataout, wire_l1_w32_n13_mux_dataout, wire_l1_w32_n12_mux_dataout, wire_l1_w32_n11_mux_dataout, wire_l1_w32_n10_mux_dataout, wire_l1_w32_n9_mux_dataout, wire_l1_w32_n8_mux_dataout, wire_l1_w32_n7_mux_dataout, wire_l1_w32_n6_mux_dataout, wire_l1_w32_n5_mux_dataout, wire_l1_w32_n4_mux_dataout, wire_l1_w32_n3_mux_dataout, wire_l1_w32_n2_mux_dataout, wire_l1_w32_n1_mux_dataout, wire_l1_w32_n0_mux_dataout, wire_l1_w31_n15_mux_dataout, wire_l1_w31_n14_mux_dataout, wire_l1_w31_n13_mux_dataout, wire_l1_w31_n12_mux_dataout, wire_l1_w31_n11_mux_dataout, wire_l1_w31_n10_mux_dataout, wire_l1_w31_n9_mux_dataout, wire_l1_w31_n8_mux_dataout, wire_l1_w31_n7_mux_dataout, wire_l1_w31_n6_mux_dataout
, wire_l1_w31_n5_mux_dataout, wire_l1_w31_n4_mux_dataout, wire_l1_w31_n3_mux_dataout, wire_l1_w31_n2_mux_dataout, wire_l1_w31_n1_mux_dataout, wire_l1_w31_n0_mux_dataout, wire_l1_w30_n15_mux_dataout, wire_l1_w30_n14_mux_dataout, wire_l1_w30_n13_mux_dataout, wire_l1_w30_n12_mux_dataout, wire_l1_w30_n11_mux_dataout, wire_l1_w30_n10_mux_dataout, wire_l1_w30_n9_mux_dataout, wire_l1_w30_n8_mux_dataout, wire_l1_w30_n7_mux_dataout, wire_l1_w30_n6_mux_dataout, wire_l1_w30_n5_mux_dataout, wire_l1_w30_n4_mux_dataout, wire_l1_w30_n3_mux_dataout, wire_l1_w30_n2_mux_dataout, wire_l1_w30_n1_mux_dataout, wire_l1_w30_n0_mux_dataout, wire_l1_w29_n15_mux_dataout, wire_l1_w29_n14_mux_dataout, wire_l1_w29_n13_mux_dataout, wire_l1_w29_n12_mux_dataout, wire_l1_w29_n11_mux_dataout, wire_l1_w29_n10_mux_dataout, wire_l1_w29_n9_mux_dataout, wire_l1_w29_n8_mux_dataout, wire_l1_w29_n7_mux_dataout, wire_l1_w29_n6_mux_dataout, wire_l1_w29_n5_mux_dataout, wire_l1_w29_n4_mux_dataout, wire_l1_w29_n3_mux_dataout, wire_l1_w29_n2_mux_dataout, wire_l1_w29_n1_mux_dataout, wire_l1_w29_n0_mux_dataout, wire_l1_w28_n15_mux_dataout, wire_l1_w28_n14_mux_dataout, wire_l1_w28_n13_mux_dataout, wire_l1_w28_n12_mux_dataout, wire_l1_w28_n11_mux_dataout, wire_l1_w28_n10_mux_dataout, wire_l1_w28_n9_mux_dataout, wire_l1_w28_n8_mux_dataout, wire_l1_w28_n7_mux_dataout, wire_l1_w28_n6_mux_dataout, wire_l1_w28_n5_mux_dataout, wire_l1_w28_n4_mux_dataout, wire_l1_w28_n3_mux_dataout, wire_l1_w28_n2_mux_dataout, wire_l1_w28_n1_mux_dataout, wire_l1_w28_n0_mux_dataout, wire_l1_w27_n15_mux_dataout, wire_l1_w27_n14_mux_dataout, wire_l1_w27_n13_mux_dataout, wire_l1_w27_n12_mux_dataout, wire_l1_w27_n11_mux_dataout, wire_l1_w27_n10_mux_dataout, wire_l1_w27_n9_mux_dataout, wire_l1_w27_n8_mux_dataout, wire_l1_w27_n7_mux_dataout, wire_l1_w27_n6_mux_dataout, wire_l1_w27_n5_mux_dataout, wire_l1_w27_n4_mux_dataout, wire_l1_w27_n3_mux_dataout, wire_l1_w27_n2_mux_dataout, wire_l1_w27_n1_mux_dataout, wire_l1_w27_n0_mux_dataout, wire_l1_w26_n15_mux_dataout, wire_l1_w26_n14_mux_dataout, wire_l1_w26_n13_mux_dataout
, wire_l1_w26_n12_mux_dataout, wire_l1_w26_n11_mux_dataout, wire_l1_w26_n10_mux_dataout, wire_l1_w26_n9_mux_dataout, wire_l1_w26_n8_mux_dataout, wire_l1_w26_n7_mux_dataout, wire_l1_w26_n6_mux_dataout, wire_l1_w26_n5_mux_dataout, wire_l1_w26_n4_mux_dataout, wire_l1_w26_n3_mux_dataout, wire_l1_w26_n2_mux_dataout, wire_l1_w26_n1_mux_dataout, wire_l1_w26_n0_mux_dataout, wire_l1_w25_n15_mux_dataout, wire_l1_w25_n14_mux_dataout, wire_l1_w25_n13_mux_dataout, wire_l1_w25_n12_mux_dataout, wire_l1_w25_n11_mux_dataout, wire_l1_w25_n10_mux_dataout, wire_l1_w25_n9_mux_dataout, wire_l1_w25_n8_mux_dataout, wire_l1_w25_n7_mux_dataout, wire_l1_w25_n6_mux_dataout, wire_l1_w25_n5_mux_dataout, wire_l1_w25_n4_mux_dataout, wire_l1_w25_n3_mux_dataout, wire_l1_w25_n2_mux_dataout, wire_l1_w25_n1_mux_dataout, wire_l1_w25_n0_mux_dataout, wire_l1_w24_n15_mux_dataout, wire_l1_w24_n14_mux_dataout, wire_l1_w24_n13_mux_dataout, wire_l1_w24_n12_mux_dataout, wire_l1_w24_n11_mux_dataout, wire_l1_w24_n10_mux_dataout, wire_l1_w24_n9_mux_dataout, wire_l1_w24_n8_mux_dataout, wire_l1_w24_n7_mux_dataout, wire_l1_w24_n6_mux_dataout, wire_l1_w24_n5_mux_dataout, wire_l1_w24_n4_mux_dataout, wire_l1_w24_n3_mux_dataout, wire_l1_w24_n2_mux_dataout, wire_l1_w24_n1_mux_dataout, wire_l1_w24_n0_mux_dataout, wire_l1_w23_n15_mux_dataout, wire_l1_w23_n14_mux_dataout, wire_l1_w23_n13_mux_dataout, wire_l1_w23_n12_mux_dataout, wire_l1_w23_n11_mux_dataout, wire_l1_w23_n10_mux_dataout, wire_l1_w23_n9_mux_dataout, wire_l1_w23_n8_mux_dataout, wire_l1_w23_n7_mux_dataout, wire_l1_w23_n6_mux_dataout, wire_l1_w23_n5_mux_dataout, wire_l1_w23_n4_mux_dataout, wire_l1_w23_n3_mux_dataout, wire_l1_w23_n2_mux_dataout, wire_l1_w23_n1_mux_dataout, wire_l1_w23_n0_mux_dataout, wire_l1_w22_n15_mux_dataout, wire_l1_w22_n14_mux_dataout, wire_l1_w22_n13_mux_dataout, wire_l1_w22_n12_mux_dataout, wire_l1_w22_n11_mux_dataout, wire_l1_w22_n10_mux_dataout, wire_l1_w22_n9_mux_dataout, wire_l1_w22_n8_mux_dataout, wire_l1_w22_n7_mux_dataout, wire_l1_w22_n6_mux_dataout, wire_l1_w22_n5_mux_dataout, wire_l1_w22_n4_mux_dataout
, wire_l1_w22_n3_mux_dataout, wire_l1_w22_n2_mux_dataout, wire_l1_w22_n1_mux_dataout, wire_l1_w22_n0_mux_dataout, wire_l1_w21_n15_mux_dataout, wire_l1_w21_n14_mux_dataout, wire_l1_w21_n13_mux_dataout, wire_l1_w21_n12_mux_dataout, wire_l1_w21_n11_mux_dataout, wire_l1_w21_n10_mux_dataout, wire_l1_w21_n9_mux_dataout, wire_l1_w21_n8_mux_dataout, wire_l1_w21_n7_mux_dataout, wire_l1_w21_n6_mux_dataout, wire_l1_w21_n5_mux_dataout, wire_l1_w21_n4_mux_dataout, wire_l1_w21_n3_mux_dataout, wire_l1_w21_n2_mux_dataout, wire_l1_w21_n1_mux_dataout, wire_l1_w21_n0_mux_dataout, wire_l1_w20_n15_mux_dataout, wire_l1_w20_n14_mux_dataout, wire_l1_w20_n13_mux_dataout, wire_l1_w20_n12_mux_dataout, wire_l1_w20_n11_mux_dataout, wire_l1_w20_n10_mux_dataout, wire_l1_w20_n9_mux_dataout, wire_l1_w20_n8_mux_dataout, wire_l1_w20_n7_mux_dataout, wire_l1_w20_n6_mux_dataout, wire_l1_w20_n5_mux_dataout, wire_l1_w20_n4_mux_dataout, wire_l1_w20_n3_mux_dataout, wire_l1_w20_n2_mux_dataout, wire_l1_w20_n1_mux_dataout, wire_l1_w20_n0_mux_dataout, wire_l1_w19_n15_mux_dataout, wire_l1_w19_n14_mux_dataout, wire_l1_w19_n13_mux_dataout, wire_l1_w19_n12_mux_dataout, wire_l1_w19_n11_mux_dataout, wire_l1_w19_n10_mux_dataout, wire_l1_w19_n9_mux_dataout, wire_l1_w19_n8_mux_dataout, wire_l1_w19_n7_mux_dataout, wire_l1_w19_n6_mux_dataout, wire_l1_w19_n5_mux_dataout, wire_l1_w19_n4_mux_dataout, wire_l1_w19_n3_mux_dataout, wire_l1_w19_n2_mux_dataout, wire_l1_w19_n1_mux_dataout, wire_l1_w19_n0_mux_dataout, wire_l1_w18_n15_mux_dataout, wire_l1_w18_n14_mux_dataout, wire_l1_w18_n13_mux_dataout, wire_l1_w18_n12_mux_dataout, wire_l1_w18_n11_mux_dataout, wire_l1_w18_n10_mux_dataout, wire_l1_w18_n9_mux_dataout, wire_l1_w18_n8_mux_dataout, wire_l1_w18_n7_mux_dataout, wire_l1_w18_n6_mux_dataout, wire_l1_w18_n5_mux_dataout, wire_l1_w18_n4_mux_dataout, wire_l1_w18_n3_mux_dataout, wire_l1_w18_n2_mux_dataout, wire_l1_w18_n1_mux_dataout, wire_l1_w18_n0_mux_dataout, wire_l1_w17_n15_mux_dataout, wire_l1_w17_n14_mux_dataout, wire_l1_w17_n13_mux_dataout, wire_l1_w17_n12_mux_dataout, wire_l1_w17_n11_mux_dataout
, wire_l1_w17_n10_mux_dataout, wire_l1_w17_n9_mux_dataout, wire_l1_w17_n8_mux_dataout, wire_l1_w17_n7_mux_dataout, wire_l1_w17_n6_mux_dataout, wire_l1_w17_n5_mux_dataout, wire_l1_w17_n4_mux_dataout, wire_l1_w17_n3_mux_dataout, wire_l1_w17_n2_mux_dataout, wire_l1_w17_n1_mux_dataout, wire_l1_w17_n0_mux_dataout, wire_l1_w16_n15_mux_dataout, wire_l1_w16_n14_mux_dataout, wire_l1_w16_n13_mux_dataout, wire_l1_w16_n12_mux_dataout, wire_l1_w16_n11_mux_dataout, wire_l1_w16_n10_mux_dataout, wire_l1_w16_n9_mux_dataout, wire_l1_w16_n8_mux_dataout, wire_l1_w16_n7_mux_dataout, wire_l1_w16_n6_mux_dataout, wire_l1_w16_n5_mux_dataout, wire_l1_w16_n4_mux_dataout, wire_l1_w16_n3_mux_dataout, wire_l1_w16_n2_mux_dataout, wire_l1_w16_n1_mux_dataout, wire_l1_w16_n0_mux_dataout, wire_l1_w15_n15_mux_dataout, wire_l1_w15_n14_mux_dataout, wire_l1_w15_n13_mux_dataout, wire_l1_w15_n12_mux_dataout, wire_l1_w15_n11_mux_dataout, wire_l1_w15_n10_mux_dataout, wire_l1_w15_n9_mux_dataout, wire_l1_w15_n8_mux_dataout, wire_l1_w15_n7_mux_dataout, wire_l1_w15_n6_mux_dataout, wire_l1_w15_n5_mux_dataout, wire_l1_w15_n4_mux_dataout, wire_l1_w15_n3_mux_dataout, wire_l1_w15_n2_mux_dataout, wire_l1_w15_n1_mux_dataout, wire_l1_w15_n0_mux_dataout, wire_l1_w14_n15_mux_dataout, wire_l1_w14_n14_mux_dataout, wire_l1_w14_n13_mux_dataout, wire_l1_w14_n12_mux_dataout, wire_l1_w14_n11_mux_dataout, wire_l1_w14_n10_mux_dataout, wire_l1_w14_n9_mux_dataout, wire_l1_w14_n8_mux_dataout, wire_l1_w14_n7_mux_dataout, wire_l1_w14_n6_mux_dataout, wire_l1_w14_n5_mux_dataout, wire_l1_w14_n4_mux_dataout, wire_l1_w14_n3_mux_dataout, wire_l1_w14_n2_mux_dataout, wire_l1_w14_n1_mux_dataout, wire_l1_w14_n0_mux_dataout, wire_l1_w13_n15_mux_dataout, wire_l1_w13_n14_mux_dataout, wire_l1_w13_n13_mux_dataout, wire_l1_w13_n12_mux_dataout, wire_l1_w13_n11_mux_dataout, wire_l1_w13_n10_mux_dataout, wire_l1_w13_n9_mux_dataout, wire_l1_w13_n8_mux_dataout, wire_l1_w13_n7_mux_dataout, wire_l1_w13_n6_mux_dataout, wire_l1_w13_n5_mux_dataout, wire_l1_w13_n4_mux_dataout, wire_l1_w13_n3_mux_dataout, wire_l1_w13_n2_mux_dataout
, wire_l1_w13_n1_mux_dataout, wire_l1_w13_n0_mux_dataout, wire_l1_w12_n15_mux_dataout, wire_l1_w12_n14_mux_dataout, wire_l1_w12_n13_mux_dataout, wire_l1_w12_n12_mux_dataout, wire_l1_w12_n11_mux_dataout, wire_l1_w12_n10_mux_dataout, wire_l1_w12_n9_mux_dataout, wire_l1_w12_n8_mux_dataout, wire_l1_w12_n7_mux_dataout, wire_l1_w12_n6_mux_dataout, wire_l1_w12_n5_mux_dataout, wire_l1_w12_n4_mux_dataout, wire_l1_w12_n3_mux_dataout, wire_l1_w12_n2_mux_dataout, wire_l1_w12_n1_mux_dataout, wire_l1_w12_n0_mux_dataout, wire_l1_w11_n15_mux_dataout, wire_l1_w11_n14_mux_dataout, wire_l1_w11_n13_mux_dataout, wire_l1_w11_n12_mux_dataout, wire_l1_w11_n11_mux_dataout, wire_l1_w11_n10_mux_dataout, wire_l1_w11_n9_mux_dataout, wire_l1_w11_n8_mux_dataout, wire_l1_w11_n7_mux_dataout, wire_l1_w11_n6_mux_dataout, wire_l1_w11_n5_mux_dataout, wire_l1_w11_n4_mux_dataout, wire_l1_w11_n3_mux_dataout, wire_l1_w11_n2_mux_dataout, wire_l1_w11_n1_mux_dataout, wire_l1_w11_n0_mux_dataout, wire_l1_w10_n15_mux_dataout, wire_l1_w10_n14_mux_dataout, wire_l1_w10_n13_mux_dataout, wire_l1_w10_n12_mux_dataout, wire_l1_w10_n11_mux_dataout, wire_l1_w10_n10_mux_dataout, wire_l1_w10_n9_mux_dataout, wire_l1_w10_n8_mux_dataout, wire_l1_w10_n7_mux_dataout, wire_l1_w10_n6_mux_dataout, wire_l1_w10_n5_mux_dataout, wire_l1_w10_n4_mux_dataout, wire_l1_w10_n3_mux_dataout, wire_l1_w10_n2_mux_dataout, wire_l1_w10_n1_mux_dataout, wire_l1_w10_n0_mux_dataout, wire_l1_w9_n15_mux_dataout, wire_l1_w9_n14_mux_dataout, wire_l1_w9_n13_mux_dataout, wire_l1_w9_n12_mux_dataout, wire_l1_w9_n11_mux_dataout, wire_l1_w9_n10_mux_dataout, wire_l1_w9_n9_mux_dataout, wire_l1_w9_n8_mux_dataout, wire_l1_w9_n7_mux_dataout, wire_l1_w9_n6_mux_dataout, wire_l1_w9_n5_mux_dataout, wire_l1_w9_n4_mux_dataout, wire_l1_w9_n3_mux_dataout, wire_l1_w9_n2_mux_dataout, wire_l1_w9_n1_mux_dataout, wire_l1_w9_n0_mux_dataout, wire_l1_w8_n15_mux_dataout, wire_l1_w8_n14_mux_dataout, wire_l1_w8_n13_mux_dataout, wire_l1_w8_n12_mux_dataout, wire_l1_w8_n11_mux_dataout, wire_l1_w8_n10_mux_dataout, wire_l1_w8_n9_mux_dataout
, wire_l1_w8_n8_mux_dataout, wire_l1_w8_n7_mux_dataout, wire_l1_w8_n6_mux_dataout, wire_l1_w8_n5_mux_dataout, wire_l1_w8_n4_mux_dataout, wire_l1_w8_n3_mux_dataout, wire_l1_w8_n2_mux_dataout, wire_l1_w8_n1_mux_dataout, wire_l1_w8_n0_mux_dataout, wire_l1_w7_n15_mux_dataout, wire_l1_w7_n14_mux_dataout, wire_l1_w7_n13_mux_dataout, wire_l1_w7_n12_mux_dataout, wire_l1_w7_n11_mux_dataout, wire_l1_w7_n10_mux_dataout, wire_l1_w7_n9_mux_dataout, wire_l1_w7_n8_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n15_mux_dataout, wire_l1_w6_n14_mux_dataout, wire_l1_w6_n13_mux_dataout, wire_l1_w6_n12_mux_dataout, wire_l1_w6_n11_mux_dataout, wire_l1_w6_n10_mux_dataout, wire_l1_w6_n9_mux_dataout, wire_l1_w6_n8_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n15_mux_dataout, wire_l1_w5_n14_mux_dataout, wire_l1_w5_n13_mux_dataout, wire_l1_w5_n12_mux_dataout, wire_l1_w5_n11_mux_dataout, wire_l1_w5_n10_mux_dataout, wire_l1_w5_n9_mux_dataout, wire_l1_w5_n8_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n15_mux_dataout, wire_l1_w4_n14_mux_dataout, wire_l1_w4_n13_mux_dataout, wire_l1_w4_n12_mux_dataout, wire_l1_w4_n11_mux_dataout, wire_l1_w4_n10_mux_dataout, wire_l1_w4_n9_mux_dataout, wire_l1_w4_n8_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n15_mux_dataout, wire_l1_w3_n14_mux_dataout
, wire_l1_w3_n13_mux_dataout, wire_l1_w3_n12_mux_dataout, wire_l1_w3_n11_mux_dataout, wire_l1_w3_n10_mux_dataout, wire_l1_w3_n9_mux_dataout, wire_l1_w3_n8_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n15_mux_dataout, wire_l1_w2_n14_mux_dataout, wire_l1_w2_n13_mux_dataout, wire_l1_w2_n12_mux_dataout, wire_l1_w2_n11_mux_dataout, wire_l1_w2_n10_mux_dataout, wire_l1_w2_n9_mux_dataout, wire_l1_w2_n8_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n15_mux_dataout, wire_l1_w1_n14_mux_dataout, wire_l1_w1_n13_mux_dataout, wire_l1_w1_n12_mux_dataout, wire_l1_w1_n11_mux_dataout, wire_l1_w1_n10_mux_dataout, wire_l1_w1_n9_mux_dataout, wire_l1_w1_n8_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n15_mux_dataout, wire_l1_w0_n14_mux_dataout, wire_l1_w0_n13_mux_dataout, wire_l1_w0_n12_mux_dataout, wire_l1_w0_n11_mux_dataout, wire_l1_w0_n10_mux_dataout, wire_l1_w0_n9_mux_dataout, wire_l1_w0_n8_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l5_w38_n0_mux_dataout, wire_l5_w37_n0_mux_dataout, wire_l5_w36_n0_mux_dataout, wire_l5_w35_n0_mux_dataout, wire_l5_w34_n0_mux_dataout, wire_l5_w33_n0_mux_dataout, wire_l5_w32_n0_mux_dataout, wire_l5_w31_n0_mux_dataout, wire_l5_w30_n0_mux_dataout, wire_l5_w29_n0_mux_dataout, wire_l5_w28_n0_mux_dataout, wire_l5_w27_n0_mux_dataout, wire_l5_w26_n0_mux_dataout, wire_l5_w25_n0_mux_dataout, wire_l5_w24_n0_mux_dataout, wire_l5_w23_n0_mux_dataout, wire_l5_w22_n0_mux_dataout, wire_l5_w21_n0_mux_dataout, wire_l5_w20_n0_mux_dataout, wire_l5_w19_n0_mux_dataout, wire_l5_w18_n0_mux_dataout, wire_l5_w17_n0_mux_dataout, wire_l5_w16_n0_mux_dataout, wire_l5_w15_n0_mux_dataout, wire_l5_w14_n0_mux_dataout, wire_l5_w13_n0_mux_dataout, wire_l5_w12_n0_mux_dataout, wire_l5_w11_n0_mux_dataout, wire_l5_w10_n0_mux_dataout, wire_l5_w9_n0_mux_dataout, wire_l5_w8_n0_mux_dataout, wire_l5_w7_n0_mux_dataout, wire_l5_w6_n0_mux_dataout, wire_l5_w5_n0_mux_dataout, wire_l5_w4_n0_mux_dataout, wire_l5_w3_n0_mux_dataout, wire_l5_w2_n0_mux_dataout, wire_l5_w1_n0_mux_dataout, wire_l5_w0_n0_mux_dataout},
		sel_wire = {sel[4], {5{1'b0}}, sel[3], {5{1'b0}}, sel[2], {5{1'b0}}, sel[1], {5{1'b0}}, sel[0]};
endmodule //fplog_mux1


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=16 LPM_WIDTH=35 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = lut 175 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mux12
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [559:0]  data;
	output   [34:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [559:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w10_n0_mux_dataout;
	wire	wire_l1_w10_n1_mux_dataout;
	wire	wire_l1_w10_n2_mux_dataout;
	wire	wire_l1_w10_n3_mux_dataout;
	wire	wire_l1_w10_n4_mux_dataout;
	wire	wire_l1_w10_n5_mux_dataout;
	wire	wire_l1_w10_n6_mux_dataout;
	wire	wire_l1_w10_n7_mux_dataout;
	wire	wire_l1_w11_n0_mux_dataout;
	wire	wire_l1_w11_n1_mux_dataout;
	wire	wire_l1_w11_n2_mux_dataout;
	wire	wire_l1_w11_n3_mux_dataout;
	wire	wire_l1_w11_n4_mux_dataout;
	wire	wire_l1_w11_n5_mux_dataout;
	wire	wire_l1_w11_n6_mux_dataout;
	wire	wire_l1_w11_n7_mux_dataout;
	wire	wire_l1_w12_n0_mux_dataout;
	wire	wire_l1_w12_n1_mux_dataout;
	wire	wire_l1_w12_n2_mux_dataout;
	wire	wire_l1_w12_n3_mux_dataout;
	wire	wire_l1_w12_n4_mux_dataout;
	wire	wire_l1_w12_n5_mux_dataout;
	wire	wire_l1_w12_n6_mux_dataout;
	wire	wire_l1_w12_n7_mux_dataout;
	wire	wire_l1_w13_n0_mux_dataout;
	wire	wire_l1_w13_n1_mux_dataout;
	wire	wire_l1_w13_n2_mux_dataout;
	wire	wire_l1_w13_n3_mux_dataout;
	wire	wire_l1_w13_n4_mux_dataout;
	wire	wire_l1_w13_n5_mux_dataout;
	wire	wire_l1_w13_n6_mux_dataout;
	wire	wire_l1_w13_n7_mux_dataout;
	wire	wire_l1_w14_n0_mux_dataout;
	wire	wire_l1_w14_n1_mux_dataout;
	wire	wire_l1_w14_n2_mux_dataout;
	wire	wire_l1_w14_n3_mux_dataout;
	wire	wire_l1_w14_n4_mux_dataout;
	wire	wire_l1_w14_n5_mux_dataout;
	wire	wire_l1_w14_n6_mux_dataout;
	wire	wire_l1_w14_n7_mux_dataout;
	wire	wire_l1_w15_n0_mux_dataout;
	wire	wire_l1_w15_n1_mux_dataout;
	wire	wire_l1_w15_n2_mux_dataout;
	wire	wire_l1_w15_n3_mux_dataout;
	wire	wire_l1_w15_n4_mux_dataout;
	wire	wire_l1_w15_n5_mux_dataout;
	wire	wire_l1_w15_n6_mux_dataout;
	wire	wire_l1_w15_n7_mux_dataout;
	wire	wire_l1_w16_n0_mux_dataout;
	wire	wire_l1_w16_n1_mux_dataout;
	wire	wire_l1_w16_n2_mux_dataout;
	wire	wire_l1_w16_n3_mux_dataout;
	wire	wire_l1_w16_n4_mux_dataout;
	wire	wire_l1_w16_n5_mux_dataout;
	wire	wire_l1_w16_n6_mux_dataout;
	wire	wire_l1_w16_n7_mux_dataout;
	wire	wire_l1_w17_n0_mux_dataout;
	wire	wire_l1_w17_n1_mux_dataout;
	wire	wire_l1_w17_n2_mux_dataout;
	wire	wire_l1_w17_n3_mux_dataout;
	wire	wire_l1_w17_n4_mux_dataout;
	wire	wire_l1_w17_n5_mux_dataout;
	wire	wire_l1_w17_n6_mux_dataout;
	wire	wire_l1_w17_n7_mux_dataout;
	wire	wire_l1_w18_n0_mux_dataout;
	wire	wire_l1_w18_n1_mux_dataout;
	wire	wire_l1_w18_n2_mux_dataout;
	wire	wire_l1_w18_n3_mux_dataout;
	wire	wire_l1_w18_n4_mux_dataout;
	wire	wire_l1_w18_n5_mux_dataout;
	wire	wire_l1_w18_n6_mux_dataout;
	wire	wire_l1_w18_n7_mux_dataout;
	wire	wire_l1_w19_n0_mux_dataout;
	wire	wire_l1_w19_n1_mux_dataout;
	wire	wire_l1_w19_n2_mux_dataout;
	wire	wire_l1_w19_n3_mux_dataout;
	wire	wire_l1_w19_n4_mux_dataout;
	wire	wire_l1_w19_n5_mux_dataout;
	wire	wire_l1_w19_n6_mux_dataout;
	wire	wire_l1_w19_n7_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w20_n0_mux_dataout;
	wire	wire_l1_w20_n1_mux_dataout;
	wire	wire_l1_w20_n2_mux_dataout;
	wire	wire_l1_w20_n3_mux_dataout;
	wire	wire_l1_w20_n4_mux_dataout;
	wire	wire_l1_w20_n5_mux_dataout;
	wire	wire_l1_w20_n6_mux_dataout;
	wire	wire_l1_w20_n7_mux_dataout;
	wire	wire_l1_w21_n0_mux_dataout;
	wire	wire_l1_w21_n1_mux_dataout;
	wire	wire_l1_w21_n2_mux_dataout;
	wire	wire_l1_w21_n3_mux_dataout;
	wire	wire_l1_w21_n4_mux_dataout;
	wire	wire_l1_w21_n5_mux_dataout;
	wire	wire_l1_w21_n6_mux_dataout;
	wire	wire_l1_w21_n7_mux_dataout;
	wire	wire_l1_w22_n0_mux_dataout;
	wire	wire_l1_w22_n1_mux_dataout;
	wire	wire_l1_w22_n2_mux_dataout;
	wire	wire_l1_w22_n3_mux_dataout;
	wire	wire_l1_w22_n4_mux_dataout;
	wire	wire_l1_w22_n5_mux_dataout;
	wire	wire_l1_w22_n6_mux_dataout;
	wire	wire_l1_w22_n7_mux_dataout;
	wire	wire_l1_w23_n0_mux_dataout;
	wire	wire_l1_w23_n1_mux_dataout;
	wire	wire_l1_w23_n2_mux_dataout;
	wire	wire_l1_w23_n3_mux_dataout;
	wire	wire_l1_w23_n4_mux_dataout;
	wire	wire_l1_w23_n5_mux_dataout;
	wire	wire_l1_w23_n6_mux_dataout;
	wire	wire_l1_w23_n7_mux_dataout;
	wire	wire_l1_w24_n0_mux_dataout;
	wire	wire_l1_w24_n1_mux_dataout;
	wire	wire_l1_w24_n2_mux_dataout;
	wire	wire_l1_w24_n3_mux_dataout;
	wire	wire_l1_w24_n4_mux_dataout;
	wire	wire_l1_w24_n5_mux_dataout;
	wire	wire_l1_w24_n6_mux_dataout;
	wire	wire_l1_w24_n7_mux_dataout;
	wire	wire_l1_w25_n0_mux_dataout;
	wire	wire_l1_w25_n1_mux_dataout;
	wire	wire_l1_w25_n2_mux_dataout;
	wire	wire_l1_w25_n3_mux_dataout;
	wire	wire_l1_w25_n4_mux_dataout;
	wire	wire_l1_w25_n5_mux_dataout;
	wire	wire_l1_w25_n6_mux_dataout;
	wire	wire_l1_w25_n7_mux_dataout;
	wire	wire_l1_w26_n0_mux_dataout;
	wire	wire_l1_w26_n1_mux_dataout;
	wire	wire_l1_w26_n2_mux_dataout;
	wire	wire_l1_w26_n3_mux_dataout;
	wire	wire_l1_w26_n4_mux_dataout;
	wire	wire_l1_w26_n5_mux_dataout;
	wire	wire_l1_w26_n6_mux_dataout;
	wire	wire_l1_w26_n7_mux_dataout;
	wire	wire_l1_w27_n0_mux_dataout;
	wire	wire_l1_w27_n1_mux_dataout;
	wire	wire_l1_w27_n2_mux_dataout;
	wire	wire_l1_w27_n3_mux_dataout;
	wire	wire_l1_w27_n4_mux_dataout;
	wire	wire_l1_w27_n5_mux_dataout;
	wire	wire_l1_w27_n6_mux_dataout;
	wire	wire_l1_w27_n7_mux_dataout;
	wire	wire_l1_w28_n0_mux_dataout;
	wire	wire_l1_w28_n1_mux_dataout;
	wire	wire_l1_w28_n2_mux_dataout;
	wire	wire_l1_w28_n3_mux_dataout;
	wire	wire_l1_w28_n4_mux_dataout;
	wire	wire_l1_w28_n5_mux_dataout;
	wire	wire_l1_w28_n6_mux_dataout;
	wire	wire_l1_w28_n7_mux_dataout;
	wire	wire_l1_w29_n0_mux_dataout;
	wire	wire_l1_w29_n1_mux_dataout;
	wire	wire_l1_w29_n2_mux_dataout;
	wire	wire_l1_w29_n3_mux_dataout;
	wire	wire_l1_w29_n4_mux_dataout;
	wire	wire_l1_w29_n5_mux_dataout;
	wire	wire_l1_w29_n6_mux_dataout;
	wire	wire_l1_w29_n7_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w30_n0_mux_dataout;
	wire	wire_l1_w30_n1_mux_dataout;
	wire	wire_l1_w30_n2_mux_dataout;
	wire	wire_l1_w30_n3_mux_dataout;
	wire	wire_l1_w30_n4_mux_dataout;
	wire	wire_l1_w30_n5_mux_dataout;
	wire	wire_l1_w30_n6_mux_dataout;
	wire	wire_l1_w30_n7_mux_dataout;
	wire	wire_l1_w31_n0_mux_dataout;
	wire	wire_l1_w31_n1_mux_dataout;
	wire	wire_l1_w31_n2_mux_dataout;
	wire	wire_l1_w31_n3_mux_dataout;
	wire	wire_l1_w31_n4_mux_dataout;
	wire	wire_l1_w31_n5_mux_dataout;
	wire	wire_l1_w31_n6_mux_dataout;
	wire	wire_l1_w31_n7_mux_dataout;
	wire	wire_l1_w32_n0_mux_dataout;
	wire	wire_l1_w32_n1_mux_dataout;
	wire	wire_l1_w32_n2_mux_dataout;
	wire	wire_l1_w32_n3_mux_dataout;
	wire	wire_l1_w32_n4_mux_dataout;
	wire	wire_l1_w32_n5_mux_dataout;
	wire	wire_l1_w32_n6_mux_dataout;
	wire	wire_l1_w32_n7_mux_dataout;
	wire	wire_l1_w33_n0_mux_dataout;
	wire	wire_l1_w33_n1_mux_dataout;
	wire	wire_l1_w33_n2_mux_dataout;
	wire	wire_l1_w33_n3_mux_dataout;
	wire	wire_l1_w33_n4_mux_dataout;
	wire	wire_l1_w33_n5_mux_dataout;
	wire	wire_l1_w33_n6_mux_dataout;
	wire	wire_l1_w33_n7_mux_dataout;
	wire	wire_l1_w34_n0_mux_dataout;
	wire	wire_l1_w34_n1_mux_dataout;
	wire	wire_l1_w34_n2_mux_dataout;
	wire	wire_l1_w34_n3_mux_dataout;
	wire	wire_l1_w34_n4_mux_dataout;
	wire	wire_l1_w34_n5_mux_dataout;
	wire	wire_l1_w34_n6_mux_dataout;
	wire	wire_l1_w34_n7_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l1_w8_n0_mux_dataout;
	wire	wire_l1_w8_n1_mux_dataout;
	wire	wire_l1_w8_n2_mux_dataout;
	wire	wire_l1_w8_n3_mux_dataout;
	wire	wire_l1_w8_n4_mux_dataout;
	wire	wire_l1_w8_n5_mux_dataout;
	wire	wire_l1_w8_n6_mux_dataout;
	wire	wire_l1_w8_n7_mux_dataout;
	wire	wire_l1_w9_n0_mux_dataout;
	wire	wire_l1_w9_n1_mux_dataout;
	wire	wire_l1_w9_n2_mux_dataout;
	wire	wire_l1_w9_n3_mux_dataout;
	wire	wire_l1_w9_n4_mux_dataout;
	wire	wire_l1_w9_n5_mux_dataout;
	wire	wire_l1_w9_n6_mux_dataout;
	wire	wire_l1_w9_n7_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w10_n0_mux_dataout;
	wire	wire_l2_w10_n1_mux_dataout;
	wire	wire_l2_w10_n2_mux_dataout;
	wire	wire_l2_w10_n3_mux_dataout;
	wire	wire_l2_w11_n0_mux_dataout;
	wire	wire_l2_w11_n1_mux_dataout;
	wire	wire_l2_w11_n2_mux_dataout;
	wire	wire_l2_w11_n3_mux_dataout;
	wire	wire_l2_w12_n0_mux_dataout;
	wire	wire_l2_w12_n1_mux_dataout;
	wire	wire_l2_w12_n2_mux_dataout;
	wire	wire_l2_w12_n3_mux_dataout;
	wire	wire_l2_w13_n0_mux_dataout;
	wire	wire_l2_w13_n1_mux_dataout;
	wire	wire_l2_w13_n2_mux_dataout;
	wire	wire_l2_w13_n3_mux_dataout;
	wire	wire_l2_w14_n0_mux_dataout;
	wire	wire_l2_w14_n1_mux_dataout;
	wire	wire_l2_w14_n2_mux_dataout;
	wire	wire_l2_w14_n3_mux_dataout;
	wire	wire_l2_w15_n0_mux_dataout;
	wire	wire_l2_w15_n1_mux_dataout;
	wire	wire_l2_w15_n2_mux_dataout;
	wire	wire_l2_w15_n3_mux_dataout;
	wire	wire_l2_w16_n0_mux_dataout;
	wire	wire_l2_w16_n1_mux_dataout;
	wire	wire_l2_w16_n2_mux_dataout;
	wire	wire_l2_w16_n3_mux_dataout;
	wire	wire_l2_w17_n0_mux_dataout;
	wire	wire_l2_w17_n1_mux_dataout;
	wire	wire_l2_w17_n2_mux_dataout;
	wire	wire_l2_w17_n3_mux_dataout;
	wire	wire_l2_w18_n0_mux_dataout;
	wire	wire_l2_w18_n1_mux_dataout;
	wire	wire_l2_w18_n2_mux_dataout;
	wire	wire_l2_w18_n3_mux_dataout;
	wire	wire_l2_w19_n0_mux_dataout;
	wire	wire_l2_w19_n1_mux_dataout;
	wire	wire_l2_w19_n2_mux_dataout;
	wire	wire_l2_w19_n3_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w20_n0_mux_dataout;
	wire	wire_l2_w20_n1_mux_dataout;
	wire	wire_l2_w20_n2_mux_dataout;
	wire	wire_l2_w20_n3_mux_dataout;
	wire	wire_l2_w21_n0_mux_dataout;
	wire	wire_l2_w21_n1_mux_dataout;
	wire	wire_l2_w21_n2_mux_dataout;
	wire	wire_l2_w21_n3_mux_dataout;
	wire	wire_l2_w22_n0_mux_dataout;
	wire	wire_l2_w22_n1_mux_dataout;
	wire	wire_l2_w22_n2_mux_dataout;
	wire	wire_l2_w22_n3_mux_dataout;
	wire	wire_l2_w23_n0_mux_dataout;
	wire	wire_l2_w23_n1_mux_dataout;
	wire	wire_l2_w23_n2_mux_dataout;
	wire	wire_l2_w23_n3_mux_dataout;
	wire	wire_l2_w24_n0_mux_dataout;
	wire	wire_l2_w24_n1_mux_dataout;
	wire	wire_l2_w24_n2_mux_dataout;
	wire	wire_l2_w24_n3_mux_dataout;
	wire	wire_l2_w25_n0_mux_dataout;
	wire	wire_l2_w25_n1_mux_dataout;
	wire	wire_l2_w25_n2_mux_dataout;
	wire	wire_l2_w25_n3_mux_dataout;
	wire	wire_l2_w26_n0_mux_dataout;
	wire	wire_l2_w26_n1_mux_dataout;
	wire	wire_l2_w26_n2_mux_dataout;
	wire	wire_l2_w26_n3_mux_dataout;
	wire	wire_l2_w27_n0_mux_dataout;
	wire	wire_l2_w27_n1_mux_dataout;
	wire	wire_l2_w27_n2_mux_dataout;
	wire	wire_l2_w27_n3_mux_dataout;
	wire	wire_l2_w28_n0_mux_dataout;
	wire	wire_l2_w28_n1_mux_dataout;
	wire	wire_l2_w28_n2_mux_dataout;
	wire	wire_l2_w28_n3_mux_dataout;
	wire	wire_l2_w29_n0_mux_dataout;
	wire	wire_l2_w29_n1_mux_dataout;
	wire	wire_l2_w29_n2_mux_dataout;
	wire	wire_l2_w29_n3_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w30_n0_mux_dataout;
	wire	wire_l2_w30_n1_mux_dataout;
	wire	wire_l2_w30_n2_mux_dataout;
	wire	wire_l2_w30_n3_mux_dataout;
	wire	wire_l2_w31_n0_mux_dataout;
	wire	wire_l2_w31_n1_mux_dataout;
	wire	wire_l2_w31_n2_mux_dataout;
	wire	wire_l2_w31_n3_mux_dataout;
	wire	wire_l2_w32_n0_mux_dataout;
	wire	wire_l2_w32_n1_mux_dataout;
	wire	wire_l2_w32_n2_mux_dataout;
	wire	wire_l2_w32_n3_mux_dataout;
	wire	wire_l2_w33_n0_mux_dataout;
	wire	wire_l2_w33_n1_mux_dataout;
	wire	wire_l2_w33_n2_mux_dataout;
	wire	wire_l2_w33_n3_mux_dataout;
	wire	wire_l2_w34_n0_mux_dataout;
	wire	wire_l2_w34_n1_mux_dataout;
	wire	wire_l2_w34_n2_mux_dataout;
	wire	wire_l2_w34_n3_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l2_w8_n0_mux_dataout;
	wire	wire_l2_w8_n1_mux_dataout;
	wire	wire_l2_w8_n2_mux_dataout;
	wire	wire_l2_w8_n3_mux_dataout;
	wire	wire_l2_w9_n0_mux_dataout;
	wire	wire_l2_w9_n1_mux_dataout;
	wire	wire_l2_w9_n2_mux_dataout;
	wire	wire_l2_w9_n3_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w10_n0_mux_dataout;
	wire	wire_l3_w10_n1_mux_dataout;
	wire	wire_l3_w11_n0_mux_dataout;
	wire	wire_l3_w11_n1_mux_dataout;
	wire	wire_l3_w12_n0_mux_dataout;
	wire	wire_l3_w12_n1_mux_dataout;
	wire	wire_l3_w13_n0_mux_dataout;
	wire	wire_l3_w13_n1_mux_dataout;
	wire	wire_l3_w14_n0_mux_dataout;
	wire	wire_l3_w14_n1_mux_dataout;
	wire	wire_l3_w15_n0_mux_dataout;
	wire	wire_l3_w15_n1_mux_dataout;
	wire	wire_l3_w16_n0_mux_dataout;
	wire	wire_l3_w16_n1_mux_dataout;
	wire	wire_l3_w17_n0_mux_dataout;
	wire	wire_l3_w17_n1_mux_dataout;
	wire	wire_l3_w18_n0_mux_dataout;
	wire	wire_l3_w18_n1_mux_dataout;
	wire	wire_l3_w19_n0_mux_dataout;
	wire	wire_l3_w19_n1_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w20_n0_mux_dataout;
	wire	wire_l3_w20_n1_mux_dataout;
	wire	wire_l3_w21_n0_mux_dataout;
	wire	wire_l3_w21_n1_mux_dataout;
	wire	wire_l3_w22_n0_mux_dataout;
	wire	wire_l3_w22_n1_mux_dataout;
	wire	wire_l3_w23_n0_mux_dataout;
	wire	wire_l3_w23_n1_mux_dataout;
	wire	wire_l3_w24_n0_mux_dataout;
	wire	wire_l3_w24_n1_mux_dataout;
	wire	wire_l3_w25_n0_mux_dataout;
	wire	wire_l3_w25_n1_mux_dataout;
	wire	wire_l3_w26_n0_mux_dataout;
	wire	wire_l3_w26_n1_mux_dataout;
	wire	wire_l3_w27_n0_mux_dataout;
	wire	wire_l3_w27_n1_mux_dataout;
	wire	wire_l3_w28_n0_mux_dataout;
	wire	wire_l3_w28_n1_mux_dataout;
	wire	wire_l3_w29_n0_mux_dataout;
	wire	wire_l3_w29_n1_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w30_n0_mux_dataout;
	wire	wire_l3_w30_n1_mux_dataout;
	wire	wire_l3_w31_n0_mux_dataout;
	wire	wire_l3_w31_n1_mux_dataout;
	wire	wire_l3_w32_n0_mux_dataout;
	wire	wire_l3_w32_n1_mux_dataout;
	wire	wire_l3_w33_n0_mux_dataout;
	wire	wire_l3_w33_n1_mux_dataout;
	wire	wire_l3_w34_n0_mux_dataout;
	wire	wire_l3_w34_n1_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l3_w8_n0_mux_dataout;
	wire	wire_l3_w8_n1_mux_dataout;
	wire	wire_l3_w9_n0_mux_dataout;
	wire	wire_l3_w9_n1_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w10_n0_mux_dataout;
	wire	wire_l4_w11_n0_mux_dataout;
	wire	wire_l4_w12_n0_mux_dataout;
	wire	wire_l4_w13_n0_mux_dataout;
	wire	wire_l4_w14_n0_mux_dataout;
	wire	wire_l4_w15_n0_mux_dataout;
	wire	wire_l4_w16_n0_mux_dataout;
	wire	wire_l4_w17_n0_mux_dataout;
	wire	wire_l4_w18_n0_mux_dataout;
	wire	wire_l4_w19_n0_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w20_n0_mux_dataout;
	wire	wire_l4_w21_n0_mux_dataout;
	wire	wire_l4_w22_n0_mux_dataout;
	wire	wire_l4_w23_n0_mux_dataout;
	wire	wire_l4_w24_n0_mux_dataout;
	wire	wire_l4_w25_n0_mux_dataout;
	wire	wire_l4_w26_n0_mux_dataout;
	wire	wire_l4_w27_n0_mux_dataout;
	wire	wire_l4_w28_n0_mux_dataout;
	wire	wire_l4_w29_n0_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w30_n0_mux_dataout;
	wire	wire_l4_w31_n0_mux_dataout;
	wire	wire_l4_w32_n0_mux_dataout;
	wire	wire_l4_w33_n0_mux_dataout;
	wire	wire_l4_w34_n0_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire	wire_l4_w8_n0_mux_dataout;
	wire	wire_l4_w9_n0_mux_dataout;
	wire  [1049:0]  data_wire;
	wire  [34:0]  result_wire_ext;
	wire  [15:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[35] : data_wire[0];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[70];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[175] : data_wire[140];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[245] : data_wire[210];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[315] : data_wire[280];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[385] : data_wire[350];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[455] : data_wire[420];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[525] : data_wire[490];
	assign		wire_l1_w10_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[10];
	assign		wire_l1_w10_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[115] : data_wire[80];
	assign		wire_l1_w10_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[185] : data_wire[150];
	assign		wire_l1_w10_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[255] : data_wire[220];
	assign		wire_l1_w10_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[325] : data_wire[290];
	assign		wire_l1_w10_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[395] : data_wire[360];
	assign		wire_l1_w10_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[465] : data_wire[430];
	assign		wire_l1_w10_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[535] : data_wire[500];
	assign		wire_l1_w11_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[11];
	assign		wire_l1_w11_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[116] : data_wire[81];
	assign		wire_l1_w11_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[186] : data_wire[151];
	assign		wire_l1_w11_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[256] : data_wire[221];
	assign		wire_l1_w11_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[326] : data_wire[291];
	assign		wire_l1_w11_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[396] : data_wire[361];
	assign		wire_l1_w11_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[466] : data_wire[431];
	assign		wire_l1_w11_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[536] : data_wire[501];
	assign		wire_l1_w12_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[12];
	assign		wire_l1_w12_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[117] : data_wire[82];
	assign		wire_l1_w12_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[187] : data_wire[152];
	assign		wire_l1_w12_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[257] : data_wire[222];
	assign		wire_l1_w12_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[327] : data_wire[292];
	assign		wire_l1_w12_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[397] : data_wire[362];
	assign		wire_l1_w12_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[467] : data_wire[432];
	assign		wire_l1_w12_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[537] : data_wire[502];
	assign		wire_l1_w13_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[48] : data_wire[13];
	assign		wire_l1_w13_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[118] : data_wire[83];
	assign		wire_l1_w13_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[188] : data_wire[153];
	assign		wire_l1_w13_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[258] : data_wire[223];
	assign		wire_l1_w13_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[328] : data_wire[293];
	assign		wire_l1_w13_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[398] : data_wire[363];
	assign		wire_l1_w13_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[468] : data_wire[433];
	assign		wire_l1_w13_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[538] : data_wire[503];
	assign		wire_l1_w14_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[49] : data_wire[14];
	assign		wire_l1_w14_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[119] : data_wire[84];
	assign		wire_l1_w14_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[189] : data_wire[154];
	assign		wire_l1_w14_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[259] : data_wire[224];
	assign		wire_l1_w14_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[329] : data_wire[294];
	assign		wire_l1_w14_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[399] : data_wire[364];
	assign		wire_l1_w14_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[469] : data_wire[434];
	assign		wire_l1_w14_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[539] : data_wire[504];
	assign		wire_l1_w15_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[50] : data_wire[15];
	assign		wire_l1_w15_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[120] : data_wire[85];
	assign		wire_l1_w15_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[190] : data_wire[155];
	assign		wire_l1_w15_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[260] : data_wire[225];
	assign		wire_l1_w15_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[330] : data_wire[295];
	assign		wire_l1_w15_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[400] : data_wire[365];
	assign		wire_l1_w15_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[470] : data_wire[435];
	assign		wire_l1_w15_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[540] : data_wire[505];
	assign		wire_l1_w16_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[51] : data_wire[16];
	assign		wire_l1_w16_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[121] : data_wire[86];
	assign		wire_l1_w16_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[191] : data_wire[156];
	assign		wire_l1_w16_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[261] : data_wire[226];
	assign		wire_l1_w16_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[331] : data_wire[296];
	assign		wire_l1_w16_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[401] : data_wire[366];
	assign		wire_l1_w16_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[471] : data_wire[436];
	assign		wire_l1_w16_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[541] : data_wire[506];
	assign		wire_l1_w17_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[52] : data_wire[17];
	assign		wire_l1_w17_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[122] : data_wire[87];
	assign		wire_l1_w17_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[192] : data_wire[157];
	assign		wire_l1_w17_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[262] : data_wire[227];
	assign		wire_l1_w17_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[332] : data_wire[297];
	assign		wire_l1_w17_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[402] : data_wire[367];
	assign		wire_l1_w17_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[472] : data_wire[437];
	assign		wire_l1_w17_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[542] : data_wire[507];
	assign		wire_l1_w18_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[53] : data_wire[18];
	assign		wire_l1_w18_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[123] : data_wire[88];
	assign		wire_l1_w18_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[193] : data_wire[158];
	assign		wire_l1_w18_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[263] : data_wire[228];
	assign		wire_l1_w18_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[333] : data_wire[298];
	assign		wire_l1_w18_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[403] : data_wire[368];
	assign		wire_l1_w18_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[473] : data_wire[438];
	assign		wire_l1_w18_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[543] : data_wire[508];
	assign		wire_l1_w19_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[54] : data_wire[19];
	assign		wire_l1_w19_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[124] : data_wire[89];
	assign		wire_l1_w19_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[194] : data_wire[159];
	assign		wire_l1_w19_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[264] : data_wire[229];
	assign		wire_l1_w19_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[334] : data_wire[299];
	assign		wire_l1_w19_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[404] : data_wire[369];
	assign		wire_l1_w19_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[474] : data_wire[439];
	assign		wire_l1_w19_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[544] : data_wire[509];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[36] : data_wire[1];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[71];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[176] : data_wire[141];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[246] : data_wire[211];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[316] : data_wire[281];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[386] : data_wire[351];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[456] : data_wire[421];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[526] : data_wire[491];
	assign		wire_l1_w20_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[55] : data_wire[20];
	assign		wire_l1_w20_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[125] : data_wire[90];
	assign		wire_l1_w20_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[195] : data_wire[160];
	assign		wire_l1_w20_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[265] : data_wire[230];
	assign		wire_l1_w20_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[335] : data_wire[300];
	assign		wire_l1_w20_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[405] : data_wire[370];
	assign		wire_l1_w20_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[475] : data_wire[440];
	assign		wire_l1_w20_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[545] : data_wire[510];
	assign		wire_l1_w21_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[21];
	assign		wire_l1_w21_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[126] : data_wire[91];
	assign		wire_l1_w21_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[196] : data_wire[161];
	assign		wire_l1_w21_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[266] : data_wire[231];
	assign		wire_l1_w21_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[336] : data_wire[301];
	assign		wire_l1_w21_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[406] : data_wire[371];
	assign		wire_l1_w21_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[476] : data_wire[441];
	assign		wire_l1_w21_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[546] : data_wire[511];
	assign		wire_l1_w22_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[22];
	assign		wire_l1_w22_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[127] : data_wire[92];
	assign		wire_l1_w22_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[197] : data_wire[162];
	assign		wire_l1_w22_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[267] : data_wire[232];
	assign		wire_l1_w22_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[337] : data_wire[302];
	assign		wire_l1_w22_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[407] : data_wire[372];
	assign		wire_l1_w22_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[477] : data_wire[442];
	assign		wire_l1_w22_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[547] : data_wire[512];
	assign		wire_l1_w23_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[58] : data_wire[23];
	assign		wire_l1_w23_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[128] : data_wire[93];
	assign		wire_l1_w23_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[198] : data_wire[163];
	assign		wire_l1_w23_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[268] : data_wire[233];
	assign		wire_l1_w23_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[338] : data_wire[303];
	assign		wire_l1_w23_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[408] : data_wire[373];
	assign		wire_l1_w23_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[478] : data_wire[443];
	assign		wire_l1_w23_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[548] : data_wire[513];
	assign		wire_l1_w24_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[59] : data_wire[24];
	assign		wire_l1_w24_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[129] : data_wire[94];
	assign		wire_l1_w24_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[199] : data_wire[164];
	assign		wire_l1_w24_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[269] : data_wire[234];
	assign		wire_l1_w24_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[339] : data_wire[304];
	assign		wire_l1_w24_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[409] : data_wire[374];
	assign		wire_l1_w24_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[479] : data_wire[444];
	assign		wire_l1_w24_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[549] : data_wire[514];
	assign		wire_l1_w25_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[60] : data_wire[25];
	assign		wire_l1_w25_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[130] : data_wire[95];
	assign		wire_l1_w25_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[200] : data_wire[165];
	assign		wire_l1_w25_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[270] : data_wire[235];
	assign		wire_l1_w25_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[340] : data_wire[305];
	assign		wire_l1_w25_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[410] : data_wire[375];
	assign		wire_l1_w25_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[480] : data_wire[445];
	assign		wire_l1_w25_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[550] : data_wire[515];
	assign		wire_l1_w26_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[61] : data_wire[26];
	assign		wire_l1_w26_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[131] : data_wire[96];
	assign		wire_l1_w26_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[201] : data_wire[166];
	assign		wire_l1_w26_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[271] : data_wire[236];
	assign		wire_l1_w26_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[341] : data_wire[306];
	assign		wire_l1_w26_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[411] : data_wire[376];
	assign		wire_l1_w26_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[481] : data_wire[446];
	assign		wire_l1_w26_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[551] : data_wire[516];
	assign		wire_l1_w27_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[62] : data_wire[27];
	assign		wire_l1_w27_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[132] : data_wire[97];
	assign		wire_l1_w27_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[202] : data_wire[167];
	assign		wire_l1_w27_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[272] : data_wire[237];
	assign		wire_l1_w27_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[342] : data_wire[307];
	assign		wire_l1_w27_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[412] : data_wire[377];
	assign		wire_l1_w27_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[482] : data_wire[447];
	assign		wire_l1_w27_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[552] : data_wire[517];
	assign		wire_l1_w28_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[63] : data_wire[28];
	assign		wire_l1_w28_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[133] : data_wire[98];
	assign		wire_l1_w28_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[203] : data_wire[168];
	assign		wire_l1_w28_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[273] : data_wire[238];
	assign		wire_l1_w28_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[343] : data_wire[308];
	assign		wire_l1_w28_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[413] : data_wire[378];
	assign		wire_l1_w28_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[483] : data_wire[448];
	assign		wire_l1_w28_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[553] : data_wire[518];
	assign		wire_l1_w29_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[64] : data_wire[29];
	assign		wire_l1_w29_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[134] : data_wire[99];
	assign		wire_l1_w29_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[204] : data_wire[169];
	assign		wire_l1_w29_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[274] : data_wire[239];
	assign		wire_l1_w29_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[344] : data_wire[309];
	assign		wire_l1_w29_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[414] : data_wire[379];
	assign		wire_l1_w29_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[484] : data_wire[449];
	assign		wire_l1_w29_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[554] : data_wire[519];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[37] : data_wire[2];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[72];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[177] : data_wire[142];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[247] : data_wire[212];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[317] : data_wire[282];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[387] : data_wire[352];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[457] : data_wire[422];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[527] : data_wire[492];
	assign		wire_l1_w30_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[65] : data_wire[30];
	assign		wire_l1_w30_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[135] : data_wire[100];
	assign		wire_l1_w30_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[205] : data_wire[170];
	assign		wire_l1_w30_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[275] : data_wire[240];
	assign		wire_l1_w30_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[345] : data_wire[310];
	assign		wire_l1_w30_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[415] : data_wire[380];
	assign		wire_l1_w30_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[485] : data_wire[450];
	assign		wire_l1_w30_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[555] : data_wire[520];
	assign		wire_l1_w31_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[66] : data_wire[31];
	assign		wire_l1_w31_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[136] : data_wire[101];
	assign		wire_l1_w31_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[206] : data_wire[171];
	assign		wire_l1_w31_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[276] : data_wire[241];
	assign		wire_l1_w31_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[346] : data_wire[311];
	assign		wire_l1_w31_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[416] : data_wire[381];
	assign		wire_l1_w31_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[486] : data_wire[451];
	assign		wire_l1_w31_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[556] : data_wire[521];
	assign		wire_l1_w32_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[67] : data_wire[32];
	assign		wire_l1_w32_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[137] : data_wire[102];
	assign		wire_l1_w32_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[207] : data_wire[172];
	assign		wire_l1_w32_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[277] : data_wire[242];
	assign		wire_l1_w32_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[347] : data_wire[312];
	assign		wire_l1_w32_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[417] : data_wire[382];
	assign		wire_l1_w32_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[487] : data_wire[452];
	assign		wire_l1_w32_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[557] : data_wire[522];
	assign		wire_l1_w33_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[68] : data_wire[33];
	assign		wire_l1_w33_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[138] : data_wire[103];
	assign		wire_l1_w33_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[208] : data_wire[173];
	assign		wire_l1_w33_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[278] : data_wire[243];
	assign		wire_l1_w33_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[348] : data_wire[313];
	assign		wire_l1_w33_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[418] : data_wire[383];
	assign		wire_l1_w33_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[488] : data_wire[453];
	assign		wire_l1_w33_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[558] : data_wire[523];
	assign		wire_l1_w34_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[69] : data_wire[34];
	assign		wire_l1_w34_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[139] : data_wire[104];
	assign		wire_l1_w34_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[209] : data_wire[174];
	assign		wire_l1_w34_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[279] : data_wire[244];
	assign		wire_l1_w34_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[349] : data_wire[314];
	assign		wire_l1_w34_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[419] : data_wire[384];
	assign		wire_l1_w34_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[489] : data_wire[454];
	assign		wire_l1_w34_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[559] : data_wire[524];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[38] : data_wire[3];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[108] : data_wire[73];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[178] : data_wire[143];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[248] : data_wire[213];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[318] : data_wire[283];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[388] : data_wire[353];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[458] : data_wire[423];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[528] : data_wire[493];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[39] : data_wire[4];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[109] : data_wire[74];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[179] : data_wire[144];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[249] : data_wire[214];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[319] : data_wire[284];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[389] : data_wire[354];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[459] : data_wire[424];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[529] : data_wire[494];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[40] : data_wire[5];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[110] : data_wire[75];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[180] : data_wire[145];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[250] : data_wire[215];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[320] : data_wire[285];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[390] : data_wire[355];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[460] : data_wire[425];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[530] : data_wire[495];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[41] : data_wire[6];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[111] : data_wire[76];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[181] : data_wire[146];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[251] : data_wire[216];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[321] : data_wire[286];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[391] : data_wire[356];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[461] : data_wire[426];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[531] : data_wire[496];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[7];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[112] : data_wire[77];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[182] : data_wire[147];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[252] : data_wire[217];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[322] : data_wire[287];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[392] : data_wire[357];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[462] : data_wire[427];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[532] : data_wire[497];
	assign		wire_l1_w8_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[8];
	assign		wire_l1_w8_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[113] : data_wire[78];
	assign		wire_l1_w8_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[183] : data_wire[148];
	assign		wire_l1_w8_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[253] : data_wire[218];
	assign		wire_l1_w8_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[323] : data_wire[288];
	assign		wire_l1_w8_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[393] : data_wire[358];
	assign		wire_l1_w8_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[463] : data_wire[428];
	assign		wire_l1_w8_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[533] : data_wire[498];
	assign		wire_l1_w9_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[9];
	assign		wire_l1_w9_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[114] : data_wire[79];
	assign		wire_l1_w9_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[184] : data_wire[149];
	assign		wire_l1_w9_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[254] : data_wire[219];
	assign		wire_l1_w9_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[324] : data_wire[289];
	assign		wire_l1_w9_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[394] : data_wire[359];
	assign		wire_l1_w9_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[464] : data_wire[429];
	assign		wire_l1_w9_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[534] : data_wire[499];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[561] : data_wire[560];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[563] : data_wire[562];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[565] : data_wire[564];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[567] : data_wire[566];
	assign		wire_l2_w10_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[641] : data_wire[640];
	assign		wire_l2_w10_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[643] : data_wire[642];
	assign		wire_l2_w10_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[645] : data_wire[644];
	assign		wire_l2_w10_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[647] : data_wire[646];
	assign		wire_l2_w11_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[649] : data_wire[648];
	assign		wire_l2_w11_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[651] : data_wire[650];
	assign		wire_l2_w11_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[653] : data_wire[652];
	assign		wire_l2_w11_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[655] : data_wire[654];
	assign		wire_l2_w12_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[657] : data_wire[656];
	assign		wire_l2_w12_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[659] : data_wire[658];
	assign		wire_l2_w12_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[661] : data_wire[660];
	assign		wire_l2_w12_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[663] : data_wire[662];
	assign		wire_l2_w13_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[665] : data_wire[664];
	assign		wire_l2_w13_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[667] : data_wire[666];
	assign		wire_l2_w13_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[669] : data_wire[668];
	assign		wire_l2_w13_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[671] : data_wire[670];
	assign		wire_l2_w14_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[673] : data_wire[672];
	assign		wire_l2_w14_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[675] : data_wire[674];
	assign		wire_l2_w14_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[677] : data_wire[676];
	assign		wire_l2_w14_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[679] : data_wire[678];
	assign		wire_l2_w15_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[681] : data_wire[680];
	assign		wire_l2_w15_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[683] : data_wire[682];
	assign		wire_l2_w15_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[685] : data_wire[684];
	assign		wire_l2_w15_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[687] : data_wire[686];
	assign		wire_l2_w16_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[689] : data_wire[688];
	assign		wire_l2_w16_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[691] : data_wire[690];
	assign		wire_l2_w16_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[693] : data_wire[692];
	assign		wire_l2_w16_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[695] : data_wire[694];
	assign		wire_l2_w17_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[697] : data_wire[696];
	assign		wire_l2_w17_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[699] : data_wire[698];
	assign		wire_l2_w17_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[701] : data_wire[700];
	assign		wire_l2_w17_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[703] : data_wire[702];
	assign		wire_l2_w18_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[705] : data_wire[704];
	assign		wire_l2_w18_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[707] : data_wire[706];
	assign		wire_l2_w18_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[709] : data_wire[708];
	assign		wire_l2_w18_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[711] : data_wire[710];
	assign		wire_l2_w19_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[713] : data_wire[712];
	assign		wire_l2_w19_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[715] : data_wire[714];
	assign		wire_l2_w19_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[717] : data_wire[716];
	assign		wire_l2_w19_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[719] : data_wire[718];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[569] : data_wire[568];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[571] : data_wire[570];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[573] : data_wire[572];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[575] : data_wire[574];
	assign		wire_l2_w20_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[721] : data_wire[720];
	assign		wire_l2_w20_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[723] : data_wire[722];
	assign		wire_l2_w20_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[725] : data_wire[724];
	assign		wire_l2_w20_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[727] : data_wire[726];
	assign		wire_l2_w21_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[729] : data_wire[728];
	assign		wire_l2_w21_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[731] : data_wire[730];
	assign		wire_l2_w21_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[733] : data_wire[732];
	assign		wire_l2_w21_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[735] : data_wire[734];
	assign		wire_l2_w22_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[737] : data_wire[736];
	assign		wire_l2_w22_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[739] : data_wire[738];
	assign		wire_l2_w22_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[741] : data_wire[740];
	assign		wire_l2_w22_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[743] : data_wire[742];
	assign		wire_l2_w23_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[745] : data_wire[744];
	assign		wire_l2_w23_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[747] : data_wire[746];
	assign		wire_l2_w23_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[749] : data_wire[748];
	assign		wire_l2_w23_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[751] : data_wire[750];
	assign		wire_l2_w24_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[753] : data_wire[752];
	assign		wire_l2_w24_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[755] : data_wire[754];
	assign		wire_l2_w24_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[757] : data_wire[756];
	assign		wire_l2_w24_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[759] : data_wire[758];
	assign		wire_l2_w25_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[761] : data_wire[760];
	assign		wire_l2_w25_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[763] : data_wire[762];
	assign		wire_l2_w25_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[765] : data_wire[764];
	assign		wire_l2_w25_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[767] : data_wire[766];
	assign		wire_l2_w26_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[769] : data_wire[768];
	assign		wire_l2_w26_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[771] : data_wire[770];
	assign		wire_l2_w26_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[773] : data_wire[772];
	assign		wire_l2_w26_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[775] : data_wire[774];
	assign		wire_l2_w27_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[777] : data_wire[776];
	assign		wire_l2_w27_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[779] : data_wire[778];
	assign		wire_l2_w27_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[781] : data_wire[780];
	assign		wire_l2_w27_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[783] : data_wire[782];
	assign		wire_l2_w28_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[785] : data_wire[784];
	assign		wire_l2_w28_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[787] : data_wire[786];
	assign		wire_l2_w28_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[789] : data_wire[788];
	assign		wire_l2_w28_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[791] : data_wire[790];
	assign		wire_l2_w29_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[793] : data_wire[792];
	assign		wire_l2_w29_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[795] : data_wire[794];
	assign		wire_l2_w29_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[797] : data_wire[796];
	assign		wire_l2_w29_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[799] : data_wire[798];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[577] : data_wire[576];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[579] : data_wire[578];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[581] : data_wire[580];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[583] : data_wire[582];
	assign		wire_l2_w30_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[801] : data_wire[800];
	assign		wire_l2_w30_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[803] : data_wire[802];
	assign		wire_l2_w30_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[805] : data_wire[804];
	assign		wire_l2_w30_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[807] : data_wire[806];
	assign		wire_l2_w31_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[809] : data_wire[808];
	assign		wire_l2_w31_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[811] : data_wire[810];
	assign		wire_l2_w31_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[813] : data_wire[812];
	assign		wire_l2_w31_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[815] : data_wire[814];
	assign		wire_l2_w32_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[817] : data_wire[816];
	assign		wire_l2_w32_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[819] : data_wire[818];
	assign		wire_l2_w32_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[821] : data_wire[820];
	assign		wire_l2_w32_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[823] : data_wire[822];
	assign		wire_l2_w33_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[825] : data_wire[824];
	assign		wire_l2_w33_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[827] : data_wire[826];
	assign		wire_l2_w33_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[829] : data_wire[828];
	assign		wire_l2_w33_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[831] : data_wire[830];
	assign		wire_l2_w34_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[833] : data_wire[832];
	assign		wire_l2_w34_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[835] : data_wire[834];
	assign		wire_l2_w34_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[837] : data_wire[836];
	assign		wire_l2_w34_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[839] : data_wire[838];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[585] : data_wire[584];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[587] : data_wire[586];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[589] : data_wire[588];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[591] : data_wire[590];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[593] : data_wire[592];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[595] : data_wire[594];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[597] : data_wire[596];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[599] : data_wire[598];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[601] : data_wire[600];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[603] : data_wire[602];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[605] : data_wire[604];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[607] : data_wire[606];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[609] : data_wire[608];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[611] : data_wire[610];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[613] : data_wire[612];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[615] : data_wire[614];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[617] : data_wire[616];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[619] : data_wire[618];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[621] : data_wire[620];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[623] : data_wire[622];
	assign		wire_l2_w8_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[625] : data_wire[624];
	assign		wire_l2_w8_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[627] : data_wire[626];
	assign		wire_l2_w8_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[629] : data_wire[628];
	assign		wire_l2_w8_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[631] : data_wire[630];
	assign		wire_l2_w9_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[633] : data_wire[632];
	assign		wire_l2_w9_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[635] : data_wire[634];
	assign		wire_l2_w9_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[637] : data_wire[636];
	assign		wire_l2_w9_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[639] : data_wire[638];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[841] : data_wire[840];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[843] : data_wire[842];
	assign		wire_l3_w10_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[881] : data_wire[880];
	assign		wire_l3_w10_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[883] : data_wire[882];
	assign		wire_l3_w11_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[885] : data_wire[884];
	assign		wire_l3_w11_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[887] : data_wire[886];
	assign		wire_l3_w12_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[889] : data_wire[888];
	assign		wire_l3_w12_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[891] : data_wire[890];
	assign		wire_l3_w13_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[893] : data_wire[892];
	assign		wire_l3_w13_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[895] : data_wire[894];
	assign		wire_l3_w14_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[897] : data_wire[896];
	assign		wire_l3_w14_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[899] : data_wire[898];
	assign		wire_l3_w15_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[901] : data_wire[900];
	assign		wire_l3_w15_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[903] : data_wire[902];
	assign		wire_l3_w16_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[905] : data_wire[904];
	assign		wire_l3_w16_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[907] : data_wire[906];
	assign		wire_l3_w17_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[909] : data_wire[908];
	assign		wire_l3_w17_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[911] : data_wire[910];
	assign		wire_l3_w18_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[913] : data_wire[912];
	assign		wire_l3_w18_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[915] : data_wire[914];
	assign		wire_l3_w19_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[917] : data_wire[916];
	assign		wire_l3_w19_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[919] : data_wire[918];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[845] : data_wire[844];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[847] : data_wire[846];
	assign		wire_l3_w20_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[921] : data_wire[920];
	assign		wire_l3_w20_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[923] : data_wire[922];
	assign		wire_l3_w21_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[925] : data_wire[924];
	assign		wire_l3_w21_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[927] : data_wire[926];
	assign		wire_l3_w22_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[929] : data_wire[928];
	assign		wire_l3_w22_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[931] : data_wire[930];
	assign		wire_l3_w23_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[933] : data_wire[932];
	assign		wire_l3_w23_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[935] : data_wire[934];
	assign		wire_l3_w24_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[937] : data_wire[936];
	assign		wire_l3_w24_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[939] : data_wire[938];
	assign		wire_l3_w25_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[941] : data_wire[940];
	assign		wire_l3_w25_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[943] : data_wire[942];
	assign		wire_l3_w26_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[945] : data_wire[944];
	assign		wire_l3_w26_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[947] : data_wire[946];
	assign		wire_l3_w27_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[949] : data_wire[948];
	assign		wire_l3_w27_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[951] : data_wire[950];
	assign		wire_l3_w28_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[953] : data_wire[952];
	assign		wire_l3_w28_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[955] : data_wire[954];
	assign		wire_l3_w29_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[957] : data_wire[956];
	assign		wire_l3_w29_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[959] : data_wire[958];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[849] : data_wire[848];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[851] : data_wire[850];
	assign		wire_l3_w30_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[961] : data_wire[960];
	assign		wire_l3_w30_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[963] : data_wire[962];
	assign		wire_l3_w31_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[965] : data_wire[964];
	assign		wire_l3_w31_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[967] : data_wire[966];
	assign		wire_l3_w32_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[969] : data_wire[968];
	assign		wire_l3_w32_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[971] : data_wire[970];
	assign		wire_l3_w33_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[973] : data_wire[972];
	assign		wire_l3_w33_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[975] : data_wire[974];
	assign		wire_l3_w34_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[977] : data_wire[976];
	assign		wire_l3_w34_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[979] : data_wire[978];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[853] : data_wire[852];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[855] : data_wire[854];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[857] : data_wire[856];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[859] : data_wire[858];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[861] : data_wire[860];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[863] : data_wire[862];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[865] : data_wire[864];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[867] : data_wire[866];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[869] : data_wire[868];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[871] : data_wire[870];
	assign		wire_l3_w8_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[873] : data_wire[872];
	assign		wire_l3_w8_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[875] : data_wire[874];
	assign		wire_l3_w9_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[877] : data_wire[876];
	assign		wire_l3_w9_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[879] : data_wire[878];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[981] : data_wire[980];
	assign		wire_l4_w10_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1001] : data_wire[1000];
	assign		wire_l4_w11_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1003] : data_wire[1002];
	assign		wire_l4_w12_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1005] : data_wire[1004];
	assign		wire_l4_w13_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1007] : data_wire[1006];
	assign		wire_l4_w14_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1009] : data_wire[1008];
	assign		wire_l4_w15_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1011] : data_wire[1010];
	assign		wire_l4_w16_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1013] : data_wire[1012];
	assign		wire_l4_w17_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1015] : data_wire[1014];
	assign		wire_l4_w18_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1017] : data_wire[1016];
	assign		wire_l4_w19_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1019] : data_wire[1018];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[983] : data_wire[982];
	assign		wire_l4_w20_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1021] : data_wire[1020];
	assign		wire_l4_w21_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1023] : data_wire[1022];
	assign		wire_l4_w22_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1025] : data_wire[1024];
	assign		wire_l4_w23_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1027] : data_wire[1026];
	assign		wire_l4_w24_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1029] : data_wire[1028];
	assign		wire_l4_w25_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1031] : data_wire[1030];
	assign		wire_l4_w26_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1033] : data_wire[1032];
	assign		wire_l4_w27_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1035] : data_wire[1034];
	assign		wire_l4_w28_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1037] : data_wire[1036];
	assign		wire_l4_w29_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1039] : data_wire[1038];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[985] : data_wire[984];
	assign		wire_l4_w30_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1041] : data_wire[1040];
	assign		wire_l4_w31_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1043] : data_wire[1042];
	assign		wire_l4_w32_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1045] : data_wire[1044];
	assign		wire_l4_w33_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1047] : data_wire[1046];
	assign		wire_l4_w34_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[1049] : data_wire[1048];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[987] : data_wire[986];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[989] : data_wire[988];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[991] : data_wire[990];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[993] : data_wire[992];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[995] : data_wire[994];
	assign		wire_l4_w8_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[997] : data_wire[996];
	assign		wire_l4_w9_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[999] : data_wire[998];
	assign
		data_wire = {wire_l3_w34_n1_mux_dataout, wire_l3_w34_n0_mux_dataout, wire_l3_w33_n1_mux_dataout, wire_l3_w33_n0_mux_dataout, wire_l3_w32_n1_mux_dataout, wire_l3_w32_n0_mux_dataout, wire_l3_w31_n1_mux_dataout, wire_l3_w31_n0_mux_dataout, wire_l3_w30_n1_mux_dataout, wire_l3_w30_n0_mux_dataout, wire_l3_w29_n1_mux_dataout, wire_l3_w29_n0_mux_dataout, wire_l3_w28_n1_mux_dataout, wire_l3_w28_n0_mux_dataout, wire_l3_w27_n1_mux_dataout, wire_l3_w27_n0_mux_dataout, wire_l3_w26_n1_mux_dataout, wire_l3_w26_n0_mux_dataout, wire_l3_w25_n1_mux_dataout, wire_l3_w25_n0_mux_dataout, wire_l3_w24_n1_mux_dataout, wire_l3_w24_n0_mux_dataout, wire_l3_w23_n1_mux_dataout, wire_l3_w23_n0_mux_dataout, wire_l3_w22_n1_mux_dataout, wire_l3_w22_n0_mux_dataout, wire_l3_w21_n1_mux_dataout, wire_l3_w21_n0_mux_dataout, wire_l3_w20_n1_mux_dataout, wire_l3_w20_n0_mux_dataout, wire_l3_w19_n1_mux_dataout, wire_l3_w19_n0_mux_dataout, wire_l3_w18_n1_mux_dataout, wire_l3_w18_n0_mux_dataout, wire_l3_w17_n1_mux_dataout, wire_l3_w17_n0_mux_dataout, wire_l3_w16_n1_mux_dataout, wire_l3_w16_n0_mux_dataout, wire_l3_w15_n1_mux_dataout, wire_l3_w15_n0_mux_dataout, wire_l3_w14_n1_mux_dataout, wire_l3_w14_n0_mux_dataout, wire_l3_w13_n1_mux_dataout, wire_l3_w13_n0_mux_dataout, wire_l3_w12_n1_mux_dataout, wire_l3_w12_n0_mux_dataout, wire_l3_w11_n1_mux_dataout, wire_l3_w11_n0_mux_dataout, wire_l3_w10_n1_mux_dataout, wire_l3_w10_n0_mux_dataout, wire_l3_w9_n1_mux_dataout, wire_l3_w9_n0_mux_dataout, wire_l3_w8_n1_mux_dataout, wire_l3_w8_n0_mux_dataout, wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w34_n3_mux_dataout, wire_l2_w34_n2_mux_dataout, wire_l2_w34_n1_mux_dataout, wire_l2_w34_n0_mux_dataout
, wire_l2_w33_n3_mux_dataout, wire_l2_w33_n2_mux_dataout, wire_l2_w33_n1_mux_dataout, wire_l2_w33_n0_mux_dataout, wire_l2_w32_n3_mux_dataout, wire_l2_w32_n2_mux_dataout, wire_l2_w32_n1_mux_dataout, wire_l2_w32_n0_mux_dataout, wire_l2_w31_n3_mux_dataout, wire_l2_w31_n2_mux_dataout, wire_l2_w31_n1_mux_dataout, wire_l2_w31_n0_mux_dataout, wire_l2_w30_n3_mux_dataout, wire_l2_w30_n2_mux_dataout, wire_l2_w30_n1_mux_dataout, wire_l2_w30_n0_mux_dataout, wire_l2_w29_n3_mux_dataout, wire_l2_w29_n2_mux_dataout, wire_l2_w29_n1_mux_dataout, wire_l2_w29_n0_mux_dataout, wire_l2_w28_n3_mux_dataout, wire_l2_w28_n2_mux_dataout, wire_l2_w28_n1_mux_dataout, wire_l2_w28_n0_mux_dataout, wire_l2_w27_n3_mux_dataout, wire_l2_w27_n2_mux_dataout, wire_l2_w27_n1_mux_dataout, wire_l2_w27_n0_mux_dataout, wire_l2_w26_n3_mux_dataout, wire_l2_w26_n2_mux_dataout, wire_l2_w26_n1_mux_dataout, wire_l2_w26_n0_mux_dataout, wire_l2_w25_n3_mux_dataout, wire_l2_w25_n2_mux_dataout, wire_l2_w25_n1_mux_dataout, wire_l2_w25_n0_mux_dataout, wire_l2_w24_n3_mux_dataout, wire_l2_w24_n2_mux_dataout, wire_l2_w24_n1_mux_dataout, wire_l2_w24_n0_mux_dataout, wire_l2_w23_n3_mux_dataout, wire_l2_w23_n2_mux_dataout, wire_l2_w23_n1_mux_dataout, wire_l2_w23_n0_mux_dataout, wire_l2_w22_n3_mux_dataout, wire_l2_w22_n2_mux_dataout, wire_l2_w22_n1_mux_dataout, wire_l2_w22_n0_mux_dataout, wire_l2_w21_n3_mux_dataout, wire_l2_w21_n2_mux_dataout, wire_l2_w21_n1_mux_dataout, wire_l2_w21_n0_mux_dataout, wire_l2_w20_n3_mux_dataout, wire_l2_w20_n2_mux_dataout, wire_l2_w20_n1_mux_dataout, wire_l2_w20_n0_mux_dataout, wire_l2_w19_n3_mux_dataout, wire_l2_w19_n2_mux_dataout, wire_l2_w19_n1_mux_dataout, wire_l2_w19_n0_mux_dataout, wire_l2_w18_n3_mux_dataout, wire_l2_w18_n2_mux_dataout, wire_l2_w18_n1_mux_dataout, wire_l2_w18_n0_mux_dataout, wire_l2_w17_n3_mux_dataout, wire_l2_w17_n2_mux_dataout, wire_l2_w17_n1_mux_dataout, wire_l2_w17_n0_mux_dataout, wire_l2_w16_n3_mux_dataout, wire_l2_w16_n2_mux_dataout, wire_l2_w16_n1_mux_dataout, wire_l2_w16_n0_mux_dataout, wire_l2_w15_n3_mux_dataout, wire_l2_w15_n2_mux_dataout
, wire_l2_w15_n1_mux_dataout, wire_l2_w15_n0_mux_dataout, wire_l2_w14_n3_mux_dataout, wire_l2_w14_n2_mux_dataout, wire_l2_w14_n1_mux_dataout, wire_l2_w14_n0_mux_dataout, wire_l2_w13_n3_mux_dataout, wire_l2_w13_n2_mux_dataout, wire_l2_w13_n1_mux_dataout, wire_l2_w13_n0_mux_dataout, wire_l2_w12_n3_mux_dataout, wire_l2_w12_n2_mux_dataout, wire_l2_w12_n1_mux_dataout, wire_l2_w12_n0_mux_dataout, wire_l2_w11_n3_mux_dataout, wire_l2_w11_n2_mux_dataout, wire_l2_w11_n1_mux_dataout, wire_l2_w11_n0_mux_dataout, wire_l2_w10_n3_mux_dataout, wire_l2_w10_n2_mux_dataout, wire_l2_w10_n1_mux_dataout, wire_l2_w10_n0_mux_dataout, wire_l2_w9_n3_mux_dataout, wire_l2_w9_n2_mux_dataout, wire_l2_w9_n1_mux_dataout, wire_l2_w9_n0_mux_dataout, wire_l2_w8_n3_mux_dataout, wire_l2_w8_n2_mux_dataout, wire_l2_w8_n1_mux_dataout, wire_l2_w8_n0_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w34_n7_mux_dataout, wire_l1_w34_n6_mux_dataout, wire_l1_w34_n5_mux_dataout, wire_l1_w34_n4_mux_dataout, wire_l1_w34_n3_mux_dataout, wire_l1_w34_n2_mux_dataout, wire_l1_w34_n1_mux_dataout, wire_l1_w34_n0_mux_dataout, wire_l1_w33_n7_mux_dataout, wire_l1_w33_n6_mux_dataout, wire_l1_w33_n5_mux_dataout, wire_l1_w33_n4_mux_dataout, wire_l1_w33_n3_mux_dataout
, wire_l1_w33_n2_mux_dataout, wire_l1_w33_n1_mux_dataout, wire_l1_w33_n0_mux_dataout, wire_l1_w32_n7_mux_dataout, wire_l1_w32_n6_mux_dataout, wire_l1_w32_n5_mux_dataout, wire_l1_w32_n4_mux_dataout, wire_l1_w32_n3_mux_dataout, wire_l1_w32_n2_mux_dataout, wire_l1_w32_n1_mux_dataout, wire_l1_w32_n0_mux_dataout, wire_l1_w31_n7_mux_dataout, wire_l1_w31_n6_mux_dataout, wire_l1_w31_n5_mux_dataout, wire_l1_w31_n4_mux_dataout, wire_l1_w31_n3_mux_dataout, wire_l1_w31_n2_mux_dataout, wire_l1_w31_n1_mux_dataout, wire_l1_w31_n0_mux_dataout, wire_l1_w30_n7_mux_dataout, wire_l1_w30_n6_mux_dataout, wire_l1_w30_n5_mux_dataout, wire_l1_w30_n4_mux_dataout, wire_l1_w30_n3_mux_dataout, wire_l1_w30_n2_mux_dataout, wire_l1_w30_n1_mux_dataout, wire_l1_w30_n0_mux_dataout, wire_l1_w29_n7_mux_dataout, wire_l1_w29_n6_mux_dataout, wire_l1_w29_n5_mux_dataout, wire_l1_w29_n4_mux_dataout, wire_l1_w29_n3_mux_dataout, wire_l1_w29_n2_mux_dataout, wire_l1_w29_n1_mux_dataout, wire_l1_w29_n0_mux_dataout, wire_l1_w28_n7_mux_dataout, wire_l1_w28_n6_mux_dataout, wire_l1_w28_n5_mux_dataout, wire_l1_w28_n4_mux_dataout, wire_l1_w28_n3_mux_dataout, wire_l1_w28_n2_mux_dataout, wire_l1_w28_n1_mux_dataout, wire_l1_w28_n0_mux_dataout, wire_l1_w27_n7_mux_dataout, wire_l1_w27_n6_mux_dataout, wire_l1_w27_n5_mux_dataout, wire_l1_w27_n4_mux_dataout, wire_l1_w27_n3_mux_dataout, wire_l1_w27_n2_mux_dataout, wire_l1_w27_n1_mux_dataout, wire_l1_w27_n0_mux_dataout, wire_l1_w26_n7_mux_dataout, wire_l1_w26_n6_mux_dataout, wire_l1_w26_n5_mux_dataout, wire_l1_w26_n4_mux_dataout, wire_l1_w26_n3_mux_dataout, wire_l1_w26_n2_mux_dataout, wire_l1_w26_n1_mux_dataout, wire_l1_w26_n0_mux_dataout, wire_l1_w25_n7_mux_dataout, wire_l1_w25_n6_mux_dataout, wire_l1_w25_n5_mux_dataout, wire_l1_w25_n4_mux_dataout, wire_l1_w25_n3_mux_dataout, wire_l1_w25_n2_mux_dataout, wire_l1_w25_n1_mux_dataout, wire_l1_w25_n0_mux_dataout, wire_l1_w24_n7_mux_dataout, wire_l1_w24_n6_mux_dataout, wire_l1_w24_n5_mux_dataout, wire_l1_w24_n4_mux_dataout, wire_l1_w24_n3_mux_dataout, wire_l1_w24_n2_mux_dataout, wire_l1_w24_n1_mux_dataout
, wire_l1_w24_n0_mux_dataout, wire_l1_w23_n7_mux_dataout, wire_l1_w23_n6_mux_dataout, wire_l1_w23_n5_mux_dataout, wire_l1_w23_n4_mux_dataout, wire_l1_w23_n3_mux_dataout, wire_l1_w23_n2_mux_dataout, wire_l1_w23_n1_mux_dataout, wire_l1_w23_n0_mux_dataout, wire_l1_w22_n7_mux_dataout, wire_l1_w22_n6_mux_dataout, wire_l1_w22_n5_mux_dataout, wire_l1_w22_n4_mux_dataout, wire_l1_w22_n3_mux_dataout, wire_l1_w22_n2_mux_dataout, wire_l1_w22_n1_mux_dataout, wire_l1_w22_n0_mux_dataout, wire_l1_w21_n7_mux_dataout, wire_l1_w21_n6_mux_dataout, wire_l1_w21_n5_mux_dataout, wire_l1_w21_n4_mux_dataout, wire_l1_w21_n3_mux_dataout, wire_l1_w21_n2_mux_dataout, wire_l1_w21_n1_mux_dataout, wire_l1_w21_n0_mux_dataout, wire_l1_w20_n7_mux_dataout, wire_l1_w20_n6_mux_dataout, wire_l1_w20_n5_mux_dataout, wire_l1_w20_n4_mux_dataout, wire_l1_w20_n3_mux_dataout, wire_l1_w20_n2_mux_dataout, wire_l1_w20_n1_mux_dataout, wire_l1_w20_n0_mux_dataout, wire_l1_w19_n7_mux_dataout, wire_l1_w19_n6_mux_dataout, wire_l1_w19_n5_mux_dataout, wire_l1_w19_n4_mux_dataout, wire_l1_w19_n3_mux_dataout, wire_l1_w19_n2_mux_dataout, wire_l1_w19_n1_mux_dataout, wire_l1_w19_n0_mux_dataout, wire_l1_w18_n7_mux_dataout, wire_l1_w18_n6_mux_dataout, wire_l1_w18_n5_mux_dataout, wire_l1_w18_n4_mux_dataout, wire_l1_w18_n3_mux_dataout, wire_l1_w18_n2_mux_dataout, wire_l1_w18_n1_mux_dataout, wire_l1_w18_n0_mux_dataout, wire_l1_w17_n7_mux_dataout, wire_l1_w17_n6_mux_dataout, wire_l1_w17_n5_mux_dataout, wire_l1_w17_n4_mux_dataout, wire_l1_w17_n3_mux_dataout, wire_l1_w17_n2_mux_dataout, wire_l1_w17_n1_mux_dataout, wire_l1_w17_n0_mux_dataout, wire_l1_w16_n7_mux_dataout, wire_l1_w16_n6_mux_dataout, wire_l1_w16_n5_mux_dataout, wire_l1_w16_n4_mux_dataout, wire_l1_w16_n3_mux_dataout, wire_l1_w16_n2_mux_dataout, wire_l1_w16_n1_mux_dataout, wire_l1_w16_n0_mux_dataout, wire_l1_w15_n7_mux_dataout, wire_l1_w15_n6_mux_dataout, wire_l1_w15_n5_mux_dataout, wire_l1_w15_n4_mux_dataout, wire_l1_w15_n3_mux_dataout, wire_l1_w15_n2_mux_dataout, wire_l1_w15_n1_mux_dataout, wire_l1_w15_n0_mux_dataout, wire_l1_w14_n7_mux_dataout
, wire_l1_w14_n6_mux_dataout, wire_l1_w14_n5_mux_dataout, wire_l1_w14_n4_mux_dataout, wire_l1_w14_n3_mux_dataout, wire_l1_w14_n2_mux_dataout, wire_l1_w14_n1_mux_dataout, wire_l1_w14_n0_mux_dataout, wire_l1_w13_n7_mux_dataout, wire_l1_w13_n6_mux_dataout, wire_l1_w13_n5_mux_dataout, wire_l1_w13_n4_mux_dataout, wire_l1_w13_n3_mux_dataout, wire_l1_w13_n2_mux_dataout, wire_l1_w13_n1_mux_dataout, wire_l1_w13_n0_mux_dataout, wire_l1_w12_n7_mux_dataout, wire_l1_w12_n6_mux_dataout, wire_l1_w12_n5_mux_dataout, wire_l1_w12_n4_mux_dataout, wire_l1_w12_n3_mux_dataout, wire_l1_w12_n2_mux_dataout, wire_l1_w12_n1_mux_dataout, wire_l1_w12_n0_mux_dataout, wire_l1_w11_n7_mux_dataout, wire_l1_w11_n6_mux_dataout, wire_l1_w11_n5_mux_dataout, wire_l1_w11_n4_mux_dataout, wire_l1_w11_n3_mux_dataout, wire_l1_w11_n2_mux_dataout, wire_l1_w11_n1_mux_dataout, wire_l1_w11_n0_mux_dataout, wire_l1_w10_n7_mux_dataout, wire_l1_w10_n6_mux_dataout, wire_l1_w10_n5_mux_dataout, wire_l1_w10_n4_mux_dataout, wire_l1_w10_n3_mux_dataout, wire_l1_w10_n2_mux_dataout, wire_l1_w10_n1_mux_dataout, wire_l1_w10_n0_mux_dataout, wire_l1_w9_n7_mux_dataout, wire_l1_w9_n6_mux_dataout, wire_l1_w9_n5_mux_dataout, wire_l1_w9_n4_mux_dataout, wire_l1_w9_n3_mux_dataout, wire_l1_w9_n2_mux_dataout, wire_l1_w9_n1_mux_dataout, wire_l1_w9_n0_mux_dataout, wire_l1_w8_n7_mux_dataout, wire_l1_w8_n6_mux_dataout, wire_l1_w8_n5_mux_dataout, wire_l1_w8_n4_mux_dataout, wire_l1_w8_n3_mux_dataout, wire_l1_w8_n2_mux_dataout, wire_l1_w8_n1_mux_dataout, wire_l1_w8_n0_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout
, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l4_w34_n0_mux_dataout, wire_l4_w33_n0_mux_dataout, wire_l4_w32_n0_mux_dataout, wire_l4_w31_n0_mux_dataout, wire_l4_w30_n0_mux_dataout, wire_l4_w29_n0_mux_dataout, wire_l4_w28_n0_mux_dataout, wire_l4_w27_n0_mux_dataout, wire_l4_w26_n0_mux_dataout, wire_l4_w25_n0_mux_dataout, wire_l4_w24_n0_mux_dataout, wire_l4_w23_n0_mux_dataout, wire_l4_w22_n0_mux_dataout, wire_l4_w21_n0_mux_dataout, wire_l4_w20_n0_mux_dataout, wire_l4_w19_n0_mux_dataout, wire_l4_w18_n0_mux_dataout, wire_l4_w17_n0_mux_dataout, wire_l4_w16_n0_mux_dataout, wire_l4_w15_n0_mux_dataout, wire_l4_w14_n0_mux_dataout, wire_l4_w13_n0_mux_dataout, wire_l4_w12_n0_mux_dataout, wire_l4_w11_n0_mux_dataout, wire_l4_w10_n0_mux_dataout, wire_l4_w9_n0_mux_dataout, wire_l4_w8_n0_mux_dataout, wire_l4_w7_n0_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n0_mux_dataout},
		sel_wire = {sel[3], {4{1'b0}}, sel[2], {4{1'b0}}, sel[1], {4{1'b0}}, sel[0]};
endmodule //fplog_mux12


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=16 LPM_WIDTH=32 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = lut 160 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mux123
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [511:0]  data;
	output   [31:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [511:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w10_n0_mux_dataout;
	wire	wire_l1_w10_n1_mux_dataout;
	wire	wire_l1_w10_n2_mux_dataout;
	wire	wire_l1_w10_n3_mux_dataout;
	wire	wire_l1_w10_n4_mux_dataout;
	wire	wire_l1_w10_n5_mux_dataout;
	wire	wire_l1_w10_n6_mux_dataout;
	wire	wire_l1_w10_n7_mux_dataout;
	wire	wire_l1_w11_n0_mux_dataout;
	wire	wire_l1_w11_n1_mux_dataout;
	wire	wire_l1_w11_n2_mux_dataout;
	wire	wire_l1_w11_n3_mux_dataout;
	wire	wire_l1_w11_n4_mux_dataout;
	wire	wire_l1_w11_n5_mux_dataout;
	wire	wire_l1_w11_n6_mux_dataout;
	wire	wire_l1_w11_n7_mux_dataout;
	wire	wire_l1_w12_n0_mux_dataout;
	wire	wire_l1_w12_n1_mux_dataout;
	wire	wire_l1_w12_n2_mux_dataout;
	wire	wire_l1_w12_n3_mux_dataout;
	wire	wire_l1_w12_n4_mux_dataout;
	wire	wire_l1_w12_n5_mux_dataout;
	wire	wire_l1_w12_n6_mux_dataout;
	wire	wire_l1_w12_n7_mux_dataout;
	wire	wire_l1_w13_n0_mux_dataout;
	wire	wire_l1_w13_n1_mux_dataout;
	wire	wire_l1_w13_n2_mux_dataout;
	wire	wire_l1_w13_n3_mux_dataout;
	wire	wire_l1_w13_n4_mux_dataout;
	wire	wire_l1_w13_n5_mux_dataout;
	wire	wire_l1_w13_n6_mux_dataout;
	wire	wire_l1_w13_n7_mux_dataout;
	wire	wire_l1_w14_n0_mux_dataout;
	wire	wire_l1_w14_n1_mux_dataout;
	wire	wire_l1_w14_n2_mux_dataout;
	wire	wire_l1_w14_n3_mux_dataout;
	wire	wire_l1_w14_n4_mux_dataout;
	wire	wire_l1_w14_n5_mux_dataout;
	wire	wire_l1_w14_n6_mux_dataout;
	wire	wire_l1_w14_n7_mux_dataout;
	wire	wire_l1_w15_n0_mux_dataout;
	wire	wire_l1_w15_n1_mux_dataout;
	wire	wire_l1_w15_n2_mux_dataout;
	wire	wire_l1_w15_n3_mux_dataout;
	wire	wire_l1_w15_n4_mux_dataout;
	wire	wire_l1_w15_n5_mux_dataout;
	wire	wire_l1_w15_n6_mux_dataout;
	wire	wire_l1_w15_n7_mux_dataout;
	wire	wire_l1_w16_n0_mux_dataout;
	wire	wire_l1_w16_n1_mux_dataout;
	wire	wire_l1_w16_n2_mux_dataout;
	wire	wire_l1_w16_n3_mux_dataout;
	wire	wire_l1_w16_n4_mux_dataout;
	wire	wire_l1_w16_n5_mux_dataout;
	wire	wire_l1_w16_n6_mux_dataout;
	wire	wire_l1_w16_n7_mux_dataout;
	wire	wire_l1_w17_n0_mux_dataout;
	wire	wire_l1_w17_n1_mux_dataout;
	wire	wire_l1_w17_n2_mux_dataout;
	wire	wire_l1_w17_n3_mux_dataout;
	wire	wire_l1_w17_n4_mux_dataout;
	wire	wire_l1_w17_n5_mux_dataout;
	wire	wire_l1_w17_n6_mux_dataout;
	wire	wire_l1_w17_n7_mux_dataout;
	wire	wire_l1_w18_n0_mux_dataout;
	wire	wire_l1_w18_n1_mux_dataout;
	wire	wire_l1_w18_n2_mux_dataout;
	wire	wire_l1_w18_n3_mux_dataout;
	wire	wire_l1_w18_n4_mux_dataout;
	wire	wire_l1_w18_n5_mux_dataout;
	wire	wire_l1_w18_n6_mux_dataout;
	wire	wire_l1_w18_n7_mux_dataout;
	wire	wire_l1_w19_n0_mux_dataout;
	wire	wire_l1_w19_n1_mux_dataout;
	wire	wire_l1_w19_n2_mux_dataout;
	wire	wire_l1_w19_n3_mux_dataout;
	wire	wire_l1_w19_n4_mux_dataout;
	wire	wire_l1_w19_n5_mux_dataout;
	wire	wire_l1_w19_n6_mux_dataout;
	wire	wire_l1_w19_n7_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w20_n0_mux_dataout;
	wire	wire_l1_w20_n1_mux_dataout;
	wire	wire_l1_w20_n2_mux_dataout;
	wire	wire_l1_w20_n3_mux_dataout;
	wire	wire_l1_w20_n4_mux_dataout;
	wire	wire_l1_w20_n5_mux_dataout;
	wire	wire_l1_w20_n6_mux_dataout;
	wire	wire_l1_w20_n7_mux_dataout;
	wire	wire_l1_w21_n0_mux_dataout;
	wire	wire_l1_w21_n1_mux_dataout;
	wire	wire_l1_w21_n2_mux_dataout;
	wire	wire_l1_w21_n3_mux_dataout;
	wire	wire_l1_w21_n4_mux_dataout;
	wire	wire_l1_w21_n5_mux_dataout;
	wire	wire_l1_w21_n6_mux_dataout;
	wire	wire_l1_w21_n7_mux_dataout;
	wire	wire_l1_w22_n0_mux_dataout;
	wire	wire_l1_w22_n1_mux_dataout;
	wire	wire_l1_w22_n2_mux_dataout;
	wire	wire_l1_w22_n3_mux_dataout;
	wire	wire_l1_w22_n4_mux_dataout;
	wire	wire_l1_w22_n5_mux_dataout;
	wire	wire_l1_w22_n6_mux_dataout;
	wire	wire_l1_w22_n7_mux_dataout;
	wire	wire_l1_w23_n0_mux_dataout;
	wire	wire_l1_w23_n1_mux_dataout;
	wire	wire_l1_w23_n2_mux_dataout;
	wire	wire_l1_w23_n3_mux_dataout;
	wire	wire_l1_w23_n4_mux_dataout;
	wire	wire_l1_w23_n5_mux_dataout;
	wire	wire_l1_w23_n6_mux_dataout;
	wire	wire_l1_w23_n7_mux_dataout;
	wire	wire_l1_w24_n0_mux_dataout;
	wire	wire_l1_w24_n1_mux_dataout;
	wire	wire_l1_w24_n2_mux_dataout;
	wire	wire_l1_w24_n3_mux_dataout;
	wire	wire_l1_w24_n4_mux_dataout;
	wire	wire_l1_w24_n5_mux_dataout;
	wire	wire_l1_w24_n6_mux_dataout;
	wire	wire_l1_w24_n7_mux_dataout;
	wire	wire_l1_w25_n0_mux_dataout;
	wire	wire_l1_w25_n1_mux_dataout;
	wire	wire_l1_w25_n2_mux_dataout;
	wire	wire_l1_w25_n3_mux_dataout;
	wire	wire_l1_w25_n4_mux_dataout;
	wire	wire_l1_w25_n5_mux_dataout;
	wire	wire_l1_w25_n6_mux_dataout;
	wire	wire_l1_w25_n7_mux_dataout;
	wire	wire_l1_w26_n0_mux_dataout;
	wire	wire_l1_w26_n1_mux_dataout;
	wire	wire_l1_w26_n2_mux_dataout;
	wire	wire_l1_w26_n3_mux_dataout;
	wire	wire_l1_w26_n4_mux_dataout;
	wire	wire_l1_w26_n5_mux_dataout;
	wire	wire_l1_w26_n6_mux_dataout;
	wire	wire_l1_w26_n7_mux_dataout;
	wire	wire_l1_w27_n0_mux_dataout;
	wire	wire_l1_w27_n1_mux_dataout;
	wire	wire_l1_w27_n2_mux_dataout;
	wire	wire_l1_w27_n3_mux_dataout;
	wire	wire_l1_w27_n4_mux_dataout;
	wire	wire_l1_w27_n5_mux_dataout;
	wire	wire_l1_w27_n6_mux_dataout;
	wire	wire_l1_w27_n7_mux_dataout;
	wire	wire_l1_w28_n0_mux_dataout;
	wire	wire_l1_w28_n1_mux_dataout;
	wire	wire_l1_w28_n2_mux_dataout;
	wire	wire_l1_w28_n3_mux_dataout;
	wire	wire_l1_w28_n4_mux_dataout;
	wire	wire_l1_w28_n5_mux_dataout;
	wire	wire_l1_w28_n6_mux_dataout;
	wire	wire_l1_w28_n7_mux_dataout;
	wire	wire_l1_w29_n0_mux_dataout;
	wire	wire_l1_w29_n1_mux_dataout;
	wire	wire_l1_w29_n2_mux_dataout;
	wire	wire_l1_w29_n3_mux_dataout;
	wire	wire_l1_w29_n4_mux_dataout;
	wire	wire_l1_w29_n5_mux_dataout;
	wire	wire_l1_w29_n6_mux_dataout;
	wire	wire_l1_w29_n7_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w30_n0_mux_dataout;
	wire	wire_l1_w30_n1_mux_dataout;
	wire	wire_l1_w30_n2_mux_dataout;
	wire	wire_l1_w30_n3_mux_dataout;
	wire	wire_l1_w30_n4_mux_dataout;
	wire	wire_l1_w30_n5_mux_dataout;
	wire	wire_l1_w30_n6_mux_dataout;
	wire	wire_l1_w30_n7_mux_dataout;
	wire	wire_l1_w31_n0_mux_dataout;
	wire	wire_l1_w31_n1_mux_dataout;
	wire	wire_l1_w31_n2_mux_dataout;
	wire	wire_l1_w31_n3_mux_dataout;
	wire	wire_l1_w31_n4_mux_dataout;
	wire	wire_l1_w31_n5_mux_dataout;
	wire	wire_l1_w31_n6_mux_dataout;
	wire	wire_l1_w31_n7_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l1_w8_n0_mux_dataout;
	wire	wire_l1_w8_n1_mux_dataout;
	wire	wire_l1_w8_n2_mux_dataout;
	wire	wire_l1_w8_n3_mux_dataout;
	wire	wire_l1_w8_n4_mux_dataout;
	wire	wire_l1_w8_n5_mux_dataout;
	wire	wire_l1_w8_n6_mux_dataout;
	wire	wire_l1_w8_n7_mux_dataout;
	wire	wire_l1_w9_n0_mux_dataout;
	wire	wire_l1_w9_n1_mux_dataout;
	wire	wire_l1_w9_n2_mux_dataout;
	wire	wire_l1_w9_n3_mux_dataout;
	wire	wire_l1_w9_n4_mux_dataout;
	wire	wire_l1_w9_n5_mux_dataout;
	wire	wire_l1_w9_n6_mux_dataout;
	wire	wire_l1_w9_n7_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w10_n0_mux_dataout;
	wire	wire_l2_w10_n1_mux_dataout;
	wire	wire_l2_w10_n2_mux_dataout;
	wire	wire_l2_w10_n3_mux_dataout;
	wire	wire_l2_w11_n0_mux_dataout;
	wire	wire_l2_w11_n1_mux_dataout;
	wire	wire_l2_w11_n2_mux_dataout;
	wire	wire_l2_w11_n3_mux_dataout;
	wire	wire_l2_w12_n0_mux_dataout;
	wire	wire_l2_w12_n1_mux_dataout;
	wire	wire_l2_w12_n2_mux_dataout;
	wire	wire_l2_w12_n3_mux_dataout;
	wire	wire_l2_w13_n0_mux_dataout;
	wire	wire_l2_w13_n1_mux_dataout;
	wire	wire_l2_w13_n2_mux_dataout;
	wire	wire_l2_w13_n3_mux_dataout;
	wire	wire_l2_w14_n0_mux_dataout;
	wire	wire_l2_w14_n1_mux_dataout;
	wire	wire_l2_w14_n2_mux_dataout;
	wire	wire_l2_w14_n3_mux_dataout;
	wire	wire_l2_w15_n0_mux_dataout;
	wire	wire_l2_w15_n1_mux_dataout;
	wire	wire_l2_w15_n2_mux_dataout;
	wire	wire_l2_w15_n3_mux_dataout;
	wire	wire_l2_w16_n0_mux_dataout;
	wire	wire_l2_w16_n1_mux_dataout;
	wire	wire_l2_w16_n2_mux_dataout;
	wire	wire_l2_w16_n3_mux_dataout;
	wire	wire_l2_w17_n0_mux_dataout;
	wire	wire_l2_w17_n1_mux_dataout;
	wire	wire_l2_w17_n2_mux_dataout;
	wire	wire_l2_w17_n3_mux_dataout;
	wire	wire_l2_w18_n0_mux_dataout;
	wire	wire_l2_w18_n1_mux_dataout;
	wire	wire_l2_w18_n2_mux_dataout;
	wire	wire_l2_w18_n3_mux_dataout;
	wire	wire_l2_w19_n0_mux_dataout;
	wire	wire_l2_w19_n1_mux_dataout;
	wire	wire_l2_w19_n2_mux_dataout;
	wire	wire_l2_w19_n3_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w20_n0_mux_dataout;
	wire	wire_l2_w20_n1_mux_dataout;
	wire	wire_l2_w20_n2_mux_dataout;
	wire	wire_l2_w20_n3_mux_dataout;
	wire	wire_l2_w21_n0_mux_dataout;
	wire	wire_l2_w21_n1_mux_dataout;
	wire	wire_l2_w21_n2_mux_dataout;
	wire	wire_l2_w21_n3_mux_dataout;
	wire	wire_l2_w22_n0_mux_dataout;
	wire	wire_l2_w22_n1_mux_dataout;
	wire	wire_l2_w22_n2_mux_dataout;
	wire	wire_l2_w22_n3_mux_dataout;
	wire	wire_l2_w23_n0_mux_dataout;
	wire	wire_l2_w23_n1_mux_dataout;
	wire	wire_l2_w23_n2_mux_dataout;
	wire	wire_l2_w23_n3_mux_dataout;
	wire	wire_l2_w24_n0_mux_dataout;
	wire	wire_l2_w24_n1_mux_dataout;
	wire	wire_l2_w24_n2_mux_dataout;
	wire	wire_l2_w24_n3_mux_dataout;
	wire	wire_l2_w25_n0_mux_dataout;
	wire	wire_l2_w25_n1_mux_dataout;
	wire	wire_l2_w25_n2_mux_dataout;
	wire	wire_l2_w25_n3_mux_dataout;
	wire	wire_l2_w26_n0_mux_dataout;
	wire	wire_l2_w26_n1_mux_dataout;
	wire	wire_l2_w26_n2_mux_dataout;
	wire	wire_l2_w26_n3_mux_dataout;
	wire	wire_l2_w27_n0_mux_dataout;
	wire	wire_l2_w27_n1_mux_dataout;
	wire	wire_l2_w27_n2_mux_dataout;
	wire	wire_l2_w27_n3_mux_dataout;
	wire	wire_l2_w28_n0_mux_dataout;
	wire	wire_l2_w28_n1_mux_dataout;
	wire	wire_l2_w28_n2_mux_dataout;
	wire	wire_l2_w28_n3_mux_dataout;
	wire	wire_l2_w29_n0_mux_dataout;
	wire	wire_l2_w29_n1_mux_dataout;
	wire	wire_l2_w29_n2_mux_dataout;
	wire	wire_l2_w29_n3_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w30_n0_mux_dataout;
	wire	wire_l2_w30_n1_mux_dataout;
	wire	wire_l2_w30_n2_mux_dataout;
	wire	wire_l2_w30_n3_mux_dataout;
	wire	wire_l2_w31_n0_mux_dataout;
	wire	wire_l2_w31_n1_mux_dataout;
	wire	wire_l2_w31_n2_mux_dataout;
	wire	wire_l2_w31_n3_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l2_w8_n0_mux_dataout;
	wire	wire_l2_w8_n1_mux_dataout;
	wire	wire_l2_w8_n2_mux_dataout;
	wire	wire_l2_w8_n3_mux_dataout;
	wire	wire_l2_w9_n0_mux_dataout;
	wire	wire_l2_w9_n1_mux_dataout;
	wire	wire_l2_w9_n2_mux_dataout;
	wire	wire_l2_w9_n3_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w10_n0_mux_dataout;
	wire	wire_l3_w10_n1_mux_dataout;
	wire	wire_l3_w11_n0_mux_dataout;
	wire	wire_l3_w11_n1_mux_dataout;
	wire	wire_l3_w12_n0_mux_dataout;
	wire	wire_l3_w12_n1_mux_dataout;
	wire	wire_l3_w13_n0_mux_dataout;
	wire	wire_l3_w13_n1_mux_dataout;
	wire	wire_l3_w14_n0_mux_dataout;
	wire	wire_l3_w14_n1_mux_dataout;
	wire	wire_l3_w15_n0_mux_dataout;
	wire	wire_l3_w15_n1_mux_dataout;
	wire	wire_l3_w16_n0_mux_dataout;
	wire	wire_l3_w16_n1_mux_dataout;
	wire	wire_l3_w17_n0_mux_dataout;
	wire	wire_l3_w17_n1_mux_dataout;
	wire	wire_l3_w18_n0_mux_dataout;
	wire	wire_l3_w18_n1_mux_dataout;
	wire	wire_l3_w19_n0_mux_dataout;
	wire	wire_l3_w19_n1_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w20_n0_mux_dataout;
	wire	wire_l3_w20_n1_mux_dataout;
	wire	wire_l3_w21_n0_mux_dataout;
	wire	wire_l3_w21_n1_mux_dataout;
	wire	wire_l3_w22_n0_mux_dataout;
	wire	wire_l3_w22_n1_mux_dataout;
	wire	wire_l3_w23_n0_mux_dataout;
	wire	wire_l3_w23_n1_mux_dataout;
	wire	wire_l3_w24_n0_mux_dataout;
	wire	wire_l3_w24_n1_mux_dataout;
	wire	wire_l3_w25_n0_mux_dataout;
	wire	wire_l3_w25_n1_mux_dataout;
	wire	wire_l3_w26_n0_mux_dataout;
	wire	wire_l3_w26_n1_mux_dataout;
	wire	wire_l3_w27_n0_mux_dataout;
	wire	wire_l3_w27_n1_mux_dataout;
	wire	wire_l3_w28_n0_mux_dataout;
	wire	wire_l3_w28_n1_mux_dataout;
	wire	wire_l3_w29_n0_mux_dataout;
	wire	wire_l3_w29_n1_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w30_n0_mux_dataout;
	wire	wire_l3_w30_n1_mux_dataout;
	wire	wire_l3_w31_n0_mux_dataout;
	wire	wire_l3_w31_n1_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l3_w8_n0_mux_dataout;
	wire	wire_l3_w8_n1_mux_dataout;
	wire	wire_l3_w9_n0_mux_dataout;
	wire	wire_l3_w9_n1_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w10_n0_mux_dataout;
	wire	wire_l4_w11_n0_mux_dataout;
	wire	wire_l4_w12_n0_mux_dataout;
	wire	wire_l4_w13_n0_mux_dataout;
	wire	wire_l4_w14_n0_mux_dataout;
	wire	wire_l4_w15_n0_mux_dataout;
	wire	wire_l4_w16_n0_mux_dataout;
	wire	wire_l4_w17_n0_mux_dataout;
	wire	wire_l4_w18_n0_mux_dataout;
	wire	wire_l4_w19_n0_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w20_n0_mux_dataout;
	wire	wire_l4_w21_n0_mux_dataout;
	wire	wire_l4_w22_n0_mux_dataout;
	wire	wire_l4_w23_n0_mux_dataout;
	wire	wire_l4_w24_n0_mux_dataout;
	wire	wire_l4_w25_n0_mux_dataout;
	wire	wire_l4_w26_n0_mux_dataout;
	wire	wire_l4_w27_n0_mux_dataout;
	wire	wire_l4_w28_n0_mux_dataout;
	wire	wire_l4_w29_n0_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w30_n0_mux_dataout;
	wire	wire_l4_w31_n0_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire	wire_l4_w8_n0_mux_dataout;
	wire	wire_l4_w9_n0_mux_dataout;
	wire  [959:0]  data_wire;
	wire  [31:0]  result_wire_ext;
	wire  [15:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[32] : data_wire[0];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[96] : data_wire[64];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[160] : data_wire[128];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[224] : data_wire[192];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[288] : data_wire[256];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[352] : data_wire[320];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[416] : data_wire[384];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[480] : data_wire[448];
	assign		wire_l1_w10_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[10];
	assign		wire_l1_w10_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[74];
	assign		wire_l1_w10_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[170] : data_wire[138];
	assign		wire_l1_w10_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[234] : data_wire[202];
	assign		wire_l1_w10_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[298] : data_wire[266];
	assign		wire_l1_w10_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[362] : data_wire[330];
	assign		wire_l1_w10_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[426] : data_wire[394];
	assign		wire_l1_w10_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[490] : data_wire[458];
	assign		wire_l1_w11_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[11];
	assign		wire_l1_w11_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[75];
	assign		wire_l1_w11_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[171] : data_wire[139];
	assign		wire_l1_w11_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[235] : data_wire[203];
	assign		wire_l1_w11_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[299] : data_wire[267];
	assign		wire_l1_w11_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[363] : data_wire[331];
	assign		wire_l1_w11_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[427] : data_wire[395];
	assign		wire_l1_w11_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[491] : data_wire[459];
	assign		wire_l1_w12_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[12];
	assign		wire_l1_w12_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[108] : data_wire[76];
	assign		wire_l1_w12_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[172] : data_wire[140];
	assign		wire_l1_w12_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[236] : data_wire[204];
	assign		wire_l1_w12_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[300] : data_wire[268];
	assign		wire_l1_w12_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[364] : data_wire[332];
	assign		wire_l1_w12_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[428] : data_wire[396];
	assign		wire_l1_w12_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[492] : data_wire[460];
	assign		wire_l1_w13_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[13];
	assign		wire_l1_w13_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[109] : data_wire[77];
	assign		wire_l1_w13_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[173] : data_wire[141];
	assign		wire_l1_w13_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[237] : data_wire[205];
	assign		wire_l1_w13_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[301] : data_wire[269];
	assign		wire_l1_w13_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[365] : data_wire[333];
	assign		wire_l1_w13_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[429] : data_wire[397];
	assign		wire_l1_w13_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[493] : data_wire[461];
	assign		wire_l1_w14_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[14];
	assign		wire_l1_w14_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[110] : data_wire[78];
	assign		wire_l1_w14_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[174] : data_wire[142];
	assign		wire_l1_w14_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[238] : data_wire[206];
	assign		wire_l1_w14_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[302] : data_wire[270];
	assign		wire_l1_w14_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[366] : data_wire[334];
	assign		wire_l1_w14_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[430] : data_wire[398];
	assign		wire_l1_w14_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[494] : data_wire[462];
	assign		wire_l1_w15_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[15];
	assign		wire_l1_w15_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[111] : data_wire[79];
	assign		wire_l1_w15_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[175] : data_wire[143];
	assign		wire_l1_w15_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[239] : data_wire[207];
	assign		wire_l1_w15_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[303] : data_wire[271];
	assign		wire_l1_w15_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[367] : data_wire[335];
	assign		wire_l1_w15_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[431] : data_wire[399];
	assign		wire_l1_w15_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[495] : data_wire[463];
	assign		wire_l1_w16_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[48] : data_wire[16];
	assign		wire_l1_w16_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[112] : data_wire[80];
	assign		wire_l1_w16_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[176] : data_wire[144];
	assign		wire_l1_w16_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[240] : data_wire[208];
	assign		wire_l1_w16_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[304] : data_wire[272];
	assign		wire_l1_w16_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[368] : data_wire[336];
	assign		wire_l1_w16_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[432] : data_wire[400];
	assign		wire_l1_w16_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[496] : data_wire[464];
	assign		wire_l1_w17_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[49] : data_wire[17];
	assign		wire_l1_w17_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[113] : data_wire[81];
	assign		wire_l1_w17_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[177] : data_wire[145];
	assign		wire_l1_w17_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[241] : data_wire[209];
	assign		wire_l1_w17_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[305] : data_wire[273];
	assign		wire_l1_w17_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[369] : data_wire[337];
	assign		wire_l1_w17_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[433] : data_wire[401];
	assign		wire_l1_w17_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[497] : data_wire[465];
	assign		wire_l1_w18_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[50] : data_wire[18];
	assign		wire_l1_w18_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[114] : data_wire[82];
	assign		wire_l1_w18_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[178] : data_wire[146];
	assign		wire_l1_w18_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[242] : data_wire[210];
	assign		wire_l1_w18_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[306] : data_wire[274];
	assign		wire_l1_w18_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[370] : data_wire[338];
	assign		wire_l1_w18_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[434] : data_wire[402];
	assign		wire_l1_w18_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[498] : data_wire[466];
	assign		wire_l1_w19_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[51] : data_wire[19];
	assign		wire_l1_w19_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[115] : data_wire[83];
	assign		wire_l1_w19_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[179] : data_wire[147];
	assign		wire_l1_w19_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[243] : data_wire[211];
	assign		wire_l1_w19_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[307] : data_wire[275];
	assign		wire_l1_w19_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[371] : data_wire[339];
	assign		wire_l1_w19_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[435] : data_wire[403];
	assign		wire_l1_w19_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[499] : data_wire[467];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[33] : data_wire[1];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[97] : data_wire[65];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[161] : data_wire[129];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[225] : data_wire[193];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[289] : data_wire[257];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[353] : data_wire[321];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[417] : data_wire[385];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[481] : data_wire[449];
	assign		wire_l1_w20_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[52] : data_wire[20];
	assign		wire_l1_w20_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[116] : data_wire[84];
	assign		wire_l1_w20_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[180] : data_wire[148];
	assign		wire_l1_w20_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[244] : data_wire[212];
	assign		wire_l1_w20_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[308] : data_wire[276];
	assign		wire_l1_w20_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[372] : data_wire[340];
	assign		wire_l1_w20_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[436] : data_wire[404];
	assign		wire_l1_w20_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[500] : data_wire[468];
	assign		wire_l1_w21_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[53] : data_wire[21];
	assign		wire_l1_w21_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[117] : data_wire[85];
	assign		wire_l1_w21_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[181] : data_wire[149];
	assign		wire_l1_w21_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[245] : data_wire[213];
	assign		wire_l1_w21_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[309] : data_wire[277];
	assign		wire_l1_w21_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[373] : data_wire[341];
	assign		wire_l1_w21_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[437] : data_wire[405];
	assign		wire_l1_w21_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[501] : data_wire[469];
	assign		wire_l1_w22_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[54] : data_wire[22];
	assign		wire_l1_w22_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[118] : data_wire[86];
	assign		wire_l1_w22_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[182] : data_wire[150];
	assign		wire_l1_w22_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[246] : data_wire[214];
	assign		wire_l1_w22_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[310] : data_wire[278];
	assign		wire_l1_w22_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[374] : data_wire[342];
	assign		wire_l1_w22_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[438] : data_wire[406];
	assign		wire_l1_w22_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[502] : data_wire[470];
	assign		wire_l1_w23_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[55] : data_wire[23];
	assign		wire_l1_w23_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[119] : data_wire[87];
	assign		wire_l1_w23_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[183] : data_wire[151];
	assign		wire_l1_w23_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[247] : data_wire[215];
	assign		wire_l1_w23_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[311] : data_wire[279];
	assign		wire_l1_w23_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[375] : data_wire[343];
	assign		wire_l1_w23_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[439] : data_wire[407];
	assign		wire_l1_w23_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[503] : data_wire[471];
	assign		wire_l1_w24_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[24];
	assign		wire_l1_w24_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[120] : data_wire[88];
	assign		wire_l1_w24_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[184] : data_wire[152];
	assign		wire_l1_w24_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[248] : data_wire[216];
	assign		wire_l1_w24_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[312] : data_wire[280];
	assign		wire_l1_w24_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[376] : data_wire[344];
	assign		wire_l1_w24_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[440] : data_wire[408];
	assign		wire_l1_w24_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[504] : data_wire[472];
	assign		wire_l1_w25_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[25];
	assign		wire_l1_w25_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[121] : data_wire[89];
	assign		wire_l1_w25_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[185] : data_wire[153];
	assign		wire_l1_w25_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[249] : data_wire[217];
	assign		wire_l1_w25_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[313] : data_wire[281];
	assign		wire_l1_w25_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[377] : data_wire[345];
	assign		wire_l1_w25_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[441] : data_wire[409];
	assign		wire_l1_w25_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[505] : data_wire[473];
	assign		wire_l1_w26_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[58] : data_wire[26];
	assign		wire_l1_w26_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[122] : data_wire[90];
	assign		wire_l1_w26_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[186] : data_wire[154];
	assign		wire_l1_w26_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[250] : data_wire[218];
	assign		wire_l1_w26_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[314] : data_wire[282];
	assign		wire_l1_w26_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[378] : data_wire[346];
	assign		wire_l1_w26_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[442] : data_wire[410];
	assign		wire_l1_w26_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[506] : data_wire[474];
	assign		wire_l1_w27_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[59] : data_wire[27];
	assign		wire_l1_w27_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[123] : data_wire[91];
	assign		wire_l1_w27_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[187] : data_wire[155];
	assign		wire_l1_w27_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[251] : data_wire[219];
	assign		wire_l1_w27_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[315] : data_wire[283];
	assign		wire_l1_w27_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[379] : data_wire[347];
	assign		wire_l1_w27_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[443] : data_wire[411];
	assign		wire_l1_w27_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[507] : data_wire[475];
	assign		wire_l1_w28_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[60] : data_wire[28];
	assign		wire_l1_w28_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[124] : data_wire[92];
	assign		wire_l1_w28_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[188] : data_wire[156];
	assign		wire_l1_w28_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[252] : data_wire[220];
	assign		wire_l1_w28_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[316] : data_wire[284];
	assign		wire_l1_w28_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[380] : data_wire[348];
	assign		wire_l1_w28_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[444] : data_wire[412];
	assign		wire_l1_w28_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[508] : data_wire[476];
	assign		wire_l1_w29_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[61] : data_wire[29];
	assign		wire_l1_w29_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[125] : data_wire[93];
	assign		wire_l1_w29_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[189] : data_wire[157];
	assign		wire_l1_w29_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[253] : data_wire[221];
	assign		wire_l1_w29_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[317] : data_wire[285];
	assign		wire_l1_w29_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[381] : data_wire[349];
	assign		wire_l1_w29_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[445] : data_wire[413];
	assign		wire_l1_w29_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[509] : data_wire[477];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[34] : data_wire[2];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[98] : data_wire[66];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[162] : data_wire[130];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[226] : data_wire[194];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[290] : data_wire[258];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[354] : data_wire[322];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[418] : data_wire[386];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[482] : data_wire[450];
	assign		wire_l1_w30_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[62] : data_wire[30];
	assign		wire_l1_w30_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[126] : data_wire[94];
	assign		wire_l1_w30_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[190] : data_wire[158];
	assign		wire_l1_w30_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[254] : data_wire[222];
	assign		wire_l1_w30_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[318] : data_wire[286];
	assign		wire_l1_w30_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[382] : data_wire[350];
	assign		wire_l1_w30_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[446] : data_wire[414];
	assign		wire_l1_w30_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[510] : data_wire[478];
	assign		wire_l1_w31_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[63] : data_wire[31];
	assign		wire_l1_w31_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[127] : data_wire[95];
	assign		wire_l1_w31_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[191] : data_wire[159];
	assign		wire_l1_w31_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[255] : data_wire[223];
	assign		wire_l1_w31_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[319] : data_wire[287];
	assign		wire_l1_w31_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[383] : data_wire[351];
	assign		wire_l1_w31_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[447] : data_wire[415];
	assign		wire_l1_w31_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[511] : data_wire[479];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[35] : data_wire[3];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[99] : data_wire[67];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[163] : data_wire[131];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[227] : data_wire[195];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[291] : data_wire[259];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[355] : data_wire[323];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[419] : data_wire[387];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[483] : data_wire[451];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[36] : data_wire[4];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[100] : data_wire[68];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[164] : data_wire[132];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[228] : data_wire[196];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[292] : data_wire[260];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[356] : data_wire[324];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[420] : data_wire[388];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[484] : data_wire[452];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[37] : data_wire[5];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[101] : data_wire[69];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[165] : data_wire[133];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[229] : data_wire[197];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[293] : data_wire[261];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[357] : data_wire[325];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[421] : data_wire[389];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[485] : data_wire[453];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[38] : data_wire[6];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[102] : data_wire[70];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[166] : data_wire[134];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[230] : data_wire[198];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[294] : data_wire[262];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[358] : data_wire[326];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[422] : data_wire[390];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[486] : data_wire[454];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[39] : data_wire[7];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[103] : data_wire[71];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[167] : data_wire[135];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[231] : data_wire[199];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[295] : data_wire[263];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[359] : data_wire[327];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[423] : data_wire[391];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[487] : data_wire[455];
	assign		wire_l1_w8_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[40] : data_wire[8];
	assign		wire_l1_w8_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[104] : data_wire[72];
	assign		wire_l1_w8_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[168] : data_wire[136];
	assign		wire_l1_w8_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[232] : data_wire[200];
	assign		wire_l1_w8_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[296] : data_wire[264];
	assign		wire_l1_w8_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[360] : data_wire[328];
	assign		wire_l1_w8_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[424] : data_wire[392];
	assign		wire_l1_w8_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[488] : data_wire[456];
	assign		wire_l1_w9_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[41] : data_wire[9];
	assign		wire_l1_w9_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[73];
	assign		wire_l1_w9_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[169] : data_wire[137];
	assign		wire_l1_w9_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[233] : data_wire[201];
	assign		wire_l1_w9_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[297] : data_wire[265];
	assign		wire_l1_w9_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[361] : data_wire[329];
	assign		wire_l1_w9_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[425] : data_wire[393];
	assign		wire_l1_w9_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[489] : data_wire[457];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[513] : data_wire[512];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[515] : data_wire[514];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[517] : data_wire[516];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[519] : data_wire[518];
	assign		wire_l2_w10_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[593] : data_wire[592];
	assign		wire_l2_w10_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[595] : data_wire[594];
	assign		wire_l2_w10_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[597] : data_wire[596];
	assign		wire_l2_w10_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[599] : data_wire[598];
	assign		wire_l2_w11_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[601] : data_wire[600];
	assign		wire_l2_w11_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[603] : data_wire[602];
	assign		wire_l2_w11_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[605] : data_wire[604];
	assign		wire_l2_w11_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[607] : data_wire[606];
	assign		wire_l2_w12_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[609] : data_wire[608];
	assign		wire_l2_w12_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[611] : data_wire[610];
	assign		wire_l2_w12_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[613] : data_wire[612];
	assign		wire_l2_w12_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[615] : data_wire[614];
	assign		wire_l2_w13_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[617] : data_wire[616];
	assign		wire_l2_w13_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[619] : data_wire[618];
	assign		wire_l2_w13_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[621] : data_wire[620];
	assign		wire_l2_w13_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[623] : data_wire[622];
	assign		wire_l2_w14_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[625] : data_wire[624];
	assign		wire_l2_w14_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[627] : data_wire[626];
	assign		wire_l2_w14_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[629] : data_wire[628];
	assign		wire_l2_w14_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[631] : data_wire[630];
	assign		wire_l2_w15_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[633] : data_wire[632];
	assign		wire_l2_w15_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[635] : data_wire[634];
	assign		wire_l2_w15_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[637] : data_wire[636];
	assign		wire_l2_w15_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[639] : data_wire[638];
	assign		wire_l2_w16_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[641] : data_wire[640];
	assign		wire_l2_w16_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[643] : data_wire[642];
	assign		wire_l2_w16_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[645] : data_wire[644];
	assign		wire_l2_w16_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[647] : data_wire[646];
	assign		wire_l2_w17_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[649] : data_wire[648];
	assign		wire_l2_w17_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[651] : data_wire[650];
	assign		wire_l2_w17_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[653] : data_wire[652];
	assign		wire_l2_w17_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[655] : data_wire[654];
	assign		wire_l2_w18_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[657] : data_wire[656];
	assign		wire_l2_w18_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[659] : data_wire[658];
	assign		wire_l2_w18_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[661] : data_wire[660];
	assign		wire_l2_w18_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[663] : data_wire[662];
	assign		wire_l2_w19_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[665] : data_wire[664];
	assign		wire_l2_w19_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[667] : data_wire[666];
	assign		wire_l2_w19_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[669] : data_wire[668];
	assign		wire_l2_w19_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[671] : data_wire[670];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[521] : data_wire[520];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[523] : data_wire[522];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[525] : data_wire[524];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[527] : data_wire[526];
	assign		wire_l2_w20_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[673] : data_wire[672];
	assign		wire_l2_w20_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[675] : data_wire[674];
	assign		wire_l2_w20_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[677] : data_wire[676];
	assign		wire_l2_w20_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[679] : data_wire[678];
	assign		wire_l2_w21_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[681] : data_wire[680];
	assign		wire_l2_w21_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[683] : data_wire[682];
	assign		wire_l2_w21_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[685] : data_wire[684];
	assign		wire_l2_w21_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[687] : data_wire[686];
	assign		wire_l2_w22_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[689] : data_wire[688];
	assign		wire_l2_w22_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[691] : data_wire[690];
	assign		wire_l2_w22_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[693] : data_wire[692];
	assign		wire_l2_w22_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[695] : data_wire[694];
	assign		wire_l2_w23_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[697] : data_wire[696];
	assign		wire_l2_w23_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[699] : data_wire[698];
	assign		wire_l2_w23_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[701] : data_wire[700];
	assign		wire_l2_w23_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[703] : data_wire[702];
	assign		wire_l2_w24_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[705] : data_wire[704];
	assign		wire_l2_w24_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[707] : data_wire[706];
	assign		wire_l2_w24_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[709] : data_wire[708];
	assign		wire_l2_w24_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[711] : data_wire[710];
	assign		wire_l2_w25_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[713] : data_wire[712];
	assign		wire_l2_w25_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[715] : data_wire[714];
	assign		wire_l2_w25_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[717] : data_wire[716];
	assign		wire_l2_w25_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[719] : data_wire[718];
	assign		wire_l2_w26_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[721] : data_wire[720];
	assign		wire_l2_w26_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[723] : data_wire[722];
	assign		wire_l2_w26_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[725] : data_wire[724];
	assign		wire_l2_w26_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[727] : data_wire[726];
	assign		wire_l2_w27_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[729] : data_wire[728];
	assign		wire_l2_w27_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[731] : data_wire[730];
	assign		wire_l2_w27_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[733] : data_wire[732];
	assign		wire_l2_w27_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[735] : data_wire[734];
	assign		wire_l2_w28_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[737] : data_wire[736];
	assign		wire_l2_w28_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[739] : data_wire[738];
	assign		wire_l2_w28_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[741] : data_wire[740];
	assign		wire_l2_w28_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[743] : data_wire[742];
	assign		wire_l2_w29_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[745] : data_wire[744];
	assign		wire_l2_w29_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[747] : data_wire[746];
	assign		wire_l2_w29_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[749] : data_wire[748];
	assign		wire_l2_w29_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[751] : data_wire[750];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[529] : data_wire[528];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[531] : data_wire[530];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[533] : data_wire[532];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[535] : data_wire[534];
	assign		wire_l2_w30_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[753] : data_wire[752];
	assign		wire_l2_w30_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[755] : data_wire[754];
	assign		wire_l2_w30_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[757] : data_wire[756];
	assign		wire_l2_w30_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[759] : data_wire[758];
	assign		wire_l2_w31_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[761] : data_wire[760];
	assign		wire_l2_w31_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[763] : data_wire[762];
	assign		wire_l2_w31_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[765] : data_wire[764];
	assign		wire_l2_w31_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[767] : data_wire[766];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[537] : data_wire[536];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[539] : data_wire[538];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[541] : data_wire[540];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[543] : data_wire[542];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[545] : data_wire[544];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[547] : data_wire[546];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[549] : data_wire[548];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[551] : data_wire[550];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[553] : data_wire[552];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[555] : data_wire[554];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[557] : data_wire[556];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[559] : data_wire[558];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[561] : data_wire[560];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[563] : data_wire[562];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[565] : data_wire[564];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[567] : data_wire[566];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[569] : data_wire[568];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[571] : data_wire[570];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[573] : data_wire[572];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[575] : data_wire[574];
	assign		wire_l2_w8_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[577] : data_wire[576];
	assign		wire_l2_w8_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[579] : data_wire[578];
	assign		wire_l2_w8_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[581] : data_wire[580];
	assign		wire_l2_w8_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[583] : data_wire[582];
	assign		wire_l2_w9_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[585] : data_wire[584];
	assign		wire_l2_w9_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[587] : data_wire[586];
	assign		wire_l2_w9_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[589] : data_wire[588];
	assign		wire_l2_w9_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[591] : data_wire[590];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[769] : data_wire[768];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[771] : data_wire[770];
	assign		wire_l3_w10_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[809] : data_wire[808];
	assign		wire_l3_w10_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[811] : data_wire[810];
	assign		wire_l3_w11_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[813] : data_wire[812];
	assign		wire_l3_w11_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[815] : data_wire[814];
	assign		wire_l3_w12_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[817] : data_wire[816];
	assign		wire_l3_w12_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[819] : data_wire[818];
	assign		wire_l3_w13_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[821] : data_wire[820];
	assign		wire_l3_w13_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[823] : data_wire[822];
	assign		wire_l3_w14_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[825] : data_wire[824];
	assign		wire_l3_w14_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[827] : data_wire[826];
	assign		wire_l3_w15_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[829] : data_wire[828];
	assign		wire_l3_w15_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[831] : data_wire[830];
	assign		wire_l3_w16_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[833] : data_wire[832];
	assign		wire_l3_w16_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[835] : data_wire[834];
	assign		wire_l3_w17_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[837] : data_wire[836];
	assign		wire_l3_w17_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[839] : data_wire[838];
	assign		wire_l3_w18_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[841] : data_wire[840];
	assign		wire_l3_w18_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[843] : data_wire[842];
	assign		wire_l3_w19_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[845] : data_wire[844];
	assign		wire_l3_w19_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[847] : data_wire[846];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[773] : data_wire[772];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[775] : data_wire[774];
	assign		wire_l3_w20_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[849] : data_wire[848];
	assign		wire_l3_w20_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[851] : data_wire[850];
	assign		wire_l3_w21_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[853] : data_wire[852];
	assign		wire_l3_w21_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[855] : data_wire[854];
	assign		wire_l3_w22_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[857] : data_wire[856];
	assign		wire_l3_w22_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[859] : data_wire[858];
	assign		wire_l3_w23_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[861] : data_wire[860];
	assign		wire_l3_w23_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[863] : data_wire[862];
	assign		wire_l3_w24_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[865] : data_wire[864];
	assign		wire_l3_w24_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[867] : data_wire[866];
	assign		wire_l3_w25_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[869] : data_wire[868];
	assign		wire_l3_w25_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[871] : data_wire[870];
	assign		wire_l3_w26_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[873] : data_wire[872];
	assign		wire_l3_w26_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[875] : data_wire[874];
	assign		wire_l3_w27_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[877] : data_wire[876];
	assign		wire_l3_w27_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[879] : data_wire[878];
	assign		wire_l3_w28_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[881] : data_wire[880];
	assign		wire_l3_w28_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[883] : data_wire[882];
	assign		wire_l3_w29_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[885] : data_wire[884];
	assign		wire_l3_w29_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[887] : data_wire[886];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[777] : data_wire[776];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[779] : data_wire[778];
	assign		wire_l3_w30_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[889] : data_wire[888];
	assign		wire_l3_w30_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[891] : data_wire[890];
	assign		wire_l3_w31_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[893] : data_wire[892];
	assign		wire_l3_w31_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[895] : data_wire[894];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[781] : data_wire[780];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[783] : data_wire[782];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[785] : data_wire[784];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[787] : data_wire[786];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[789] : data_wire[788];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[791] : data_wire[790];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[793] : data_wire[792];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[795] : data_wire[794];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[797] : data_wire[796];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[799] : data_wire[798];
	assign		wire_l3_w8_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[801] : data_wire[800];
	assign		wire_l3_w8_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[803] : data_wire[802];
	assign		wire_l3_w9_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[805] : data_wire[804];
	assign		wire_l3_w9_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[807] : data_wire[806];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[897] : data_wire[896];
	assign		wire_l4_w10_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[917] : data_wire[916];
	assign		wire_l4_w11_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[919] : data_wire[918];
	assign		wire_l4_w12_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[921] : data_wire[920];
	assign		wire_l4_w13_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[923] : data_wire[922];
	assign		wire_l4_w14_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[925] : data_wire[924];
	assign		wire_l4_w15_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[927] : data_wire[926];
	assign		wire_l4_w16_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[929] : data_wire[928];
	assign		wire_l4_w17_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[931] : data_wire[930];
	assign		wire_l4_w18_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[933] : data_wire[932];
	assign		wire_l4_w19_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[935] : data_wire[934];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[899] : data_wire[898];
	assign		wire_l4_w20_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[937] : data_wire[936];
	assign		wire_l4_w21_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[939] : data_wire[938];
	assign		wire_l4_w22_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[941] : data_wire[940];
	assign		wire_l4_w23_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[943] : data_wire[942];
	assign		wire_l4_w24_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[945] : data_wire[944];
	assign		wire_l4_w25_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[947] : data_wire[946];
	assign		wire_l4_w26_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[949] : data_wire[948];
	assign		wire_l4_w27_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[951] : data_wire[950];
	assign		wire_l4_w28_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[953] : data_wire[952];
	assign		wire_l4_w29_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[955] : data_wire[954];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[901] : data_wire[900];
	assign		wire_l4_w30_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[957] : data_wire[956];
	assign		wire_l4_w31_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[959] : data_wire[958];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[903] : data_wire[902];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[905] : data_wire[904];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[907] : data_wire[906];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[909] : data_wire[908];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[911] : data_wire[910];
	assign		wire_l4_w8_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[913] : data_wire[912];
	assign		wire_l4_w9_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[915] : data_wire[914];
	assign
		data_wire = {wire_l3_w31_n1_mux_dataout, wire_l3_w31_n0_mux_dataout, wire_l3_w30_n1_mux_dataout, wire_l3_w30_n0_mux_dataout, wire_l3_w29_n1_mux_dataout, wire_l3_w29_n0_mux_dataout, wire_l3_w28_n1_mux_dataout, wire_l3_w28_n0_mux_dataout, wire_l3_w27_n1_mux_dataout, wire_l3_w27_n0_mux_dataout, wire_l3_w26_n1_mux_dataout, wire_l3_w26_n0_mux_dataout, wire_l3_w25_n1_mux_dataout, wire_l3_w25_n0_mux_dataout, wire_l3_w24_n1_mux_dataout, wire_l3_w24_n0_mux_dataout, wire_l3_w23_n1_mux_dataout, wire_l3_w23_n0_mux_dataout, wire_l3_w22_n1_mux_dataout, wire_l3_w22_n0_mux_dataout, wire_l3_w21_n1_mux_dataout, wire_l3_w21_n0_mux_dataout, wire_l3_w20_n1_mux_dataout, wire_l3_w20_n0_mux_dataout, wire_l3_w19_n1_mux_dataout, wire_l3_w19_n0_mux_dataout, wire_l3_w18_n1_mux_dataout, wire_l3_w18_n0_mux_dataout, wire_l3_w17_n1_mux_dataout, wire_l3_w17_n0_mux_dataout, wire_l3_w16_n1_mux_dataout, wire_l3_w16_n0_mux_dataout, wire_l3_w15_n1_mux_dataout, wire_l3_w15_n0_mux_dataout, wire_l3_w14_n1_mux_dataout, wire_l3_w14_n0_mux_dataout, wire_l3_w13_n1_mux_dataout, wire_l3_w13_n0_mux_dataout, wire_l3_w12_n1_mux_dataout, wire_l3_w12_n0_mux_dataout, wire_l3_w11_n1_mux_dataout, wire_l3_w11_n0_mux_dataout, wire_l3_w10_n1_mux_dataout, wire_l3_w10_n0_mux_dataout, wire_l3_w9_n1_mux_dataout, wire_l3_w9_n0_mux_dataout, wire_l3_w8_n1_mux_dataout, wire_l3_w8_n0_mux_dataout, wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w31_n3_mux_dataout, wire_l2_w31_n2_mux_dataout, wire_l2_w31_n1_mux_dataout, wire_l2_w31_n0_mux_dataout, wire_l2_w30_n3_mux_dataout, wire_l2_w30_n2_mux_dataout, wire_l2_w30_n1_mux_dataout, wire_l2_w30_n0_mux_dataout, wire_l2_w29_n3_mux_dataout, wire_l2_w29_n2_mux_dataout
, wire_l2_w29_n1_mux_dataout, wire_l2_w29_n0_mux_dataout, wire_l2_w28_n3_mux_dataout, wire_l2_w28_n2_mux_dataout, wire_l2_w28_n1_mux_dataout, wire_l2_w28_n0_mux_dataout, wire_l2_w27_n3_mux_dataout, wire_l2_w27_n2_mux_dataout, wire_l2_w27_n1_mux_dataout, wire_l2_w27_n0_mux_dataout, wire_l2_w26_n3_mux_dataout, wire_l2_w26_n2_mux_dataout, wire_l2_w26_n1_mux_dataout, wire_l2_w26_n0_mux_dataout, wire_l2_w25_n3_mux_dataout, wire_l2_w25_n2_mux_dataout, wire_l2_w25_n1_mux_dataout, wire_l2_w25_n0_mux_dataout, wire_l2_w24_n3_mux_dataout, wire_l2_w24_n2_mux_dataout, wire_l2_w24_n1_mux_dataout, wire_l2_w24_n0_mux_dataout, wire_l2_w23_n3_mux_dataout, wire_l2_w23_n2_mux_dataout, wire_l2_w23_n1_mux_dataout, wire_l2_w23_n0_mux_dataout, wire_l2_w22_n3_mux_dataout, wire_l2_w22_n2_mux_dataout, wire_l2_w22_n1_mux_dataout, wire_l2_w22_n0_mux_dataout, wire_l2_w21_n3_mux_dataout, wire_l2_w21_n2_mux_dataout, wire_l2_w21_n1_mux_dataout, wire_l2_w21_n0_mux_dataout, wire_l2_w20_n3_mux_dataout, wire_l2_w20_n2_mux_dataout, wire_l2_w20_n1_mux_dataout, wire_l2_w20_n0_mux_dataout, wire_l2_w19_n3_mux_dataout, wire_l2_w19_n2_mux_dataout, wire_l2_w19_n1_mux_dataout, wire_l2_w19_n0_mux_dataout, wire_l2_w18_n3_mux_dataout, wire_l2_w18_n2_mux_dataout, wire_l2_w18_n1_mux_dataout, wire_l2_w18_n0_mux_dataout, wire_l2_w17_n3_mux_dataout, wire_l2_w17_n2_mux_dataout, wire_l2_w17_n1_mux_dataout, wire_l2_w17_n0_mux_dataout, wire_l2_w16_n3_mux_dataout, wire_l2_w16_n2_mux_dataout, wire_l2_w16_n1_mux_dataout, wire_l2_w16_n0_mux_dataout, wire_l2_w15_n3_mux_dataout, wire_l2_w15_n2_mux_dataout, wire_l2_w15_n1_mux_dataout, wire_l2_w15_n0_mux_dataout, wire_l2_w14_n3_mux_dataout, wire_l2_w14_n2_mux_dataout, wire_l2_w14_n1_mux_dataout, wire_l2_w14_n0_mux_dataout, wire_l2_w13_n3_mux_dataout, wire_l2_w13_n2_mux_dataout, wire_l2_w13_n1_mux_dataout, wire_l2_w13_n0_mux_dataout, wire_l2_w12_n3_mux_dataout, wire_l2_w12_n2_mux_dataout, wire_l2_w12_n1_mux_dataout, wire_l2_w12_n0_mux_dataout, wire_l2_w11_n3_mux_dataout, wire_l2_w11_n2_mux_dataout, wire_l2_w11_n1_mux_dataout, wire_l2_w11_n0_mux_dataout
, wire_l2_w10_n3_mux_dataout, wire_l2_w10_n2_mux_dataout, wire_l2_w10_n1_mux_dataout, wire_l2_w10_n0_mux_dataout, wire_l2_w9_n3_mux_dataout, wire_l2_w9_n2_mux_dataout, wire_l2_w9_n1_mux_dataout, wire_l2_w9_n0_mux_dataout, wire_l2_w8_n3_mux_dataout, wire_l2_w8_n2_mux_dataout, wire_l2_w8_n1_mux_dataout, wire_l2_w8_n0_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w31_n7_mux_dataout, wire_l1_w31_n6_mux_dataout, wire_l1_w31_n5_mux_dataout, wire_l1_w31_n4_mux_dataout, wire_l1_w31_n3_mux_dataout, wire_l1_w31_n2_mux_dataout, wire_l1_w31_n1_mux_dataout, wire_l1_w31_n0_mux_dataout, wire_l1_w30_n7_mux_dataout, wire_l1_w30_n6_mux_dataout, wire_l1_w30_n5_mux_dataout, wire_l1_w30_n4_mux_dataout, wire_l1_w30_n3_mux_dataout, wire_l1_w30_n2_mux_dataout, wire_l1_w30_n1_mux_dataout, wire_l1_w30_n0_mux_dataout, wire_l1_w29_n7_mux_dataout, wire_l1_w29_n6_mux_dataout, wire_l1_w29_n5_mux_dataout, wire_l1_w29_n4_mux_dataout, wire_l1_w29_n3_mux_dataout, wire_l1_w29_n2_mux_dataout, wire_l1_w29_n1_mux_dataout, wire_l1_w29_n0_mux_dataout, wire_l1_w28_n7_mux_dataout, wire_l1_w28_n6_mux_dataout, wire_l1_w28_n5_mux_dataout, wire_l1_w28_n4_mux_dataout, wire_l1_w28_n3_mux_dataout, wire_l1_w28_n2_mux_dataout, wire_l1_w28_n1_mux_dataout
, wire_l1_w28_n0_mux_dataout, wire_l1_w27_n7_mux_dataout, wire_l1_w27_n6_mux_dataout, wire_l1_w27_n5_mux_dataout, wire_l1_w27_n4_mux_dataout, wire_l1_w27_n3_mux_dataout, wire_l1_w27_n2_mux_dataout, wire_l1_w27_n1_mux_dataout, wire_l1_w27_n0_mux_dataout, wire_l1_w26_n7_mux_dataout, wire_l1_w26_n6_mux_dataout, wire_l1_w26_n5_mux_dataout, wire_l1_w26_n4_mux_dataout, wire_l1_w26_n3_mux_dataout, wire_l1_w26_n2_mux_dataout, wire_l1_w26_n1_mux_dataout, wire_l1_w26_n0_mux_dataout, wire_l1_w25_n7_mux_dataout, wire_l1_w25_n6_mux_dataout, wire_l1_w25_n5_mux_dataout, wire_l1_w25_n4_mux_dataout, wire_l1_w25_n3_mux_dataout, wire_l1_w25_n2_mux_dataout, wire_l1_w25_n1_mux_dataout, wire_l1_w25_n0_mux_dataout, wire_l1_w24_n7_mux_dataout, wire_l1_w24_n6_mux_dataout, wire_l1_w24_n5_mux_dataout, wire_l1_w24_n4_mux_dataout, wire_l1_w24_n3_mux_dataout, wire_l1_w24_n2_mux_dataout, wire_l1_w24_n1_mux_dataout, wire_l1_w24_n0_mux_dataout, wire_l1_w23_n7_mux_dataout, wire_l1_w23_n6_mux_dataout, wire_l1_w23_n5_mux_dataout, wire_l1_w23_n4_mux_dataout, wire_l1_w23_n3_mux_dataout, wire_l1_w23_n2_mux_dataout, wire_l1_w23_n1_mux_dataout, wire_l1_w23_n0_mux_dataout, wire_l1_w22_n7_mux_dataout, wire_l1_w22_n6_mux_dataout, wire_l1_w22_n5_mux_dataout, wire_l1_w22_n4_mux_dataout, wire_l1_w22_n3_mux_dataout, wire_l1_w22_n2_mux_dataout, wire_l1_w22_n1_mux_dataout, wire_l1_w22_n0_mux_dataout, wire_l1_w21_n7_mux_dataout, wire_l1_w21_n6_mux_dataout, wire_l1_w21_n5_mux_dataout, wire_l1_w21_n4_mux_dataout, wire_l1_w21_n3_mux_dataout, wire_l1_w21_n2_mux_dataout, wire_l1_w21_n1_mux_dataout, wire_l1_w21_n0_mux_dataout, wire_l1_w20_n7_mux_dataout, wire_l1_w20_n6_mux_dataout, wire_l1_w20_n5_mux_dataout, wire_l1_w20_n4_mux_dataout, wire_l1_w20_n3_mux_dataout, wire_l1_w20_n2_mux_dataout, wire_l1_w20_n1_mux_dataout, wire_l1_w20_n0_mux_dataout, wire_l1_w19_n7_mux_dataout, wire_l1_w19_n6_mux_dataout, wire_l1_w19_n5_mux_dataout, wire_l1_w19_n4_mux_dataout, wire_l1_w19_n3_mux_dataout, wire_l1_w19_n2_mux_dataout, wire_l1_w19_n1_mux_dataout, wire_l1_w19_n0_mux_dataout, wire_l1_w18_n7_mux_dataout
, wire_l1_w18_n6_mux_dataout, wire_l1_w18_n5_mux_dataout, wire_l1_w18_n4_mux_dataout, wire_l1_w18_n3_mux_dataout, wire_l1_w18_n2_mux_dataout, wire_l1_w18_n1_mux_dataout, wire_l1_w18_n0_mux_dataout, wire_l1_w17_n7_mux_dataout, wire_l1_w17_n6_mux_dataout, wire_l1_w17_n5_mux_dataout, wire_l1_w17_n4_mux_dataout, wire_l1_w17_n3_mux_dataout, wire_l1_w17_n2_mux_dataout, wire_l1_w17_n1_mux_dataout, wire_l1_w17_n0_mux_dataout, wire_l1_w16_n7_mux_dataout, wire_l1_w16_n6_mux_dataout, wire_l1_w16_n5_mux_dataout, wire_l1_w16_n4_mux_dataout, wire_l1_w16_n3_mux_dataout, wire_l1_w16_n2_mux_dataout, wire_l1_w16_n1_mux_dataout, wire_l1_w16_n0_mux_dataout, wire_l1_w15_n7_mux_dataout, wire_l1_w15_n6_mux_dataout, wire_l1_w15_n5_mux_dataout, wire_l1_w15_n4_mux_dataout, wire_l1_w15_n3_mux_dataout, wire_l1_w15_n2_mux_dataout, wire_l1_w15_n1_mux_dataout, wire_l1_w15_n0_mux_dataout, wire_l1_w14_n7_mux_dataout, wire_l1_w14_n6_mux_dataout, wire_l1_w14_n5_mux_dataout, wire_l1_w14_n4_mux_dataout, wire_l1_w14_n3_mux_dataout, wire_l1_w14_n2_mux_dataout, wire_l1_w14_n1_mux_dataout, wire_l1_w14_n0_mux_dataout, wire_l1_w13_n7_mux_dataout, wire_l1_w13_n6_mux_dataout, wire_l1_w13_n5_mux_dataout, wire_l1_w13_n4_mux_dataout, wire_l1_w13_n3_mux_dataout, wire_l1_w13_n2_mux_dataout, wire_l1_w13_n1_mux_dataout, wire_l1_w13_n0_mux_dataout, wire_l1_w12_n7_mux_dataout, wire_l1_w12_n6_mux_dataout, wire_l1_w12_n5_mux_dataout, wire_l1_w12_n4_mux_dataout, wire_l1_w12_n3_mux_dataout, wire_l1_w12_n2_mux_dataout, wire_l1_w12_n1_mux_dataout, wire_l1_w12_n0_mux_dataout, wire_l1_w11_n7_mux_dataout, wire_l1_w11_n6_mux_dataout, wire_l1_w11_n5_mux_dataout, wire_l1_w11_n4_mux_dataout, wire_l1_w11_n3_mux_dataout, wire_l1_w11_n2_mux_dataout, wire_l1_w11_n1_mux_dataout, wire_l1_w11_n0_mux_dataout, wire_l1_w10_n7_mux_dataout, wire_l1_w10_n6_mux_dataout, wire_l1_w10_n5_mux_dataout, wire_l1_w10_n4_mux_dataout, wire_l1_w10_n3_mux_dataout, wire_l1_w10_n2_mux_dataout, wire_l1_w10_n1_mux_dataout, wire_l1_w10_n0_mux_dataout, wire_l1_w9_n7_mux_dataout, wire_l1_w9_n6_mux_dataout, wire_l1_w9_n5_mux_dataout
, wire_l1_w9_n4_mux_dataout, wire_l1_w9_n3_mux_dataout, wire_l1_w9_n2_mux_dataout, wire_l1_w9_n1_mux_dataout, wire_l1_w9_n0_mux_dataout, wire_l1_w8_n7_mux_dataout, wire_l1_w8_n6_mux_dataout, wire_l1_w8_n5_mux_dataout, wire_l1_w8_n4_mux_dataout, wire_l1_w8_n3_mux_dataout, wire_l1_w8_n2_mux_dataout, wire_l1_w8_n1_mux_dataout, wire_l1_w8_n0_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout
, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l4_w31_n0_mux_dataout, wire_l4_w30_n0_mux_dataout, wire_l4_w29_n0_mux_dataout, wire_l4_w28_n0_mux_dataout, wire_l4_w27_n0_mux_dataout, wire_l4_w26_n0_mux_dataout, wire_l4_w25_n0_mux_dataout, wire_l4_w24_n0_mux_dataout, wire_l4_w23_n0_mux_dataout, wire_l4_w22_n0_mux_dataout, wire_l4_w21_n0_mux_dataout, wire_l4_w20_n0_mux_dataout, wire_l4_w19_n0_mux_dataout, wire_l4_w18_n0_mux_dataout, wire_l4_w17_n0_mux_dataout, wire_l4_w16_n0_mux_dataout, wire_l4_w15_n0_mux_dataout, wire_l4_w14_n0_mux_dataout, wire_l4_w13_n0_mux_dataout, wire_l4_w12_n0_mux_dataout, wire_l4_w11_n0_mux_dataout, wire_l4_w10_n0_mux_dataout, wire_l4_w9_n0_mux_dataout, wire_l4_w8_n0_mux_dataout, wire_l4_w7_n0_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n0_mux_dataout},
		sel_wire = {sel[3], {4{1'b0}}, sel[2], {4{1'b0}}, sel[1], {4{1'b0}}, sel[0]};
endmodule //fplog_mux123


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=16 LPM_WIDTH=29 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 16.1 cbx_lpm_mux 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = lut 145 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mux1234
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [463:0]  data;
	output   [28:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [463:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w10_n0_mux_dataout;
	wire	wire_l1_w10_n1_mux_dataout;
	wire	wire_l1_w10_n2_mux_dataout;
	wire	wire_l1_w10_n3_mux_dataout;
	wire	wire_l1_w10_n4_mux_dataout;
	wire	wire_l1_w10_n5_mux_dataout;
	wire	wire_l1_w10_n6_mux_dataout;
	wire	wire_l1_w10_n7_mux_dataout;
	wire	wire_l1_w11_n0_mux_dataout;
	wire	wire_l1_w11_n1_mux_dataout;
	wire	wire_l1_w11_n2_mux_dataout;
	wire	wire_l1_w11_n3_mux_dataout;
	wire	wire_l1_w11_n4_mux_dataout;
	wire	wire_l1_w11_n5_mux_dataout;
	wire	wire_l1_w11_n6_mux_dataout;
	wire	wire_l1_w11_n7_mux_dataout;
	wire	wire_l1_w12_n0_mux_dataout;
	wire	wire_l1_w12_n1_mux_dataout;
	wire	wire_l1_w12_n2_mux_dataout;
	wire	wire_l1_w12_n3_mux_dataout;
	wire	wire_l1_w12_n4_mux_dataout;
	wire	wire_l1_w12_n5_mux_dataout;
	wire	wire_l1_w12_n6_mux_dataout;
	wire	wire_l1_w12_n7_mux_dataout;
	wire	wire_l1_w13_n0_mux_dataout;
	wire	wire_l1_w13_n1_mux_dataout;
	wire	wire_l1_w13_n2_mux_dataout;
	wire	wire_l1_w13_n3_mux_dataout;
	wire	wire_l1_w13_n4_mux_dataout;
	wire	wire_l1_w13_n5_mux_dataout;
	wire	wire_l1_w13_n6_mux_dataout;
	wire	wire_l1_w13_n7_mux_dataout;
	wire	wire_l1_w14_n0_mux_dataout;
	wire	wire_l1_w14_n1_mux_dataout;
	wire	wire_l1_w14_n2_mux_dataout;
	wire	wire_l1_w14_n3_mux_dataout;
	wire	wire_l1_w14_n4_mux_dataout;
	wire	wire_l1_w14_n5_mux_dataout;
	wire	wire_l1_w14_n6_mux_dataout;
	wire	wire_l1_w14_n7_mux_dataout;
	wire	wire_l1_w15_n0_mux_dataout;
	wire	wire_l1_w15_n1_mux_dataout;
	wire	wire_l1_w15_n2_mux_dataout;
	wire	wire_l1_w15_n3_mux_dataout;
	wire	wire_l1_w15_n4_mux_dataout;
	wire	wire_l1_w15_n5_mux_dataout;
	wire	wire_l1_w15_n6_mux_dataout;
	wire	wire_l1_w15_n7_mux_dataout;
	wire	wire_l1_w16_n0_mux_dataout;
	wire	wire_l1_w16_n1_mux_dataout;
	wire	wire_l1_w16_n2_mux_dataout;
	wire	wire_l1_w16_n3_mux_dataout;
	wire	wire_l1_w16_n4_mux_dataout;
	wire	wire_l1_w16_n5_mux_dataout;
	wire	wire_l1_w16_n6_mux_dataout;
	wire	wire_l1_w16_n7_mux_dataout;
	wire	wire_l1_w17_n0_mux_dataout;
	wire	wire_l1_w17_n1_mux_dataout;
	wire	wire_l1_w17_n2_mux_dataout;
	wire	wire_l1_w17_n3_mux_dataout;
	wire	wire_l1_w17_n4_mux_dataout;
	wire	wire_l1_w17_n5_mux_dataout;
	wire	wire_l1_w17_n6_mux_dataout;
	wire	wire_l1_w17_n7_mux_dataout;
	wire	wire_l1_w18_n0_mux_dataout;
	wire	wire_l1_w18_n1_mux_dataout;
	wire	wire_l1_w18_n2_mux_dataout;
	wire	wire_l1_w18_n3_mux_dataout;
	wire	wire_l1_w18_n4_mux_dataout;
	wire	wire_l1_w18_n5_mux_dataout;
	wire	wire_l1_w18_n6_mux_dataout;
	wire	wire_l1_w18_n7_mux_dataout;
	wire	wire_l1_w19_n0_mux_dataout;
	wire	wire_l1_w19_n1_mux_dataout;
	wire	wire_l1_w19_n2_mux_dataout;
	wire	wire_l1_w19_n3_mux_dataout;
	wire	wire_l1_w19_n4_mux_dataout;
	wire	wire_l1_w19_n5_mux_dataout;
	wire	wire_l1_w19_n6_mux_dataout;
	wire	wire_l1_w19_n7_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w20_n0_mux_dataout;
	wire	wire_l1_w20_n1_mux_dataout;
	wire	wire_l1_w20_n2_mux_dataout;
	wire	wire_l1_w20_n3_mux_dataout;
	wire	wire_l1_w20_n4_mux_dataout;
	wire	wire_l1_w20_n5_mux_dataout;
	wire	wire_l1_w20_n6_mux_dataout;
	wire	wire_l1_w20_n7_mux_dataout;
	wire	wire_l1_w21_n0_mux_dataout;
	wire	wire_l1_w21_n1_mux_dataout;
	wire	wire_l1_w21_n2_mux_dataout;
	wire	wire_l1_w21_n3_mux_dataout;
	wire	wire_l1_w21_n4_mux_dataout;
	wire	wire_l1_w21_n5_mux_dataout;
	wire	wire_l1_w21_n6_mux_dataout;
	wire	wire_l1_w21_n7_mux_dataout;
	wire	wire_l1_w22_n0_mux_dataout;
	wire	wire_l1_w22_n1_mux_dataout;
	wire	wire_l1_w22_n2_mux_dataout;
	wire	wire_l1_w22_n3_mux_dataout;
	wire	wire_l1_w22_n4_mux_dataout;
	wire	wire_l1_w22_n5_mux_dataout;
	wire	wire_l1_w22_n6_mux_dataout;
	wire	wire_l1_w22_n7_mux_dataout;
	wire	wire_l1_w23_n0_mux_dataout;
	wire	wire_l1_w23_n1_mux_dataout;
	wire	wire_l1_w23_n2_mux_dataout;
	wire	wire_l1_w23_n3_mux_dataout;
	wire	wire_l1_w23_n4_mux_dataout;
	wire	wire_l1_w23_n5_mux_dataout;
	wire	wire_l1_w23_n6_mux_dataout;
	wire	wire_l1_w23_n7_mux_dataout;
	wire	wire_l1_w24_n0_mux_dataout;
	wire	wire_l1_w24_n1_mux_dataout;
	wire	wire_l1_w24_n2_mux_dataout;
	wire	wire_l1_w24_n3_mux_dataout;
	wire	wire_l1_w24_n4_mux_dataout;
	wire	wire_l1_w24_n5_mux_dataout;
	wire	wire_l1_w24_n6_mux_dataout;
	wire	wire_l1_w24_n7_mux_dataout;
	wire	wire_l1_w25_n0_mux_dataout;
	wire	wire_l1_w25_n1_mux_dataout;
	wire	wire_l1_w25_n2_mux_dataout;
	wire	wire_l1_w25_n3_mux_dataout;
	wire	wire_l1_w25_n4_mux_dataout;
	wire	wire_l1_w25_n5_mux_dataout;
	wire	wire_l1_w25_n6_mux_dataout;
	wire	wire_l1_w25_n7_mux_dataout;
	wire	wire_l1_w26_n0_mux_dataout;
	wire	wire_l1_w26_n1_mux_dataout;
	wire	wire_l1_w26_n2_mux_dataout;
	wire	wire_l1_w26_n3_mux_dataout;
	wire	wire_l1_w26_n4_mux_dataout;
	wire	wire_l1_w26_n5_mux_dataout;
	wire	wire_l1_w26_n6_mux_dataout;
	wire	wire_l1_w26_n7_mux_dataout;
	wire	wire_l1_w27_n0_mux_dataout;
	wire	wire_l1_w27_n1_mux_dataout;
	wire	wire_l1_w27_n2_mux_dataout;
	wire	wire_l1_w27_n3_mux_dataout;
	wire	wire_l1_w27_n4_mux_dataout;
	wire	wire_l1_w27_n5_mux_dataout;
	wire	wire_l1_w27_n6_mux_dataout;
	wire	wire_l1_w27_n7_mux_dataout;
	wire	wire_l1_w28_n0_mux_dataout;
	wire	wire_l1_w28_n1_mux_dataout;
	wire	wire_l1_w28_n2_mux_dataout;
	wire	wire_l1_w28_n3_mux_dataout;
	wire	wire_l1_w28_n4_mux_dataout;
	wire	wire_l1_w28_n5_mux_dataout;
	wire	wire_l1_w28_n6_mux_dataout;
	wire	wire_l1_w28_n7_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l1_w8_n0_mux_dataout;
	wire	wire_l1_w8_n1_mux_dataout;
	wire	wire_l1_w8_n2_mux_dataout;
	wire	wire_l1_w8_n3_mux_dataout;
	wire	wire_l1_w8_n4_mux_dataout;
	wire	wire_l1_w8_n5_mux_dataout;
	wire	wire_l1_w8_n6_mux_dataout;
	wire	wire_l1_w8_n7_mux_dataout;
	wire	wire_l1_w9_n0_mux_dataout;
	wire	wire_l1_w9_n1_mux_dataout;
	wire	wire_l1_w9_n2_mux_dataout;
	wire	wire_l1_w9_n3_mux_dataout;
	wire	wire_l1_w9_n4_mux_dataout;
	wire	wire_l1_w9_n5_mux_dataout;
	wire	wire_l1_w9_n6_mux_dataout;
	wire	wire_l1_w9_n7_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w10_n0_mux_dataout;
	wire	wire_l2_w10_n1_mux_dataout;
	wire	wire_l2_w10_n2_mux_dataout;
	wire	wire_l2_w10_n3_mux_dataout;
	wire	wire_l2_w11_n0_mux_dataout;
	wire	wire_l2_w11_n1_mux_dataout;
	wire	wire_l2_w11_n2_mux_dataout;
	wire	wire_l2_w11_n3_mux_dataout;
	wire	wire_l2_w12_n0_mux_dataout;
	wire	wire_l2_w12_n1_mux_dataout;
	wire	wire_l2_w12_n2_mux_dataout;
	wire	wire_l2_w12_n3_mux_dataout;
	wire	wire_l2_w13_n0_mux_dataout;
	wire	wire_l2_w13_n1_mux_dataout;
	wire	wire_l2_w13_n2_mux_dataout;
	wire	wire_l2_w13_n3_mux_dataout;
	wire	wire_l2_w14_n0_mux_dataout;
	wire	wire_l2_w14_n1_mux_dataout;
	wire	wire_l2_w14_n2_mux_dataout;
	wire	wire_l2_w14_n3_mux_dataout;
	wire	wire_l2_w15_n0_mux_dataout;
	wire	wire_l2_w15_n1_mux_dataout;
	wire	wire_l2_w15_n2_mux_dataout;
	wire	wire_l2_w15_n3_mux_dataout;
	wire	wire_l2_w16_n0_mux_dataout;
	wire	wire_l2_w16_n1_mux_dataout;
	wire	wire_l2_w16_n2_mux_dataout;
	wire	wire_l2_w16_n3_mux_dataout;
	wire	wire_l2_w17_n0_mux_dataout;
	wire	wire_l2_w17_n1_mux_dataout;
	wire	wire_l2_w17_n2_mux_dataout;
	wire	wire_l2_w17_n3_mux_dataout;
	wire	wire_l2_w18_n0_mux_dataout;
	wire	wire_l2_w18_n1_mux_dataout;
	wire	wire_l2_w18_n2_mux_dataout;
	wire	wire_l2_w18_n3_mux_dataout;
	wire	wire_l2_w19_n0_mux_dataout;
	wire	wire_l2_w19_n1_mux_dataout;
	wire	wire_l2_w19_n2_mux_dataout;
	wire	wire_l2_w19_n3_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w20_n0_mux_dataout;
	wire	wire_l2_w20_n1_mux_dataout;
	wire	wire_l2_w20_n2_mux_dataout;
	wire	wire_l2_w20_n3_mux_dataout;
	wire	wire_l2_w21_n0_mux_dataout;
	wire	wire_l2_w21_n1_mux_dataout;
	wire	wire_l2_w21_n2_mux_dataout;
	wire	wire_l2_w21_n3_mux_dataout;
	wire	wire_l2_w22_n0_mux_dataout;
	wire	wire_l2_w22_n1_mux_dataout;
	wire	wire_l2_w22_n2_mux_dataout;
	wire	wire_l2_w22_n3_mux_dataout;
	wire	wire_l2_w23_n0_mux_dataout;
	wire	wire_l2_w23_n1_mux_dataout;
	wire	wire_l2_w23_n2_mux_dataout;
	wire	wire_l2_w23_n3_mux_dataout;
	wire	wire_l2_w24_n0_mux_dataout;
	wire	wire_l2_w24_n1_mux_dataout;
	wire	wire_l2_w24_n2_mux_dataout;
	wire	wire_l2_w24_n3_mux_dataout;
	wire	wire_l2_w25_n0_mux_dataout;
	wire	wire_l2_w25_n1_mux_dataout;
	wire	wire_l2_w25_n2_mux_dataout;
	wire	wire_l2_w25_n3_mux_dataout;
	wire	wire_l2_w26_n0_mux_dataout;
	wire	wire_l2_w26_n1_mux_dataout;
	wire	wire_l2_w26_n2_mux_dataout;
	wire	wire_l2_w26_n3_mux_dataout;
	wire	wire_l2_w27_n0_mux_dataout;
	wire	wire_l2_w27_n1_mux_dataout;
	wire	wire_l2_w27_n2_mux_dataout;
	wire	wire_l2_w27_n3_mux_dataout;
	wire	wire_l2_w28_n0_mux_dataout;
	wire	wire_l2_w28_n1_mux_dataout;
	wire	wire_l2_w28_n2_mux_dataout;
	wire	wire_l2_w28_n3_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l2_w8_n0_mux_dataout;
	wire	wire_l2_w8_n1_mux_dataout;
	wire	wire_l2_w8_n2_mux_dataout;
	wire	wire_l2_w8_n3_mux_dataout;
	wire	wire_l2_w9_n0_mux_dataout;
	wire	wire_l2_w9_n1_mux_dataout;
	wire	wire_l2_w9_n2_mux_dataout;
	wire	wire_l2_w9_n3_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w10_n0_mux_dataout;
	wire	wire_l3_w10_n1_mux_dataout;
	wire	wire_l3_w11_n0_mux_dataout;
	wire	wire_l3_w11_n1_mux_dataout;
	wire	wire_l3_w12_n0_mux_dataout;
	wire	wire_l3_w12_n1_mux_dataout;
	wire	wire_l3_w13_n0_mux_dataout;
	wire	wire_l3_w13_n1_mux_dataout;
	wire	wire_l3_w14_n0_mux_dataout;
	wire	wire_l3_w14_n1_mux_dataout;
	wire	wire_l3_w15_n0_mux_dataout;
	wire	wire_l3_w15_n1_mux_dataout;
	wire	wire_l3_w16_n0_mux_dataout;
	wire	wire_l3_w16_n1_mux_dataout;
	wire	wire_l3_w17_n0_mux_dataout;
	wire	wire_l3_w17_n1_mux_dataout;
	wire	wire_l3_w18_n0_mux_dataout;
	wire	wire_l3_w18_n1_mux_dataout;
	wire	wire_l3_w19_n0_mux_dataout;
	wire	wire_l3_w19_n1_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w20_n0_mux_dataout;
	wire	wire_l3_w20_n1_mux_dataout;
	wire	wire_l3_w21_n0_mux_dataout;
	wire	wire_l3_w21_n1_mux_dataout;
	wire	wire_l3_w22_n0_mux_dataout;
	wire	wire_l3_w22_n1_mux_dataout;
	wire	wire_l3_w23_n0_mux_dataout;
	wire	wire_l3_w23_n1_mux_dataout;
	wire	wire_l3_w24_n0_mux_dataout;
	wire	wire_l3_w24_n1_mux_dataout;
	wire	wire_l3_w25_n0_mux_dataout;
	wire	wire_l3_w25_n1_mux_dataout;
	wire	wire_l3_w26_n0_mux_dataout;
	wire	wire_l3_w26_n1_mux_dataout;
	wire	wire_l3_w27_n0_mux_dataout;
	wire	wire_l3_w27_n1_mux_dataout;
	wire	wire_l3_w28_n0_mux_dataout;
	wire	wire_l3_w28_n1_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l3_w8_n0_mux_dataout;
	wire	wire_l3_w8_n1_mux_dataout;
	wire	wire_l3_w9_n0_mux_dataout;
	wire	wire_l3_w9_n1_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w10_n0_mux_dataout;
	wire	wire_l4_w11_n0_mux_dataout;
	wire	wire_l4_w12_n0_mux_dataout;
	wire	wire_l4_w13_n0_mux_dataout;
	wire	wire_l4_w14_n0_mux_dataout;
	wire	wire_l4_w15_n0_mux_dataout;
	wire	wire_l4_w16_n0_mux_dataout;
	wire	wire_l4_w17_n0_mux_dataout;
	wire	wire_l4_w18_n0_mux_dataout;
	wire	wire_l4_w19_n0_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w20_n0_mux_dataout;
	wire	wire_l4_w21_n0_mux_dataout;
	wire	wire_l4_w22_n0_mux_dataout;
	wire	wire_l4_w23_n0_mux_dataout;
	wire	wire_l4_w24_n0_mux_dataout;
	wire	wire_l4_w25_n0_mux_dataout;
	wire	wire_l4_w26_n0_mux_dataout;
	wire	wire_l4_w27_n0_mux_dataout;
	wire	wire_l4_w28_n0_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire	wire_l4_w8_n0_mux_dataout;
	wire	wire_l4_w9_n0_mux_dataout;
	wire  [869:0]  data_wire;
	wire  [28:0]  result_wire_ext;
	wire  [15:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[29] : data_wire[0];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[87] : data_wire[58];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[145] : data_wire[116];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[203] : data_wire[174];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[261] : data_wire[232];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[319] : data_wire[290];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[377] : data_wire[348];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[435] : data_wire[406];
	assign		wire_l1_w10_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[39] : data_wire[10];
	assign		wire_l1_w10_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[97] : data_wire[68];
	assign		wire_l1_w10_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[155] : data_wire[126];
	assign		wire_l1_w10_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[213] : data_wire[184];
	assign		wire_l1_w10_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[271] : data_wire[242];
	assign		wire_l1_w10_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[329] : data_wire[300];
	assign		wire_l1_w10_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[387] : data_wire[358];
	assign		wire_l1_w10_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[445] : data_wire[416];
	assign		wire_l1_w11_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[40] : data_wire[11];
	assign		wire_l1_w11_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[98] : data_wire[69];
	assign		wire_l1_w11_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[156] : data_wire[127];
	assign		wire_l1_w11_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[214] : data_wire[185];
	assign		wire_l1_w11_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[272] : data_wire[243];
	assign		wire_l1_w11_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[330] : data_wire[301];
	assign		wire_l1_w11_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[388] : data_wire[359];
	assign		wire_l1_w11_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[446] : data_wire[417];
	assign		wire_l1_w12_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[41] : data_wire[12];
	assign		wire_l1_w12_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[99] : data_wire[70];
	assign		wire_l1_w12_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[157] : data_wire[128];
	assign		wire_l1_w12_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[215] : data_wire[186];
	assign		wire_l1_w12_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[273] : data_wire[244];
	assign		wire_l1_w12_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[331] : data_wire[302];
	assign		wire_l1_w12_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[389] : data_wire[360];
	assign		wire_l1_w12_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[447] : data_wire[418];
	assign		wire_l1_w13_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[13];
	assign		wire_l1_w13_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[100] : data_wire[71];
	assign		wire_l1_w13_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[158] : data_wire[129];
	assign		wire_l1_w13_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[216] : data_wire[187];
	assign		wire_l1_w13_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[274] : data_wire[245];
	assign		wire_l1_w13_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[332] : data_wire[303];
	assign		wire_l1_w13_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[390] : data_wire[361];
	assign		wire_l1_w13_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[448] : data_wire[419];
	assign		wire_l1_w14_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[14];
	assign		wire_l1_w14_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[101] : data_wire[72];
	assign		wire_l1_w14_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[159] : data_wire[130];
	assign		wire_l1_w14_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[217] : data_wire[188];
	assign		wire_l1_w14_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[275] : data_wire[246];
	assign		wire_l1_w14_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[333] : data_wire[304];
	assign		wire_l1_w14_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[391] : data_wire[362];
	assign		wire_l1_w14_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[449] : data_wire[420];
	assign		wire_l1_w15_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[15];
	assign		wire_l1_w15_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[102] : data_wire[73];
	assign		wire_l1_w15_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[160] : data_wire[131];
	assign		wire_l1_w15_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[218] : data_wire[189];
	assign		wire_l1_w15_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[276] : data_wire[247];
	assign		wire_l1_w15_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[334] : data_wire[305];
	assign		wire_l1_w15_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[392] : data_wire[363];
	assign		wire_l1_w15_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[450] : data_wire[421];
	assign		wire_l1_w16_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[16];
	assign		wire_l1_w16_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[103] : data_wire[74];
	assign		wire_l1_w16_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[161] : data_wire[132];
	assign		wire_l1_w16_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[219] : data_wire[190];
	assign		wire_l1_w16_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[277] : data_wire[248];
	assign		wire_l1_w16_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[335] : data_wire[306];
	assign		wire_l1_w16_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[393] : data_wire[364];
	assign		wire_l1_w16_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[451] : data_wire[422];
	assign		wire_l1_w17_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[17];
	assign		wire_l1_w17_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[104] : data_wire[75];
	assign		wire_l1_w17_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[162] : data_wire[133];
	assign		wire_l1_w17_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[220] : data_wire[191];
	assign		wire_l1_w17_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[278] : data_wire[249];
	assign		wire_l1_w17_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[336] : data_wire[307];
	assign		wire_l1_w17_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[394] : data_wire[365];
	assign		wire_l1_w17_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[452] : data_wire[423];
	assign		wire_l1_w18_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[18];
	assign		wire_l1_w18_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[76];
	assign		wire_l1_w18_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[163] : data_wire[134];
	assign		wire_l1_w18_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[221] : data_wire[192];
	assign		wire_l1_w18_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[279] : data_wire[250];
	assign		wire_l1_w18_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[337] : data_wire[308];
	assign		wire_l1_w18_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[395] : data_wire[366];
	assign		wire_l1_w18_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[453] : data_wire[424];
	assign		wire_l1_w19_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[48] : data_wire[19];
	assign		wire_l1_w19_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[77];
	assign		wire_l1_w19_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[164] : data_wire[135];
	assign		wire_l1_w19_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[222] : data_wire[193];
	assign		wire_l1_w19_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[280] : data_wire[251];
	assign		wire_l1_w19_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[338] : data_wire[309];
	assign		wire_l1_w19_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[396] : data_wire[367];
	assign		wire_l1_w19_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[454] : data_wire[425];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[30] : data_wire[1];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[88] : data_wire[59];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[146] : data_wire[117];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[204] : data_wire[175];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[262] : data_wire[233];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[320] : data_wire[291];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[378] : data_wire[349];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[436] : data_wire[407];
	assign		wire_l1_w20_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[49] : data_wire[20];
	assign		wire_l1_w20_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[78];
	assign		wire_l1_w20_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[165] : data_wire[136];
	assign		wire_l1_w20_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[223] : data_wire[194];
	assign		wire_l1_w20_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[281] : data_wire[252];
	assign		wire_l1_w20_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[339] : data_wire[310];
	assign		wire_l1_w20_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[397] : data_wire[368];
	assign		wire_l1_w20_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[455] : data_wire[426];
	assign		wire_l1_w21_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[50] : data_wire[21];
	assign		wire_l1_w21_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[108] : data_wire[79];
	assign		wire_l1_w21_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[166] : data_wire[137];
	assign		wire_l1_w21_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[224] : data_wire[195];
	assign		wire_l1_w21_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[282] : data_wire[253];
	assign		wire_l1_w21_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[340] : data_wire[311];
	assign		wire_l1_w21_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[398] : data_wire[369];
	assign		wire_l1_w21_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[456] : data_wire[427];
	assign		wire_l1_w22_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[51] : data_wire[22];
	assign		wire_l1_w22_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[109] : data_wire[80];
	assign		wire_l1_w22_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[167] : data_wire[138];
	assign		wire_l1_w22_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[225] : data_wire[196];
	assign		wire_l1_w22_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[283] : data_wire[254];
	assign		wire_l1_w22_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[341] : data_wire[312];
	assign		wire_l1_w22_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[399] : data_wire[370];
	assign		wire_l1_w22_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[457] : data_wire[428];
	assign		wire_l1_w23_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[52] : data_wire[23];
	assign		wire_l1_w23_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[110] : data_wire[81];
	assign		wire_l1_w23_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[168] : data_wire[139];
	assign		wire_l1_w23_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[226] : data_wire[197];
	assign		wire_l1_w23_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[284] : data_wire[255];
	assign		wire_l1_w23_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[342] : data_wire[313];
	assign		wire_l1_w23_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[400] : data_wire[371];
	assign		wire_l1_w23_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[458] : data_wire[429];
	assign		wire_l1_w24_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[53] : data_wire[24];
	assign		wire_l1_w24_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[111] : data_wire[82];
	assign		wire_l1_w24_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[169] : data_wire[140];
	assign		wire_l1_w24_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[227] : data_wire[198];
	assign		wire_l1_w24_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[285] : data_wire[256];
	assign		wire_l1_w24_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[343] : data_wire[314];
	assign		wire_l1_w24_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[401] : data_wire[372];
	assign		wire_l1_w24_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[459] : data_wire[430];
	assign		wire_l1_w25_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[54] : data_wire[25];
	assign		wire_l1_w25_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[112] : data_wire[83];
	assign		wire_l1_w25_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[170] : data_wire[141];
	assign		wire_l1_w25_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[228] : data_wire[199];
	assign		wire_l1_w25_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[286] : data_wire[257];
	assign		wire_l1_w25_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[344] : data_wire[315];
	assign		wire_l1_w25_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[402] : data_wire[373];
	assign		wire_l1_w25_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[460] : data_wire[431];
	assign		wire_l1_w26_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[55] : data_wire[26];
	assign		wire_l1_w26_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[113] : data_wire[84];
	assign		wire_l1_w26_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[171] : data_wire[142];
	assign		wire_l1_w26_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[229] : data_wire[200];
	assign		wire_l1_w26_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[287] : data_wire[258];
	assign		wire_l1_w26_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[345] : data_wire[316];
	assign		wire_l1_w26_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[403] : data_wire[374];
	assign		wire_l1_w26_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[461] : data_wire[432];
	assign		wire_l1_w27_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[27];
	assign		wire_l1_w27_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[114] : data_wire[85];
	assign		wire_l1_w27_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[172] : data_wire[143];
	assign		wire_l1_w27_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[230] : data_wire[201];
	assign		wire_l1_w27_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[288] : data_wire[259];
	assign		wire_l1_w27_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[346] : data_wire[317];
	assign		wire_l1_w27_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[404] : data_wire[375];
	assign		wire_l1_w27_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[462] : data_wire[433];
	assign		wire_l1_w28_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[28];
	assign		wire_l1_w28_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[115] : data_wire[86];
	assign		wire_l1_w28_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[173] : data_wire[144];
	assign		wire_l1_w28_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[231] : data_wire[202];
	assign		wire_l1_w28_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[289] : data_wire[260];
	assign		wire_l1_w28_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[347] : data_wire[318];
	assign		wire_l1_w28_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[405] : data_wire[376];
	assign		wire_l1_w28_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[463] : data_wire[434];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[31] : data_wire[2];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[89] : data_wire[60];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[147] : data_wire[118];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[205] : data_wire[176];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[263] : data_wire[234];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[321] : data_wire[292];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[379] : data_wire[350];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[437] : data_wire[408];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[32] : data_wire[3];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[90] : data_wire[61];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[148] : data_wire[119];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[206] : data_wire[177];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[264] : data_wire[235];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[322] : data_wire[293];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[380] : data_wire[351];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[438] : data_wire[409];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[33] : data_wire[4];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[91] : data_wire[62];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[149] : data_wire[120];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[207] : data_wire[178];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[265] : data_wire[236];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[323] : data_wire[294];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[381] : data_wire[352];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[439] : data_wire[410];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[34] : data_wire[5];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[92] : data_wire[63];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[150] : data_wire[121];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[208] : data_wire[179];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[266] : data_wire[237];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[324] : data_wire[295];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[382] : data_wire[353];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[440] : data_wire[411];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[35] : data_wire[6];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[93] : data_wire[64];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[151] : data_wire[122];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[209] : data_wire[180];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[267] : data_wire[238];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[325] : data_wire[296];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[383] : data_wire[354];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[441] : data_wire[412];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[36] : data_wire[7];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[94] : data_wire[65];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[152] : data_wire[123];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[210] : data_wire[181];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[268] : data_wire[239];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[326] : data_wire[297];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[384] : data_wire[355];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[442] : data_wire[413];
	assign		wire_l1_w8_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[37] : data_wire[8];
	assign		wire_l1_w8_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[95] : data_wire[66];
	assign		wire_l1_w8_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[153] : data_wire[124];
	assign		wire_l1_w8_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[211] : data_wire[182];
	assign		wire_l1_w8_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[269] : data_wire[240];
	assign		wire_l1_w8_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[327] : data_wire[298];
	assign		wire_l1_w8_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[385] : data_wire[356];
	assign		wire_l1_w8_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[443] : data_wire[414];
	assign		wire_l1_w9_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[38] : data_wire[9];
	assign		wire_l1_w9_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[96] : data_wire[67];
	assign		wire_l1_w9_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[154] : data_wire[125];
	assign		wire_l1_w9_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[212] : data_wire[183];
	assign		wire_l1_w9_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[270] : data_wire[241];
	assign		wire_l1_w9_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[328] : data_wire[299];
	assign		wire_l1_w9_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[386] : data_wire[357];
	assign		wire_l1_w9_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[444] : data_wire[415];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[465] : data_wire[464];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[467] : data_wire[466];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[469] : data_wire[468];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[471] : data_wire[470];
	assign		wire_l2_w10_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[545] : data_wire[544];
	assign		wire_l2_w10_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[547] : data_wire[546];
	assign		wire_l2_w10_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[549] : data_wire[548];
	assign		wire_l2_w10_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[551] : data_wire[550];
	assign		wire_l2_w11_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[553] : data_wire[552];
	assign		wire_l2_w11_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[555] : data_wire[554];
	assign		wire_l2_w11_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[557] : data_wire[556];
	assign		wire_l2_w11_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[559] : data_wire[558];
	assign		wire_l2_w12_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[561] : data_wire[560];
	assign		wire_l2_w12_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[563] : data_wire[562];
	assign		wire_l2_w12_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[565] : data_wire[564];
	assign		wire_l2_w12_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[567] : data_wire[566];
	assign		wire_l2_w13_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[569] : data_wire[568];
	assign		wire_l2_w13_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[571] : data_wire[570];
	assign		wire_l2_w13_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[573] : data_wire[572];
	assign		wire_l2_w13_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[575] : data_wire[574];
	assign		wire_l2_w14_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[577] : data_wire[576];
	assign		wire_l2_w14_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[579] : data_wire[578];
	assign		wire_l2_w14_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[581] : data_wire[580];
	assign		wire_l2_w14_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[583] : data_wire[582];
	assign		wire_l2_w15_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[585] : data_wire[584];
	assign		wire_l2_w15_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[587] : data_wire[586];
	assign		wire_l2_w15_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[589] : data_wire[588];
	assign		wire_l2_w15_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[591] : data_wire[590];
	assign		wire_l2_w16_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[593] : data_wire[592];
	assign		wire_l2_w16_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[595] : data_wire[594];
	assign		wire_l2_w16_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[597] : data_wire[596];
	assign		wire_l2_w16_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[599] : data_wire[598];
	assign		wire_l2_w17_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[601] : data_wire[600];
	assign		wire_l2_w17_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[603] : data_wire[602];
	assign		wire_l2_w17_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[605] : data_wire[604];
	assign		wire_l2_w17_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[607] : data_wire[606];
	assign		wire_l2_w18_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[609] : data_wire[608];
	assign		wire_l2_w18_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[611] : data_wire[610];
	assign		wire_l2_w18_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[613] : data_wire[612];
	assign		wire_l2_w18_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[615] : data_wire[614];
	assign		wire_l2_w19_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[617] : data_wire[616];
	assign		wire_l2_w19_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[619] : data_wire[618];
	assign		wire_l2_w19_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[621] : data_wire[620];
	assign		wire_l2_w19_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[623] : data_wire[622];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[473] : data_wire[472];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[475] : data_wire[474];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[477] : data_wire[476];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[479] : data_wire[478];
	assign		wire_l2_w20_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[625] : data_wire[624];
	assign		wire_l2_w20_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[627] : data_wire[626];
	assign		wire_l2_w20_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[629] : data_wire[628];
	assign		wire_l2_w20_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[631] : data_wire[630];
	assign		wire_l2_w21_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[633] : data_wire[632];
	assign		wire_l2_w21_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[635] : data_wire[634];
	assign		wire_l2_w21_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[637] : data_wire[636];
	assign		wire_l2_w21_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[639] : data_wire[638];
	assign		wire_l2_w22_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[641] : data_wire[640];
	assign		wire_l2_w22_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[643] : data_wire[642];
	assign		wire_l2_w22_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[645] : data_wire[644];
	assign		wire_l2_w22_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[647] : data_wire[646];
	assign		wire_l2_w23_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[649] : data_wire[648];
	assign		wire_l2_w23_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[651] : data_wire[650];
	assign		wire_l2_w23_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[653] : data_wire[652];
	assign		wire_l2_w23_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[655] : data_wire[654];
	assign		wire_l2_w24_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[657] : data_wire[656];
	assign		wire_l2_w24_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[659] : data_wire[658];
	assign		wire_l2_w24_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[661] : data_wire[660];
	assign		wire_l2_w24_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[663] : data_wire[662];
	assign		wire_l2_w25_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[665] : data_wire[664];
	assign		wire_l2_w25_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[667] : data_wire[666];
	assign		wire_l2_w25_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[669] : data_wire[668];
	assign		wire_l2_w25_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[671] : data_wire[670];
	assign		wire_l2_w26_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[673] : data_wire[672];
	assign		wire_l2_w26_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[675] : data_wire[674];
	assign		wire_l2_w26_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[677] : data_wire[676];
	assign		wire_l2_w26_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[679] : data_wire[678];
	assign		wire_l2_w27_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[681] : data_wire[680];
	assign		wire_l2_w27_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[683] : data_wire[682];
	assign		wire_l2_w27_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[685] : data_wire[684];
	assign		wire_l2_w27_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[687] : data_wire[686];
	assign		wire_l2_w28_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[689] : data_wire[688];
	assign		wire_l2_w28_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[691] : data_wire[690];
	assign		wire_l2_w28_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[693] : data_wire[692];
	assign		wire_l2_w28_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[695] : data_wire[694];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[481] : data_wire[480];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[483] : data_wire[482];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[485] : data_wire[484];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[487] : data_wire[486];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[489] : data_wire[488];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[491] : data_wire[490];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[493] : data_wire[492];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[495] : data_wire[494];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[497] : data_wire[496];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[499] : data_wire[498];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[501] : data_wire[500];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[503] : data_wire[502];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[505] : data_wire[504];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[507] : data_wire[506];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[509] : data_wire[508];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[511] : data_wire[510];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[513] : data_wire[512];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[515] : data_wire[514];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[517] : data_wire[516];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[519] : data_wire[518];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[521] : data_wire[520];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[523] : data_wire[522];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[525] : data_wire[524];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[527] : data_wire[526];
	assign		wire_l2_w8_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[529] : data_wire[528];
	assign		wire_l2_w8_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[531] : data_wire[530];
	assign		wire_l2_w8_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[533] : data_wire[532];
	assign		wire_l2_w8_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[535] : data_wire[534];
	assign		wire_l2_w9_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[537] : data_wire[536];
	assign		wire_l2_w9_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[539] : data_wire[538];
	assign		wire_l2_w9_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[541] : data_wire[540];
	assign		wire_l2_w9_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[543] : data_wire[542];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[697] : data_wire[696];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[699] : data_wire[698];
	assign		wire_l3_w10_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[737] : data_wire[736];
	assign		wire_l3_w10_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[739] : data_wire[738];
	assign		wire_l3_w11_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[741] : data_wire[740];
	assign		wire_l3_w11_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[743] : data_wire[742];
	assign		wire_l3_w12_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[745] : data_wire[744];
	assign		wire_l3_w12_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[747] : data_wire[746];
	assign		wire_l3_w13_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[749] : data_wire[748];
	assign		wire_l3_w13_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[751] : data_wire[750];
	assign		wire_l3_w14_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[753] : data_wire[752];
	assign		wire_l3_w14_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[755] : data_wire[754];
	assign		wire_l3_w15_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[757] : data_wire[756];
	assign		wire_l3_w15_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[759] : data_wire[758];
	assign		wire_l3_w16_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[761] : data_wire[760];
	assign		wire_l3_w16_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[763] : data_wire[762];
	assign		wire_l3_w17_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[765] : data_wire[764];
	assign		wire_l3_w17_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[767] : data_wire[766];
	assign		wire_l3_w18_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[769] : data_wire[768];
	assign		wire_l3_w18_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[771] : data_wire[770];
	assign		wire_l3_w19_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[773] : data_wire[772];
	assign		wire_l3_w19_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[775] : data_wire[774];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[701] : data_wire[700];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[703] : data_wire[702];
	assign		wire_l3_w20_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[777] : data_wire[776];
	assign		wire_l3_w20_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[779] : data_wire[778];
	assign		wire_l3_w21_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[781] : data_wire[780];
	assign		wire_l3_w21_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[783] : data_wire[782];
	assign		wire_l3_w22_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[785] : data_wire[784];
	assign		wire_l3_w22_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[787] : data_wire[786];
	assign		wire_l3_w23_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[789] : data_wire[788];
	assign		wire_l3_w23_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[791] : data_wire[790];
	assign		wire_l3_w24_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[793] : data_wire[792];
	assign		wire_l3_w24_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[795] : data_wire[794];
	assign		wire_l3_w25_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[797] : data_wire[796];
	assign		wire_l3_w25_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[799] : data_wire[798];
	assign		wire_l3_w26_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[801] : data_wire[800];
	assign		wire_l3_w26_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[803] : data_wire[802];
	assign		wire_l3_w27_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[805] : data_wire[804];
	assign		wire_l3_w27_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[807] : data_wire[806];
	assign		wire_l3_w28_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[809] : data_wire[808];
	assign		wire_l3_w28_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[811] : data_wire[810];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[705] : data_wire[704];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[707] : data_wire[706];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[709] : data_wire[708];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[711] : data_wire[710];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[713] : data_wire[712];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[715] : data_wire[714];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[717] : data_wire[716];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[719] : data_wire[718];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[721] : data_wire[720];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[723] : data_wire[722];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[725] : data_wire[724];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[727] : data_wire[726];
	assign		wire_l3_w8_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[729] : data_wire[728];
	assign		wire_l3_w8_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[731] : data_wire[730];
	assign		wire_l3_w9_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[733] : data_wire[732];
	assign		wire_l3_w9_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[735] : data_wire[734];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[813] : data_wire[812];
	assign		wire_l4_w10_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[833] : data_wire[832];
	assign		wire_l4_w11_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[835] : data_wire[834];
	assign		wire_l4_w12_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[837] : data_wire[836];
	assign		wire_l4_w13_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[839] : data_wire[838];
	assign		wire_l4_w14_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[841] : data_wire[840];
	assign		wire_l4_w15_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[843] : data_wire[842];
	assign		wire_l4_w16_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[845] : data_wire[844];
	assign		wire_l4_w17_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[847] : data_wire[846];
	assign		wire_l4_w18_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[849] : data_wire[848];
	assign		wire_l4_w19_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[851] : data_wire[850];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[815] : data_wire[814];
	assign		wire_l4_w20_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[853] : data_wire[852];
	assign		wire_l4_w21_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[855] : data_wire[854];
	assign		wire_l4_w22_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[857] : data_wire[856];
	assign		wire_l4_w23_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[859] : data_wire[858];
	assign		wire_l4_w24_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[861] : data_wire[860];
	assign		wire_l4_w25_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[863] : data_wire[862];
	assign		wire_l4_w26_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[865] : data_wire[864];
	assign		wire_l4_w27_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[867] : data_wire[866];
	assign		wire_l4_w28_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[869] : data_wire[868];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[817] : data_wire[816];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[819] : data_wire[818];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[821] : data_wire[820];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[823] : data_wire[822];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[825] : data_wire[824];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[827] : data_wire[826];
	assign		wire_l4_w8_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[829] : data_wire[828];
	assign		wire_l4_w9_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[831] : data_wire[830];
	assign
		data_wire = {wire_l3_w28_n1_mux_dataout, wire_l3_w28_n0_mux_dataout, wire_l3_w27_n1_mux_dataout, wire_l3_w27_n0_mux_dataout, wire_l3_w26_n1_mux_dataout, wire_l3_w26_n0_mux_dataout, wire_l3_w25_n1_mux_dataout, wire_l3_w25_n0_mux_dataout, wire_l3_w24_n1_mux_dataout, wire_l3_w24_n0_mux_dataout, wire_l3_w23_n1_mux_dataout, wire_l3_w23_n0_mux_dataout, wire_l3_w22_n1_mux_dataout, wire_l3_w22_n0_mux_dataout, wire_l3_w21_n1_mux_dataout, wire_l3_w21_n0_mux_dataout, wire_l3_w20_n1_mux_dataout, wire_l3_w20_n0_mux_dataout, wire_l3_w19_n1_mux_dataout, wire_l3_w19_n0_mux_dataout, wire_l3_w18_n1_mux_dataout, wire_l3_w18_n0_mux_dataout, wire_l3_w17_n1_mux_dataout, wire_l3_w17_n0_mux_dataout, wire_l3_w16_n1_mux_dataout, wire_l3_w16_n0_mux_dataout, wire_l3_w15_n1_mux_dataout, wire_l3_w15_n0_mux_dataout, wire_l3_w14_n1_mux_dataout, wire_l3_w14_n0_mux_dataout, wire_l3_w13_n1_mux_dataout, wire_l3_w13_n0_mux_dataout, wire_l3_w12_n1_mux_dataout, wire_l3_w12_n0_mux_dataout, wire_l3_w11_n1_mux_dataout, wire_l3_w11_n0_mux_dataout, wire_l3_w10_n1_mux_dataout, wire_l3_w10_n0_mux_dataout, wire_l3_w9_n1_mux_dataout, wire_l3_w9_n0_mux_dataout, wire_l3_w8_n1_mux_dataout, wire_l3_w8_n0_mux_dataout, wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w28_n3_mux_dataout, wire_l2_w28_n2_mux_dataout, wire_l2_w28_n1_mux_dataout, wire_l2_w28_n0_mux_dataout, wire_l2_w27_n3_mux_dataout, wire_l2_w27_n2_mux_dataout, wire_l2_w27_n1_mux_dataout, wire_l2_w27_n0_mux_dataout, wire_l2_w26_n3_mux_dataout, wire_l2_w26_n2_mux_dataout, wire_l2_w26_n1_mux_dataout, wire_l2_w26_n0_mux_dataout, wire_l2_w25_n3_mux_dataout, wire_l2_w25_n2_mux_dataout, wire_l2_w25_n1_mux_dataout, wire_l2_w25_n0_mux_dataout
, wire_l2_w24_n3_mux_dataout, wire_l2_w24_n2_mux_dataout, wire_l2_w24_n1_mux_dataout, wire_l2_w24_n0_mux_dataout, wire_l2_w23_n3_mux_dataout, wire_l2_w23_n2_mux_dataout, wire_l2_w23_n1_mux_dataout, wire_l2_w23_n0_mux_dataout, wire_l2_w22_n3_mux_dataout, wire_l2_w22_n2_mux_dataout, wire_l2_w22_n1_mux_dataout, wire_l2_w22_n0_mux_dataout, wire_l2_w21_n3_mux_dataout, wire_l2_w21_n2_mux_dataout, wire_l2_w21_n1_mux_dataout, wire_l2_w21_n0_mux_dataout, wire_l2_w20_n3_mux_dataout, wire_l2_w20_n2_mux_dataout, wire_l2_w20_n1_mux_dataout, wire_l2_w20_n0_mux_dataout, wire_l2_w19_n3_mux_dataout, wire_l2_w19_n2_mux_dataout, wire_l2_w19_n1_mux_dataout, wire_l2_w19_n0_mux_dataout, wire_l2_w18_n3_mux_dataout, wire_l2_w18_n2_mux_dataout, wire_l2_w18_n1_mux_dataout, wire_l2_w18_n0_mux_dataout, wire_l2_w17_n3_mux_dataout, wire_l2_w17_n2_mux_dataout, wire_l2_w17_n1_mux_dataout, wire_l2_w17_n0_mux_dataout, wire_l2_w16_n3_mux_dataout, wire_l2_w16_n2_mux_dataout, wire_l2_w16_n1_mux_dataout, wire_l2_w16_n0_mux_dataout, wire_l2_w15_n3_mux_dataout, wire_l2_w15_n2_mux_dataout, wire_l2_w15_n1_mux_dataout, wire_l2_w15_n0_mux_dataout, wire_l2_w14_n3_mux_dataout, wire_l2_w14_n2_mux_dataout, wire_l2_w14_n1_mux_dataout, wire_l2_w14_n0_mux_dataout, wire_l2_w13_n3_mux_dataout, wire_l2_w13_n2_mux_dataout, wire_l2_w13_n1_mux_dataout, wire_l2_w13_n0_mux_dataout, wire_l2_w12_n3_mux_dataout, wire_l2_w12_n2_mux_dataout, wire_l2_w12_n1_mux_dataout, wire_l2_w12_n0_mux_dataout, wire_l2_w11_n3_mux_dataout, wire_l2_w11_n2_mux_dataout, wire_l2_w11_n1_mux_dataout, wire_l2_w11_n0_mux_dataout, wire_l2_w10_n3_mux_dataout, wire_l2_w10_n2_mux_dataout, wire_l2_w10_n1_mux_dataout, wire_l2_w10_n0_mux_dataout, wire_l2_w9_n3_mux_dataout, wire_l2_w9_n2_mux_dataout, wire_l2_w9_n1_mux_dataout, wire_l2_w9_n0_mux_dataout, wire_l2_w8_n3_mux_dataout, wire_l2_w8_n2_mux_dataout, wire_l2_w8_n1_mux_dataout, wire_l2_w8_n0_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout
, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w28_n7_mux_dataout, wire_l1_w28_n6_mux_dataout, wire_l1_w28_n5_mux_dataout, wire_l1_w28_n4_mux_dataout, wire_l1_w28_n3_mux_dataout, wire_l1_w28_n2_mux_dataout, wire_l1_w28_n1_mux_dataout, wire_l1_w28_n0_mux_dataout, wire_l1_w27_n7_mux_dataout, wire_l1_w27_n6_mux_dataout, wire_l1_w27_n5_mux_dataout, wire_l1_w27_n4_mux_dataout, wire_l1_w27_n3_mux_dataout, wire_l1_w27_n2_mux_dataout, wire_l1_w27_n1_mux_dataout, wire_l1_w27_n0_mux_dataout, wire_l1_w26_n7_mux_dataout, wire_l1_w26_n6_mux_dataout, wire_l1_w26_n5_mux_dataout, wire_l1_w26_n4_mux_dataout, wire_l1_w26_n3_mux_dataout, wire_l1_w26_n2_mux_dataout, wire_l1_w26_n1_mux_dataout, wire_l1_w26_n0_mux_dataout, wire_l1_w25_n7_mux_dataout, wire_l1_w25_n6_mux_dataout, wire_l1_w25_n5_mux_dataout, wire_l1_w25_n4_mux_dataout, wire_l1_w25_n3_mux_dataout, wire_l1_w25_n2_mux_dataout, wire_l1_w25_n1_mux_dataout, wire_l1_w25_n0_mux_dataout, wire_l1_w24_n7_mux_dataout, wire_l1_w24_n6_mux_dataout, wire_l1_w24_n5_mux_dataout, wire_l1_w24_n4_mux_dataout, wire_l1_w24_n3_mux_dataout, wire_l1_w24_n2_mux_dataout, wire_l1_w24_n1_mux_dataout, wire_l1_w24_n0_mux_dataout, wire_l1_w23_n7_mux_dataout, wire_l1_w23_n6_mux_dataout, wire_l1_w23_n5_mux_dataout, wire_l1_w23_n4_mux_dataout, wire_l1_w23_n3_mux_dataout, wire_l1_w23_n2_mux_dataout, wire_l1_w23_n1_mux_dataout, wire_l1_w23_n0_mux_dataout, wire_l1_w22_n7_mux_dataout
, wire_l1_w22_n6_mux_dataout, wire_l1_w22_n5_mux_dataout, wire_l1_w22_n4_mux_dataout, wire_l1_w22_n3_mux_dataout, wire_l1_w22_n2_mux_dataout, wire_l1_w22_n1_mux_dataout, wire_l1_w22_n0_mux_dataout, wire_l1_w21_n7_mux_dataout, wire_l1_w21_n6_mux_dataout, wire_l1_w21_n5_mux_dataout, wire_l1_w21_n4_mux_dataout, wire_l1_w21_n3_mux_dataout, wire_l1_w21_n2_mux_dataout, wire_l1_w21_n1_mux_dataout, wire_l1_w21_n0_mux_dataout, wire_l1_w20_n7_mux_dataout, wire_l1_w20_n6_mux_dataout, wire_l1_w20_n5_mux_dataout, wire_l1_w20_n4_mux_dataout, wire_l1_w20_n3_mux_dataout, wire_l1_w20_n2_mux_dataout, wire_l1_w20_n1_mux_dataout, wire_l1_w20_n0_mux_dataout, wire_l1_w19_n7_mux_dataout, wire_l1_w19_n6_mux_dataout, wire_l1_w19_n5_mux_dataout, wire_l1_w19_n4_mux_dataout, wire_l1_w19_n3_mux_dataout, wire_l1_w19_n2_mux_dataout, wire_l1_w19_n1_mux_dataout, wire_l1_w19_n0_mux_dataout, wire_l1_w18_n7_mux_dataout, wire_l1_w18_n6_mux_dataout, wire_l1_w18_n5_mux_dataout, wire_l1_w18_n4_mux_dataout, wire_l1_w18_n3_mux_dataout, wire_l1_w18_n2_mux_dataout, wire_l1_w18_n1_mux_dataout, wire_l1_w18_n0_mux_dataout, wire_l1_w17_n7_mux_dataout, wire_l1_w17_n6_mux_dataout, wire_l1_w17_n5_mux_dataout, wire_l1_w17_n4_mux_dataout, wire_l1_w17_n3_mux_dataout, wire_l1_w17_n2_mux_dataout, wire_l1_w17_n1_mux_dataout, wire_l1_w17_n0_mux_dataout, wire_l1_w16_n7_mux_dataout, wire_l1_w16_n6_mux_dataout, wire_l1_w16_n5_mux_dataout, wire_l1_w16_n4_mux_dataout, wire_l1_w16_n3_mux_dataout, wire_l1_w16_n2_mux_dataout, wire_l1_w16_n1_mux_dataout, wire_l1_w16_n0_mux_dataout, wire_l1_w15_n7_mux_dataout, wire_l1_w15_n6_mux_dataout, wire_l1_w15_n5_mux_dataout, wire_l1_w15_n4_mux_dataout, wire_l1_w15_n3_mux_dataout, wire_l1_w15_n2_mux_dataout, wire_l1_w15_n1_mux_dataout, wire_l1_w15_n0_mux_dataout, wire_l1_w14_n7_mux_dataout, wire_l1_w14_n6_mux_dataout, wire_l1_w14_n5_mux_dataout, wire_l1_w14_n4_mux_dataout, wire_l1_w14_n3_mux_dataout, wire_l1_w14_n2_mux_dataout, wire_l1_w14_n1_mux_dataout, wire_l1_w14_n0_mux_dataout, wire_l1_w13_n7_mux_dataout, wire_l1_w13_n6_mux_dataout, wire_l1_w13_n5_mux_dataout
, wire_l1_w13_n4_mux_dataout, wire_l1_w13_n3_mux_dataout, wire_l1_w13_n2_mux_dataout, wire_l1_w13_n1_mux_dataout, wire_l1_w13_n0_mux_dataout, wire_l1_w12_n7_mux_dataout, wire_l1_w12_n6_mux_dataout, wire_l1_w12_n5_mux_dataout, wire_l1_w12_n4_mux_dataout, wire_l1_w12_n3_mux_dataout, wire_l1_w12_n2_mux_dataout, wire_l1_w12_n1_mux_dataout, wire_l1_w12_n0_mux_dataout, wire_l1_w11_n7_mux_dataout, wire_l1_w11_n6_mux_dataout, wire_l1_w11_n5_mux_dataout, wire_l1_w11_n4_mux_dataout, wire_l1_w11_n3_mux_dataout, wire_l1_w11_n2_mux_dataout, wire_l1_w11_n1_mux_dataout, wire_l1_w11_n0_mux_dataout, wire_l1_w10_n7_mux_dataout, wire_l1_w10_n6_mux_dataout, wire_l1_w10_n5_mux_dataout, wire_l1_w10_n4_mux_dataout, wire_l1_w10_n3_mux_dataout, wire_l1_w10_n2_mux_dataout, wire_l1_w10_n1_mux_dataout, wire_l1_w10_n0_mux_dataout, wire_l1_w9_n7_mux_dataout, wire_l1_w9_n6_mux_dataout, wire_l1_w9_n5_mux_dataout, wire_l1_w9_n4_mux_dataout, wire_l1_w9_n3_mux_dataout, wire_l1_w9_n2_mux_dataout, wire_l1_w9_n1_mux_dataout, wire_l1_w9_n0_mux_dataout, wire_l1_w8_n7_mux_dataout, wire_l1_w8_n6_mux_dataout, wire_l1_w8_n5_mux_dataout, wire_l1_w8_n4_mux_dataout, wire_l1_w8_n3_mux_dataout, wire_l1_w8_n2_mux_dataout, wire_l1_w8_n1_mux_dataout, wire_l1_w8_n0_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout
, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l4_w28_n0_mux_dataout, wire_l4_w27_n0_mux_dataout, wire_l4_w26_n0_mux_dataout, wire_l4_w25_n0_mux_dataout, wire_l4_w24_n0_mux_dataout, wire_l4_w23_n0_mux_dataout, wire_l4_w22_n0_mux_dataout, wire_l4_w21_n0_mux_dataout, wire_l4_w20_n0_mux_dataout, wire_l4_w19_n0_mux_dataout, wire_l4_w18_n0_mux_dataout, wire_l4_w17_n0_mux_dataout, wire_l4_w16_n0_mux_dataout, wire_l4_w15_n0_mux_dataout, wire_l4_w14_n0_mux_dataout, wire_l4_w13_n0_mux_dataout, wire_l4_w12_n0_mux_dataout, wire_l4_w11_n0_mux_dataout, wire_l4_w10_n0_mux_dataout, wire_l4_w9_n0_mux_dataout, wire_l4_w8_n0_mux_dataout, wire_l4_w7_n0_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n0_mux_dataout},
		sel_wire = {sel[3], {4{1'b0}}, sel[2], {4{1'b0}}, sel[1], {4{1'b0}}, sel[0]};
endmodule //fplog_mux1234

//synthesis_resources = lut 1684 reg 681 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_range_reduction
	( 
	a0_in,
	aclr,
	almostlog,
	clk_en,
	clock,
	y0_in,
	z) /* synthesis synthesis_clearbox=1 */;
	input   [4:0]  a0_in;
	input   aclr;
	output   [38:0]  almostlog;
	input   clk_en;
	input   clock;
	input   [24:0]  y0_in;
	output   [25:0]  z;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [38:0]   wire_add0_1_result;
	wire  [38:0]   wire_add0_2_result;
	wire  [38:0]   wire_add0_3_result;
	wire  [30:0]   wire_add1_1_result;
	wire  [28:0]   wire_add1_2_result;
	wire  [25:0]   wire_add1_3_result;
	wire  [30:0]   wire_sub1_1_result;
	wire  [28:0]   wire_sub1_2_result;
	wire  [25:0]   wire_sub1_3_result;
	reg	[4:0]	A_pipe0_reg0;
	reg	[4:0]	A_pipe0_reg1;
	reg	[4:0]	A_pipe0_reg2;
	reg	[3:0]	A_wire1_reg0;
	reg	[3:0]	A_wire2_reg0;
	reg	[3:0]	A_wire3_reg0;
	reg	[20:0]	B_wire1_reg0;
	reg	[26:0]	B_wire2_reg0;
	reg	[24:0]	B_wire3_reg0;
	reg	[30:0]	P_pipe0_reg0;
	reg	[28:0]	P_pipe1_reg0;
	reg	[28:0]	P_pipe2_reg0;
	reg	[22:0]	P_pipe3_reg0;
	reg	[38:0]	S_pipe22_reg0;
	reg	[38:0]	S_pipe23_reg0;
	reg	[38:0]	S_pipe24_reg0;
	reg	[38:0]	S_wire1_reg0;
	reg	[38:0]	S_wire2_reg0;
	reg	[38:0]	S_wire3_reg0;
	reg	[24:0]	Z_wire1_reg0;
	reg	[30:0]	Z_wire2_reg0;
	reg	[28:0]	Z_wire3_reg0;
	wire  [30:0]   wire_mult0_result;
	wire  [28:0]   wire_mult1_result;
	wire  [28:0]   wire_mult2_result;
	wire  [22:0]   wire_mult3_result;
	wire  [5:0]   wire_InvTable0_result;
	wire  [38:0]   wire_LogTable0_result;
	wire  [34:0]   wire_LogTable1_result;
	wire  [31:0]   wire_LogTable2_result;
	wire  [28:0]   wire_LogTable3_result;
	wire  [3:0]  A1_is_all_zero;
	wire  [3:0]  A1_is_not_zero;
	wire  [3:0]  A_all_zero2;
	wire  [3:0]  A_all_zero3;
	wire  [4:0]  A_pipe0;
	wire  [3:0]  A_pipe11;
	wire  [3:0]  A_pipe12;
	wire  [3:0]  A_pipe13;
	wire  [4:0]  A_wire0;
	wire  [3:0]  A_wire1;
	wire  [3:0]  A_wire2;
	wire  [3:0]  A_wire3;
	wire  [30:0]  B_pad_wire1;
	wire  [28:0]  B_pad_wire2;
	wire  [25:0]  B_pad_wire3;
	wire  [20:0]  B_pipe1;
	wire  [26:0]  B_pipe2;
	wire  [24:0]  B_pipe3;
	wire  [20:0]  B_wire1;
	wire  [26:0]  B_wire2;
	wire  [24:0]  B_wire3;
	wire  [30:0]  epsZ_pad_wire1;
	wire  [28:0]  epsZ_pad_wire2;
	wire  [25:0]  epsZ_pad_wire3;
	wire  [30:0]  epsZ_wire1;
	wire  [39:0]  epsZ_wire2;
	wire  [40:0]  epsZ_wire3;
	wire  [5:0]  InvA0;
	wire  [38:0]  L_wire0;
	wire  [34:0]  L_wire1;
	wire  [31:0]  L_wire2;
	wire  [28:0]  L_wire3;
	wire  [30:0]  mux0_data0;
	wire  [30:0]  mux0_data1;
	wire  [30:0]  P_pad_wire1;
	wire  [28:0]  P_pad_wire2;
	wire  [25:0]  P_pad_wire3;
	wire  [30:0]  P_pipe0;
	wire  [28:0]  P_pipe1;
	wire  [28:0]  P_pipe2;
	wire  [22:0]  P_pipe3;
	wire  [30:0]  P_wire0;
	wire  [28:0]  P_wire1;
	wire  [28:0]  P_wire2;
	wire  [22:0]  P_wire3;
	wire  [38:0]  S_pipe11;
	wire  [38:0]  S_pipe12;
	wire  [38:0]  S_pipe13;
	wire  [38:0]  S_pipe22;
	wire  [38:0]  S_pipe23;
	wire  [38:0]  S_pipe24;
	wire  [38:0]  S_wire1;
	wire  [38:0]  S_wire2;
	wire  [38:0]  S_wire3;
	wire  [38:0]  S_wire4;
	wire  [24:0]  Z_pipe1;
	wire  [30:0]  Z_pipe2;
	wire  [28:0]  Z_pipe3;
	wire  [24:0]  Z_wire1;
	wire  [30:0]  Z_wire2;
	wire  [28:0]  Z_wire3;
	wire  [25:0]  Z_wire4;
	wire  [24:0]  ZM_wire1;
	wire  [24:0]  ZM_wire2;
	wire  [18:0]  ZM_wire3;

	fplog_altfp_log_csa   add0_1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(S_pipe11),
	.datab({{4{1'b0}}, L_wire1}),
	.result(wire_add0_1_result));
	fplog_altfp_log_csa   add0_2
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(S_pipe12),
	.datab({{7{1'b0}}, L_wire2}),
	.result(wire_add0_2_result));
	fplog_altfp_log_csa   add0_3
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(S_pipe13),
	.datab({{10{1'b0}}, L_wire3}),
	.result(wire_add0_3_result));
	fplog_altfp_log_csa1   add1_1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(B_pad_wire1),
	.datab(epsZ_pad_wire1),
	.result(wire_add1_1_result));
	fplog_altfp_log_csa1234567   add1_2
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(B_pad_wire2),
	.datab(epsZ_pad_wire2),
	.result(wire_add1_2_result));
	fplog_altfp_log_csa12345678   add1_3
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(B_pad_wire3),
	.datab(epsZ_pad_wire3),
	.result(wire_add1_3_result));
	fplog_altfp_log_csa123456789   sub1_1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(wire_add1_1_result),
	.datab(P_pad_wire1),
	.result(wire_sub1_1_result));
	fplog_altfp_log_csa12345678910   sub1_2
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(wire_add1_2_result),
	.datab(P_pad_wire2),
	.result(wire_sub1_2_result));
	fplog_altfp_log_csa1234567891011   sub1_3
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(wire_add1_3_result),
	.datab(P_pad_wire3),
	.result(wire_sub1_3_result));
	// synopsys translate_off
	initial
		A_pipe0_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_pipe0_reg0 <= 5'b0;
		else if  (clk_en == 1'b1)   A_pipe0_reg0 <= A_pipe0;
	// synopsys translate_off
	initial
		A_pipe0_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_pipe0_reg1 <= 5'b0;
		else if  (clk_en == 1'b1)   A_pipe0_reg1 <= A_pipe0_reg0;
	// synopsys translate_off
	initial
		A_pipe0_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_pipe0_reg2 <= 5'b0;
		else if  (clk_en == 1'b1)   A_pipe0_reg2 <= A_pipe0_reg1;
	// synopsys translate_off
	initial
		A_wire1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_wire1_reg0 <= 4'b0;
		else if  (clk_en == 1'b1)   A_wire1_reg0 <= A_wire1;
	// synopsys translate_off
	initial
		A_wire2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_wire2_reg0 <= 4'b0;
		else if  (clk_en == 1'b1)   A_wire2_reg0 <= A_wire2;
	// synopsys translate_off
	initial
		A_wire3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) A_wire3_reg0 <= 4'b0;
		else if  (clk_en == 1'b1)   A_wire3_reg0 <= A_wire3;
	// synopsys translate_off
	initial
		B_wire1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) B_wire1_reg0 <= 21'b0;
		else if  (clk_en == 1'b1)   B_wire1_reg0 <= B_wire1;
	// synopsys translate_off
	initial
		B_wire2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) B_wire2_reg0 <= 27'b0;
		else if  (clk_en == 1'b1)   B_wire2_reg0 <= B_wire2;
	// synopsys translate_off
	initial
		B_wire3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) B_wire3_reg0 <= 25'b0;
		else if  (clk_en == 1'b1)   B_wire3_reg0 <= B_wire3;
	// synopsys translate_off
	initial
		P_pipe0_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) P_pipe0_reg0 <= 31'b0;
		else if  (clk_en == 1'b1)   P_pipe0_reg0 <= P_pipe0;
	// synopsys translate_off
	initial
		P_pipe1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) P_pipe1_reg0 <= 29'b0;
		else if  (clk_en == 1'b1)   P_pipe1_reg0 <= P_pipe1;
	// synopsys translate_off
	initial
		P_pipe2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) P_pipe2_reg0 <= 29'b0;
		else if  (clk_en == 1'b1)   P_pipe2_reg0 <= P_pipe2;
	// synopsys translate_off
	initial
		P_pipe3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) P_pipe3_reg0 <= 23'b0;
		else if  (clk_en == 1'b1)   P_pipe3_reg0 <= P_pipe3;
	// synopsys translate_off
	initial
		S_pipe22_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_pipe22_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_pipe22_reg0 <= S_pipe22;
	// synopsys translate_off
	initial
		S_pipe23_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_pipe23_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_pipe23_reg0 <= S_pipe23;
	// synopsys translate_off
	initial
		S_pipe24_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_pipe24_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_pipe24_reg0 <= S_pipe24;
	// synopsys translate_off
	initial
		S_wire1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_wire1_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_wire1_reg0 <= S_wire1;
	// synopsys translate_off
	initial
		S_wire2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_wire2_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_wire2_reg0 <= S_wire2;
	// synopsys translate_off
	initial
		S_wire3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) S_wire3_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   S_wire3_reg0 <= S_wire3;
	// synopsys translate_off
	initial
		Z_wire1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Z_wire1_reg0 <= 25'b0;
		else if  (clk_en == 1'b1)   Z_wire1_reg0 <= Z_wire1;
	// synopsys translate_off
	initial
		Z_wire2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Z_wire2_reg0 <= 31'b0;
		else if  (clk_en == 1'b1)   Z_wire2_reg0 <= Z_wire2;
	// synopsys translate_off
	initial
		Z_wire3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Z_wire3_reg0 <= 29'b0;
		else if  (clk_en == 1'b1)   Z_wire3_reg0 <= Z_wire3;
	fplog_mult   mult0
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(InvA0),
	.datab(y0_in),
	.result(wire_mult0_result));
	fplog_mult1   mult1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(A_wire1),
	.datab(ZM_wire1),
	.result(wire_mult1_result));
	fplog_mult1   mult2
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(A_wire2),
	.datab(ZM_wire2),
	.result(wire_mult2_result));
	fplog_mult12   mult3
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(A_wire3),
	.datab(ZM_wire3),
	.result(wire_mult3_result));
	fplog_mux   InvTable0
	( 
	.data({6'b100001, {2{6'b100010}}, {2{6'b100011}}, {2{6'b100100}}, 6'b100101, {2{6'b100110}}, 6'b100111, 6'b101000, {2{6'b101001}}, 6'b101010, 6'b101011, 6'b010110, {2{6'b010111}}, {2{6'b011000}}, {2{6'b011001}}, 6'b011010, {2{6'b011011}}, 6'b011100, 6'b011101, 6'b011110, 6'b011111, {2{6'b100000}}}),
	.result(wire_InvTable0_result),
	.sel(a0_in));
	fplog_mux1   LogTable0
	( 
	.data({39'b111110000001111101011001001111000110001, {2{39'b111100000111101011100111100111111111100}}, {2{39'b111010010000111100101101011101010001110}}, {2{39'b111000011101100011111000100100011101011}}, 39'b110110101101010101011010000011111100001, {2{39'b110101000000000110011111000111101011001}}, 39'b110011010101101101001010110001100001100, 39'b110001101110000000010000011100001100110, {2{39'b110000001000110111001111001001010100010}}, 39'b101110100110001010001101010100010101001, 39'b101101000101110001110101000101000111110, 39'b010111111110101111101000111011110110000, {2{39'b010101001000101010111000000111001110001}}, {2{39'b010010011010010110001000010001001101001}}, {2{39'b001111110011001000111000110110010110011}}, 39'b001101010010011111011010011110010001010, {2{39'b001010110111111010000000110101101010100}}, 39'b001000100010111100011101000001000100111, 39'b000110010011001101011110010111010101100, 39'b000100001000010110011000101101011001111, 39'b000010000010000010101110110001001111001, {2{{39{1'b0}}}}}),
	.result(wire_LogTable0_result),
	.sel(A_wire0));
	fplog_mux12   LogTable1
	( 
	.data({35'b11100110010110111001111001101110111, 35'b11010101011101111001011010000111110, 35'b11000100101001010101000010100100111, 35'b10110011111001001010011110010110101, 35'b10100011001101010111011010100001011, 35'b10010010100101111001100101111100011, 35'b10000010000010101110110001001111001, 35'b01110001100011110100101110110000010, 35'b01101001010101111101010100100011000, 35'b01011000111101011000010111100001101, 35'b01001000101000111110110001111111101, 35'b00111000011000101110011100001001100, 35'b00101000001100100101001111110010110, 35'b00011000000100100001001000010100010, 35'b00001000000000100000000010101010111, {35{1'b0}}}),
	.result(wire_LogTable1_result),
	.sel(A_pipe11));
	fplog_mux123   LogTable2
	( 
	.data({32'b11101000110100110011111101101000, 32'b11011000101101110000111000001100, 32'b11001000100111001110001110000010, 32'b10111000100001001011111101000110, 32'b10101000011011101010000011010111, 32'b10011000010110101000011110110010, 32'b10001000010010000111001101010110, 32'b01111000001110000110001101000000, 32'b01101000001010100101011011110000, 32'b01011000000111100100110111100100, 32'b01001000000101000100011110011011, 32'b00111000000011000100001110010011, 32'b00101000000001100100000101001101, 32'b00011000000000100100000001001000, 32'b00001000000000000100000000000010, {32{1'b0}}}),
	.result(wire_LogTable2_result),
	.sel(A_pipe12));
	fplog_mux1234   LogTable3
	( 
	.data({29'b11101000000110100100101111111, 29'b11011000000101101100101100110, 29'b11001000000100111000101010001, 29'b10111000000100001000100111111, 29'b10101000000011011100100110000, 29'b10011000000010110100100100011, 29'b10001000000010010000100011001, 29'b01111000000001110000100010001, 29'b01101000000001010100100001011, 29'b01011000000000111100100000110, 29'b01001000000000101000100000011, 29'b00111000000000011000100000001, 29'b00101000000000001100100000000, 29'b00011000000000000100100000000, 29'b00001000000000000000100000000, {29{1'b0}}}),
	.result(wire_LogTable3_result),
	.sel(A_pipe13));
	assign
		A1_is_all_zero = {(A_pipe11[3] | A1_is_all_zero[2]), (A_pipe11[2] | A1_is_all_zero[1]), (A_pipe11[1] | A1_is_all_zero[0]), A_pipe11[0]},
		A1_is_not_zero = {((~ A_pipe11[3]) & A1_is_not_zero[2]), (A_pipe11[2] | A1_is_not_zero[1]), (A_pipe11[1] | A1_is_not_zero[0]), A_pipe11[0]},
		A_all_zero2 = {((~ A_pipe12[3]) & A_all_zero2[2]), ((~ A_pipe12[2]) & A_all_zero2[1]), ((~ A_pipe12[1]) & A_all_zero2[0]), (~ A_pipe12[0])},
		A_all_zero3 = {((~ A_pipe13[3]) & A_all_zero3[2]), ((~ A_pipe13[2]) & A_all_zero3[1]), ((~ A_pipe13[1]) & A_all_zero3[0]), (~ A_pipe13[0])},
		A_pipe0 = a0_in,
		A_pipe11 = A_wire1_reg0,
		A_pipe12 = A_wire2_reg0,
		A_pipe13 = A_wire3_reg0,
		A_wire0 = A_pipe0_reg2,
		A_wire1 = Z_wire1[24:21],
		A_wire2 = Z_wire2[30:27],
		A_wire3 = Z_wire3[28:25],
		almostlog = S_wire4,
		B_pad_wire1 = {1'b0, B_pipe1, {9{1'b0}}},
		B_pad_wire2 = {1'b0, B_pipe2, 1'b0},
		B_pad_wire3 = {1'b0, B_pipe3},
		B_pipe1 = B_wire1_reg0,
		B_pipe2 = B_wire2_reg0,
		B_pipe3 = B_wire3_reg0,
		B_wire1 = Z_wire1[20:0],
		B_wire2 = Z_wire2[26:0],
		B_wire3 = Z_wire3[24:0],
		epsZ_pad_wire1 = epsZ_wire1[30:0],
		epsZ_pad_wire2 = epsZ_wire2[39:11],
		epsZ_pad_wire3 = epsZ_wire3[40:15],
		epsZ_wire1 = ({31{A1_is_all_zero[3]}} & (({31{(~ A1_is_not_zero[3])}} & mux0_data0) | ({31{A1_is_not_zero[3]}} & mux0_data1))),
		epsZ_wire2 = {1'b0, (~ A_all_zero2[3]), {7{1'b0}}, ({31{(~ A_all_zero2[3])}} & Z_pipe2)},
		epsZ_wire3 = {1'b0, (~ A_all_zero3[3]), {10{1'b0}}, ({29{(~ A_all_zero3[3])}} & Z_pipe3)},
		InvA0 = wire_InvTable0_result,
		L_wire0 = wire_LogTable0_result,
		L_wire1 = wire_LogTable1_result,
		L_wire2 = wire_LogTable2_result,
		L_wire3 = wire_LogTable3_result,
		mux0_data0 = {1'b1, {4{1'b0}}, Z_pipe1, 1'b0},
		mux0_data1 = {1'b0, 1'b1, {4{1'b0}}, Z_pipe1},
		P_pad_wire1 = {1'b0, P_wire1, 1'b0},
		P_pad_wire2 = {{4{1'b0}}, P_wire2[28:4]},
		P_pad_wire3 = {{7{1'b0}}, P_wire3[22:4]},
		P_pipe0 = wire_mult0_result,
		P_pipe1 = wire_mult1_result,
		P_pipe2 = wire_mult2_result,
		P_pipe3 = wire_mult3_result,
		P_wire0 = P_pipe0_reg0,
		P_wire1 = P_pipe1_reg0,
		P_wire2 = P_pipe2_reg0,
		P_wire3 = P_pipe3_reg0,
		S_pipe11 = S_wire1_reg0,
		S_pipe12 = S_wire2_reg0,
		S_pipe13 = S_wire3_reg0,
		S_pipe22 = wire_add0_1_result,
		S_pipe23 = wire_add0_2_result,
		S_pipe24 = wire_add0_3_result,
		S_wire1 = L_wire0,
		S_wire2 = S_pipe22_reg0,
		S_wire3 = S_pipe23_reg0,
		S_wire4 = S_pipe24_reg0,
		z = Z_wire4,
		Z_pipe1 = Z_wire1_reg0,
		Z_pipe2 = Z_wire2_reg0,
		Z_pipe3 = Z_wire3_reg0,
		Z_wire1 = P_wire0[24:0],
		Z_wire2 = wire_sub1_1_result,
		Z_wire3 = wire_sub1_2_result,
		Z_wire4 = wire_sub1_3_result,
		ZM_wire1 = Z_wire1,
		ZM_wire2 = Z_wire2[30:6],
		ZM_wire3 = Z_wire3[28:10];
endmodule //fplog_range_reduction


//altpriority_encoder LSB_PRIORITY="NO" PIPELINE=1 WIDTH=64 WIDTHAD=6 aclr clk_en clock data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


//altpriority_encoder LSB_PRIORITY="NO" PIPELINE=0 WIDTH=32 WIDTHAD=5 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=16 WIDTHAD=4 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=8 WIDTHAD=3 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=4 WIDTHAD=2 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=2 WIDTHAD=1 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder12345
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [0:0]  q;


	assign
		q = {data[1]};
endmodule //fplog_altpriority_encoder12345


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=2 WIDTHAD=1 data q zero
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder123456
	( 
	data,
	q,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [0:0]  q;
	output   zero;


	assign
		q = {data[1]},
		zero = (~ (data[0] | data[1]));
endmodule //fplog_altpriority_encoder123456

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder1234
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [3:0]  data;
	output   [1:0]  q;

	wire  [0:0]   wire_altpriority_encoder125_q;
	wire  [0:0]   wire_altpriority_encoder126_q;
	wire  wire_altpriority_encoder126_zero;

	fplog_altpriority_encoder12345   altpriority_encoder125
	( 
	.data(data[1:0]),
	.q(wire_altpriority_encoder125_q));
	fplog_altpriority_encoder123456   altpriority_encoder126
	( 
	.data(data[3:2]),
	.q(wire_altpriority_encoder126_q),
	.zero(wire_altpriority_encoder126_zero));
	assign
		q = {(~ wire_altpriority_encoder126_zero), ((wire_altpriority_encoder126_zero & wire_altpriority_encoder125_q) | ((~ wire_altpriority_encoder126_zero) & wire_altpriority_encoder126_q))};
endmodule //fplog_altpriority_encoder1234


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=4 WIDTHAD=2 data q zero
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder1234567
	( 
	data,
	q,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   [3:0]  data;
	output   [1:0]  q;
	output   zero;

	wire  [0:0]   wire_altpriority_encoder127_q;
	wire  wire_altpriority_encoder127_zero;
	wire  [0:0]   wire_altpriority_encoder128_q;
	wire  wire_altpriority_encoder128_zero;

	fplog_altpriority_encoder123456   altpriority_encoder127
	( 
	.data(data[1:0]),
	.q(wire_altpriority_encoder127_q),
	.zero(wire_altpriority_encoder127_zero));
	fplog_altpriority_encoder123456   altpriority_encoder128
	( 
	.data(data[3:2]),
	.q(wire_altpriority_encoder128_q),
	.zero(wire_altpriority_encoder128_zero));
	assign
		q = {(~ wire_altpriority_encoder128_zero), ((wire_altpriority_encoder128_zero & wire_altpriority_encoder127_q) | ((~ wire_altpriority_encoder128_zero) & wire_altpriority_encoder128_q))},
		zero = (wire_altpriority_encoder127_zero & wire_altpriority_encoder128_zero);
endmodule //fplog_altpriority_encoder1234567

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder123
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  data;
	output   [2:0]  q;

	wire  [1:0]   wire_altpriority_encoder123_q;
	wire  [1:0]   wire_altpriority_encoder124_q;
	wire  wire_altpriority_encoder124_zero;

	fplog_altpriority_encoder1234   altpriority_encoder123
	( 
	.data(data[3:0]),
	.q(wire_altpriority_encoder123_q));
	fplog_altpriority_encoder1234567   altpriority_encoder124
	( 
	.data(data[7:4]),
	.q(wire_altpriority_encoder124_q),
	.zero(wire_altpriority_encoder124_zero));
	assign
		q = {(~ wire_altpriority_encoder124_zero), (({2{wire_altpriority_encoder124_zero}} & wire_altpriority_encoder123_q) | ({2{(~ wire_altpriority_encoder124_zero)}} & wire_altpriority_encoder124_q))};
endmodule //fplog_altpriority_encoder123


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=8 WIDTHAD=3 data q zero
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder12345678
	( 
	data,
	q,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  data;
	output   [2:0]  q;
	output   zero;

	wire  [1:0]   wire_altpriority_encoder129_q;
	wire  wire_altpriority_encoder129_zero;
	wire  [1:0]   wire_altpriority_encoder130_q;
	wire  wire_altpriority_encoder130_zero;

	fplog_altpriority_encoder1234567   altpriority_encoder129
	( 
	.data(data[3:0]),
	.q(wire_altpriority_encoder129_q),
	.zero(wire_altpriority_encoder129_zero));
	fplog_altpriority_encoder1234567   altpriority_encoder130
	( 
	.data(data[7:4]),
	.q(wire_altpriority_encoder130_q),
	.zero(wire_altpriority_encoder130_zero));
	assign
		q = {(~ wire_altpriority_encoder130_zero), (({2{wire_altpriority_encoder130_zero}} & wire_altpriority_encoder129_q) | ({2{(~ wire_altpriority_encoder130_zero)}} & wire_altpriority_encoder130_q))},
		zero = (wire_altpriority_encoder129_zero & wire_altpriority_encoder130_zero);
endmodule //fplog_altpriority_encoder12345678

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder12
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	output   [3:0]  q;

	wire  [2:0]   wire_altpriority_encoder121_q;
	wire  [2:0]   wire_altpriority_encoder122_q;
	wire  wire_altpriority_encoder122_zero;

	fplog_altpriority_encoder123   altpriority_encoder121
	( 
	.data(data[7:0]),
	.q(wire_altpriority_encoder121_q));
	fplog_altpriority_encoder12345678   altpriority_encoder122
	( 
	.data(data[15:8]),
	.q(wire_altpriority_encoder122_q),
	.zero(wire_altpriority_encoder122_zero));
	assign
		q = {(~ wire_altpriority_encoder122_zero), (({3{wire_altpriority_encoder122_zero}} & wire_altpriority_encoder121_q) | ({3{(~ wire_altpriority_encoder122_zero)}} & wire_altpriority_encoder122_q))};
endmodule //fplog_altpriority_encoder12


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=16 WIDTHAD=4 data q zero
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder123456789
	( 
	data,
	q,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	output   [3:0]  q;
	output   zero;

	wire  [2:0]   wire_altpriority_encoder131_q;
	wire  wire_altpriority_encoder131_zero;
	wire  [2:0]   wire_altpriority_encoder132_q;
	wire  wire_altpriority_encoder132_zero;

	fplog_altpriority_encoder12345678   altpriority_encoder131
	( 
	.data(data[7:0]),
	.q(wire_altpriority_encoder131_q),
	.zero(wire_altpriority_encoder131_zero));
	fplog_altpriority_encoder12345678   altpriority_encoder132
	( 
	.data(data[15:8]),
	.q(wire_altpriority_encoder132_q),
	.zero(wire_altpriority_encoder132_zero));
	assign
		q = {(~ wire_altpriority_encoder132_zero), (({3{wire_altpriority_encoder132_zero}} & wire_altpriority_encoder131_q) | ({3{(~ wire_altpriority_encoder132_zero)}} & wire_altpriority_encoder132_q))},
		zero = (wire_altpriority_encoder131_zero & wire_altpriority_encoder132_zero);
endmodule //fplog_altpriority_encoder123456789

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder1
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  data;
	output   [4:0]  q;

	wire  [3:0]   wire_altpriority_encoder119_q;
	wire  [3:0]   wire_altpriority_encoder120_q;
	wire  wire_altpriority_encoder120_zero;

	fplog_altpriority_encoder12   altpriority_encoder119
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder119_q));
	fplog_altpriority_encoder123456789   altpriority_encoder120
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder120_q),
	.zero(wire_altpriority_encoder120_zero));
	assign
		q = {(~ wire_altpriority_encoder120_zero), (({4{wire_altpriority_encoder120_zero}} & wire_altpriority_encoder119_q) | ({4{(~ wire_altpriority_encoder120_zero)}} & wire_altpriority_encoder120_q))};
endmodule //fplog_altpriority_encoder1


//altpriority_encoder LSB_PRIORITY="NO" PIPELINE=0 WIDTH=32 WIDTHAD=5 data q zero
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder12345678910
	( 
	data,
	q,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  data;
	output   [4:0]  q;
	output   zero;

	wire  [3:0]   wire_altpriority_encoder133_q;
	wire  wire_altpriority_encoder133_zero;
	wire  [3:0]   wire_altpriority_encoder134_q;
	wire  wire_altpriority_encoder134_zero;

	fplog_altpriority_encoder123456789   altpriority_encoder133
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder133_q),
	.zero(wire_altpriority_encoder133_zero));
	fplog_altpriority_encoder123456789   altpriority_encoder134
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder134_q),
	.zero(wire_altpriority_encoder134_zero));
	assign
		q = {(~ wire_altpriority_encoder134_zero), (({4{wire_altpriority_encoder134_zero}} & wire_altpriority_encoder133_q) | ({4{(~ wire_altpriority_encoder134_zero)}} & wire_altpriority_encoder134_q))},
		zero = (wire_altpriority_encoder133_zero & wire_altpriority_encoder134_zero);
endmodule //fplog_altpriority_encoder12345678910

//synthesis_resources = reg 6 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder
	( 
	aclr,
	clk_en,
	clock,
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clk_en;
	input   clock;
	input   [63:0]  data;
	output   [5:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clk_en;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [4:0]   wire_altpriority_encoder117_q;
	wire  [4:0]   wire_altpriority_encoder118_q;
	wire  wire_altpriority_encoder118_zero;
	reg	[5:0]	pipeline_q_dffe;
	wire  [5:0]  tmp_q_wire;

	fplog_altpriority_encoder1   altpriority_encoder117
	( 
	.data(data[31:0]),
	.q(wire_altpriority_encoder117_q));
	fplog_altpriority_encoder12345678910   altpriority_encoder118
	( 
	.data(data[63:32]),
	.q(wire_altpriority_encoder118_q),
	.zero(wire_altpriority_encoder118_zero));
	// synopsys translate_off
	initial
		pipeline_q_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) pipeline_q_dffe <= 6'b0;
		else if  (clk_en == 1'b1)   pipeline_q_dffe <= tmp_q_wire;
	assign
		q = pipeline_q_dffe,
		tmp_q_wire = {(~ wire_altpriority_encoder118_zero), (({5{wire_altpriority_encoder118_zero}} & wire_altpriority_encoder117_q) | ({5{(~ wire_altpriority_encoder118_zero)}} & wire_altpriority_encoder118_q))};
endmodule //fplog_altpriority_encoder


//altpriority_encoder LSB_PRIORITY="NO" WIDTH=32 WIDTHAD=5 data q
//VERSION_BEGIN 16.1 cbx_altpriority_encoder 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altpriority_encoder1234567891011
	( 
	data,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  data;
	output   [4:0]  q;

	wire  [3:0]   wire_altpriority_encoder135_q;
	wire  [3:0]   wire_altpriority_encoder136_q;
	wire  wire_altpriority_encoder136_zero;

	fplog_altpriority_encoder12   altpriority_encoder135
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder135_q));
	fplog_altpriority_encoder123456789   altpriority_encoder136
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder136_q),
	.zero(wire_altpriority_encoder136_zero));
	assign
		q = {(~ wire_altpriority_encoder136_zero), (({4{wire_altpriority_encoder136_zero}} & wire_altpriority_encoder135_q) | ({4{(~ wire_altpriority_encoder136_zero)}} & wire_altpriority_encoder136_q))};
endmodule //fplog_altpriority_encoder1234567891011


//altsquare DATA_WIDTH=13 DEVICE_FAMILY="Cyclone V" PIPELINE=1 REPRESENTATION="UNSIGNED" RESULT_ALIGNMENT="MSB" RESULT_WIDTH=14 aclr clock data ena result
//VERSION_BEGIN 16.1 cbx_altsquare 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=24 dataa datab datac result
//VERSION_BEGIN 16.1 cbx_mgl 2016:10:24:15:05:03:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=16 dataa datab datac result
//VERSION_BEGIN 16.1 cbx_mgl 2016:10:24:15:05:03:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=8 dataa datab datac result
//VERSION_BEGIN 16.1 cbx_mgl 2016:10:24:15:05:03:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 96 reg 64 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altsquare
	( 
	aclr,
	clock,
	data,
	ena,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   [12:0]  data;
	input   ena;
	output   [13:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clock;
	tri1   ena;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[23:0]	wire_add201_result;
	wire	[15:0]	wire_add206_result;
	wire	[7:0]	wire_add211_result;
	reg	[0:0]	dffe137a0;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe138;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe139;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe140;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe141;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe142;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe143;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe144;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe145;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe146;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe147;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe148;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe149;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe150;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe151;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe152;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe153;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe154;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe155;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe156;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe157;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe158;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe159;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe160;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe161;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe162;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe163;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe164;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe165;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe166;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe167;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe168;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe169;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe170;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe171;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe172;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe173;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe174;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe175;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe176;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe177;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe178;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe179;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe180;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe181;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe182;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe183;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe184;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe185;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe186;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe187;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe188;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe189;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe190;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe191;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe192;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe193;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe194;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe195;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe196;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe197;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe198;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe199;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe200;
	wire  [23:0]   wire_sft202a_in;
	wire  [23:0]   wire_sft202a_out;
	wire  [23:0]   wire_sft203a_in;
	wire  [23:0]   wire_sft203a_out;
	wire  [23:0]   wire_sft204a_in;
	wire  [23:0]   wire_sft204a_out;
	wire  [23:0]   wire_sft205a_in;
	wire  [23:0]   wire_sft205a_out;
	wire  [15:0]   wire_sft207a_in;
	wire  [15:0]   wire_sft207a_out;
	wire  [15:0]   wire_sft208a_in;
	wire  [15:0]   wire_sft208a_out;
	wire  [15:0]   wire_sft209a_in;
	wire  [15:0]   wire_sft209a_out;
	wire  [15:0]   wire_sft210a_in;
	wire  [15:0]   wire_sft210a_out;
	wire  [7:0]   wire_sft212a_in;
	wire  [7:0]   wire_sft212a_out;
	wire  [7:0]   wire_sft213a_in;
	wire  [7:0]   wire_sft213a_out;
	wire  [7:0]   wire_sft214a_in;
	wire  [7:0]   wire_sft214a_out;
	wire  [7:0]   wire_sft215a_in;
	wire  [7:0]   wire_sft215a_out;
	wire  [25:0]  w7781w;
	wire  [0:0]  w7792w;
	wire  [0:0]  w7796w;
	wire  [0:0]  w7800w;
	wire  [0:0]  w7805w;
	wire  [0:0]  w7809w;
	wire  [0:0]  w7813w;
	wire  [0:0]  w7816w;
	wire  [0:0]  w7821w;
	wire  [0:0]  w7825w;
	wire  [0:0]  w7829w;
	wire  [0:0]  w7832w;
	wire  [0:0]  w7835w;
	wire  [0:0]  w7840w;
	wire  [0:0]  w7844w;
	wire  [0:0]  w7848w;
	wire  [0:0]  w7851w;
	wire  [0:0]  w7854w;
	wire  [0:0]  w7857w;
	wire  [0:0]  w7862w;
	wire  [0:0]  w7866w;
	wire  [0:0]  w7870w;
	wire  [0:0]  w7874w;
	wire  [0:0]  w7877w;
	wire  [0:0]  w7880w;
	wire  [0:0]  w7883w;
	wire  [0:0]  w7888w;
	wire  [0:0]  w7892w;
	wire  [0:0]  w7896w;
	wire  [0:0]  w7900w;
	wire  [0:0]  w7904w;
	wire  [0:0]  w7907w;
	wire  [0:0]  w7910w;
	wire  [0:0]  w7913w;
	wire  [0:0]  w7918w;
	wire  [0:0]  w7922w;
	wire  [0:0]  w7926w;
	wire  [0:0]  w7929w;
	wire  [0:0]  w7933w;
	wire  [0:0]  w7937w;
	wire  [0:0]  w7940w;
	wire  [0:0]  w7943w;
	wire  [0:0]  w7946w;
	wire  [0:0]  w7951w;
	wire  [0:0]  w7955w;
	wire  [0:0]  w7959w;
	wire  [0:0]  w7962w;
	wire  [0:0]  w7965w;
	wire  [0:0]  w7969w;
	wire  [0:0]  w7973w;
	wire  [0:0]  w7976w;
	wire  [0:0]  w7979w;
	wire  [0:0]  w7982w;
	wire  [0:0]  w7987w;
	wire  [0:0]  w7991w;
	wire  [0:0]  w7995w;
	wire  [0:0]  w7999w;
	wire  [0:0]  w8002w;
	wire  [0:0]  w8005w;
	wire  [0:0]  w8009w;
	wire  [0:0]  w8013w;
	wire  [0:0]  w8016w;
	wire  [0:0]  w8019w;
	wire  [0:0]  w8022w;
	wire  [0:0]  w8027w;
	wire  [0:0]  w8031w;
	wire  [0:0]  w8035w;
	wire  [0:0]  w8039w;
	wire  [0:0]  w8043w;
	wire  [0:0]  w8046w;
	wire  [0:0]  w8049w;
	wire  [0:0]  w8053w;
	wire  [0:0]  w8057w;
	wire  [0:0]  w8060w;
	wire  [0:0]  w8063w;
	wire  [0:0]  w8066w;
	wire  [0:0]  w8071w;
	wire  [0:0]  w8075w;
	wire  [0:0]  w8079w;
	wire  [0:0]  w8082w;
	wire  [0:0]  w8086w;
	wire  [0:0]  w8090w;
	wire  [0:0]  w8093w;
	wire  [0:0]  w8096w;
	wire  [0:0]  w8100w;
	wire  [0:0]  w8104w;
	wire  [0:0]  w8107w;
	wire  [0:0]  w8110w;
	wire  [0:0]  w8113w;
	wire  [0:0]  w8118w;
	wire  [0:0]  w8122w;
	wire  w8131w;
	wire  [26:0]  w8315w;

	assign
		wire_add201_result = wire_sft202a_out + wire_sft203a_out + wire_sft204a_out;
	assign
		wire_add206_result = wire_sft207a_out + wire_sft208a_out + wire_sft209a_out;
	assign
		wire_add211_result = wire_sft212a_out + wire_sft213a_out + wire_sft214a_out;
	// synopsys translate_off
	initial
		dffe137a0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe137a0 <= 1'b0;
		else if  (ena == 1'b1)   dffe137a0 <= data[0];
	// synopsys translate_off
	initial
		dffe138 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe138 <= 1'b0;
		else if  (ena == 1'b1)   dffe138 <= w7792w[0];
	// synopsys translate_off
	initial
		dffe139 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe139 <= 1'b0;
		else if  (ena == 1'b1)   dffe139 <= w7796w[0];
	// synopsys translate_off
	initial
		dffe140 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe140 <= 1'b0;
		else if  (ena == 1'b1)   dffe140 <= w7800w[0];
	// synopsys translate_off
	initial
		dffe141 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe141 <= 1'b0;
		else if  (ena == 1'b1)   dffe141 <= w7805w[0];
	// synopsys translate_off
	initial
		dffe142 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe142 <= 1'b0;
		else if  (ena == 1'b1)   dffe142 <= w7813w[0];
	// synopsys translate_off
	initial
		dffe143 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe143 <= 1'b0;
		else if  (ena == 1'b1)   dffe143 <= w7809w[0];
	// synopsys translate_off
	initial
		dffe144 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe144 <= 1'b0;
		else if  (ena == 1'b1)   dffe144 <= w7816w[0];
	// synopsys translate_off
	initial
		dffe145 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe145 <= 1'b0;
		else if  (ena == 1'b1)   dffe145 <= w7829w[0];
	// synopsys translate_off
	initial
		dffe146 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe146 <= 1'b0;
		else if  (ena == 1'b1)   dffe146 <= w7821w[0];
	// synopsys translate_off
	initial
		dffe147 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe147 <= 1'b0;
		else if  (ena == 1'b1)   dffe147 <= w7832w[0];
	// synopsys translate_off
	initial
		dffe148 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe148 <= 1'b0;
		else if  (ena == 1'b1)   dffe148 <= w7848w[0];
	// synopsys translate_off
	initial
		dffe149 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe149 <= 1'b0;
		else if  (ena == 1'b1)   dffe149 <= w7825w[0];
	// synopsys translate_off
	initial
		dffe150 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe150 <= 1'b0;
		else if  (ena == 1'b1)   dffe150 <= w7835w[0];
	// synopsys translate_off
	initial
		dffe151 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe151 <= 1'b0;
		else if  (ena == 1'b1)   dffe151 <= wire_sft210a_out[0];
	// synopsys translate_off
	initial
		dffe152 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe152 <= 1'b0;
		else if  (ena == 1'b1)   dffe152 <= w7840w[0];
	// synopsys translate_off
	initial
		dffe153 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe153 <= 1'b0;
		else if  (ena == 1'b1)   dffe153 <= w7854w[0];
	// synopsys translate_off
	initial
		dffe154 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe154 <= 1'b0;
		else if  (ena == 1'b1)   dffe154 <= wire_sft210a_out[1];
	// synopsys translate_off
	initial
		dffe155 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe155 <= 1'b0;
		else if  (ena == 1'b1)   dffe155 <= w7844w[0];
	// synopsys translate_off
	initial
		dffe156 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe156 <= 1'b0;
		else if  (ena == 1'b1)   dffe156 <= w7857w[0];
	// synopsys translate_off
	initial
		dffe157 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe157 <= 1'b0;
		else if  (ena == 1'b1)   dffe157 <= wire_sft210a_out[2];
	// synopsys translate_off
	initial
		dffe158 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe158 <= 1'b0;
		else if  (ena == 1'b1)   dffe158 <= w7862w[0];
	// synopsys translate_off
	initial
		dffe159 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe159 <= 1'b0;
		else if  (ena == 1'b1)   dffe159 <= w7880w[0];
	// synopsys translate_off
	initial
		dffe160 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe160 <= 1'b0;
		else if  (ena == 1'b1)   dffe160 <= wire_sft210a_out[3];
	// synopsys translate_off
	initial
		dffe161 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe161 <= 1'b0;
		else if  (ena == 1'b1)   dffe161 <= w7866w[0];
	// synopsys translate_off
	initial
		dffe162 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe162 <= 1'b0;
		else if  (ena == 1'b1)   dffe162 <= wire_sft210a_out[4];
	// synopsys translate_off
	initial
		dffe163 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe163 <= 1'b0;
		else if  (ena == 1'b1)   dffe163 <= wire_sft215a_out[0];
	// synopsys translate_off
	initial
		dffe164 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe164 <= 1'b0;
		else if  (ena == 1'b1)   dffe164 <= w7888w[0];
	// synopsys translate_off
	initial
		dffe165 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe165 <= 1'b0;
		else if  (ena == 1'b1)   dffe165 <= wire_sft210a_out[5];
	// synopsys translate_off
	initial
		dffe166 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe166 <= 1'b0;
		else if  (ena == 1'b1)   dffe166 <= wire_sft215a_out[1];
	// synopsys translate_off
	initial
		dffe167 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe167 <= 1'b0;
		else if  (ena == 1'b1)   dffe167 <= w7892w[0];
	// synopsys translate_off
	initial
		dffe168 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe168 <= 1'b0;
		else if  (ena == 1'b1)   dffe168 <= wire_sft210a_out[6];
	// synopsys translate_off
	initial
		dffe169 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe169 <= 1'b0;
		else if  (ena == 1'b1)   dffe169 <= wire_sft215a_out[2];
	// synopsys translate_off
	initial
		dffe170 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe170 <= 1'b0;
		else if  (ena == 1'b1)   dffe170 <= w7918w[0];
	// synopsys translate_off
	initial
		dffe171 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe171 <= 1'b0;
		else if  (ena == 1'b1)   dffe171 <= wire_sft210a_out[7];
	// synopsys translate_off
	initial
		dffe172 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe172 <= 1'b0;
		else if  (ena == 1'b1)   dffe172 <= wire_sft215a_out[3];
	// synopsys translate_off
	initial
		dffe173 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe173 <= 1'b0;
		else if  (ena == 1'b1)   dffe173 <= w7922w[0];
	// synopsys translate_off
	initial
		dffe174 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe174 <= 1'b0;
		else if  (ena == 1'b1)   dffe174 <= wire_sft210a_out[8];
	// synopsys translate_off
	initial
		dffe175 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe175 <= 1'b0;
		else if  (ena == 1'b1)   dffe175 <= wire_sft215a_out[4];
	// synopsys translate_off
	initial
		dffe176 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe176 <= 1'b0;
		else if  (ena == 1'b1)   dffe176 <= w7979w[0];
	// synopsys translate_off
	initial
		dffe177 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe177 <= 1'b0;
		else if  (ena == 1'b1)   dffe177 <= wire_sft210a_out[9];
	// synopsys translate_off
	initial
		dffe178 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe178 <= 1'b0;
		else if  (ena == 1'b1)   dffe178 <= wire_sft215a_out[5];
	// synopsys translate_off
	initial
		dffe179 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe179 <= 1'b0;
		else if  (ena == 1'b1)   dffe179 <= w7982w[0];
	// synopsys translate_off
	initial
		dffe180 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe180 <= 1'b0;
		else if  (ena == 1'b1)   dffe180 <= wire_sft210a_out[10];
	// synopsys translate_off
	initial
		dffe181 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe181 <= 1'b0;
		else if  (ena == 1'b1)   dffe181 <= wire_sft215a_out[6];
	// synopsys translate_off
	initial
		dffe182 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe182 <= 1'b0;
		else if  (ena == 1'b1)   dffe182 <= w8019w[0];
	// synopsys translate_off
	initial
		dffe183 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe183 <= 1'b0;
		else if  (ena == 1'b1)   dffe183 <= wire_sft210a_out[11];
	// synopsys translate_off
	initial
		dffe184 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe184 <= 1'b0;
		else if  (ena == 1'b1)   dffe184 <= wire_sft215a_out[7];
	// synopsys translate_off
	initial
		dffe185 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe185 <= 1'b0;
		else if  (ena == 1'b1)   dffe185 <= w7991w[0];
	// synopsys translate_off
	initial
		dffe186 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe186 <= 1'b0;
		else if  (ena == 1'b1)   dffe186 <= w8022w[0];
	// synopsys translate_off
	initial
		dffe187 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe187 <= 1'b0;
		else if  (ena == 1'b1)   dffe187 <= wire_sft210a_out[12];
	// synopsys translate_off
	initial
		dffe188 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe188 <= 1'b0;
		else if  (ena == 1'b1)   dffe188 <= w8104w[0];
	// synopsys translate_off
	initial
		dffe189 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe189 <= 1'b0;
		else if  (ena == 1'b1)   dffe189 <= w8063w[0];
	// synopsys translate_off
	initial
		dffe190 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe190 <= 1'b0;
		else if  (ena == 1'b1)   dffe190 <= wire_sft210a_out[13];
	// synopsys translate_off
	initial
		dffe191 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe191 <= 1'b0;
		else if  (ena == 1'b1)   dffe191 <= w8107w[0];
	// synopsys translate_off
	initial
		dffe192 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe192 <= 1'b0;
		else if  (ena == 1'b1)   dffe192 <= w8066w[0];
	// synopsys translate_off
	initial
		dffe193 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe193 <= 1'b0;
		else if  (ena == 1'b1)   dffe193 <= wire_sft210a_out[14];
	// synopsys translate_off
	initial
		dffe194 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe194 <= 1'b0;
		else if  (ena == 1'b1)   dffe194 <= w8071w[0];
	// synopsys translate_off
	initial
		dffe195 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe195 <= 1'b0;
		else if  (ena == 1'b1)   dffe195 <= w8110w[0];
	// synopsys translate_off
	initial
		dffe196 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe196 <= 1'b0;
		else if  (ena == 1'b1)   dffe196 <= wire_sft210a_out[15];
	// synopsys translate_off
	initial
		dffe197 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe197 <= 1'b0;
		else if  (ena == 1'b1)   dffe197 <= w8075w[0];
	// synopsys translate_off
	initial
		dffe198 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe198 <= 1'b0;
		else if  (ena == 1'b1)   dffe198 <= w8113w[0];
	// synopsys translate_off
	initial
		dffe199 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe199 <= 1'b0;
		else if  (ena == 1'b1)   dffe199 <= w8118w[0];
	// synopsys translate_off
	initial
		dffe200 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe200 <= 1'b0;
		else if  (ena == 1'b1)   dffe200 <= w8122w[0];
	soft   sft202a_0
	( 
	.in(wire_sft202a_in[0:0]),
	.out(wire_sft202a_out[0:0]));
	soft   sft202a_1
	( 
	.in(wire_sft202a_in[1:1]),
	.out(wire_sft202a_out[1:1]));
	soft   sft202a_2
	( 
	.in(wire_sft202a_in[2:2]),
	.out(wire_sft202a_out[2:2]));
	soft   sft202a_3
	( 
	.in(wire_sft202a_in[3:3]),
	.out(wire_sft202a_out[3:3]));
	soft   sft202a_4
	( 
	.in(wire_sft202a_in[4:4]),
	.out(wire_sft202a_out[4:4]));
	soft   sft202a_5
	( 
	.in(wire_sft202a_in[5:5]),
	.out(wire_sft202a_out[5:5]));
	soft   sft202a_6
	( 
	.in(wire_sft202a_in[6:6]),
	.out(wire_sft202a_out[6:6]));
	soft   sft202a_7
	( 
	.in(wire_sft202a_in[7:7]),
	.out(wire_sft202a_out[7:7]));
	soft   sft202a_8
	( 
	.in(wire_sft202a_in[8:8]),
	.out(wire_sft202a_out[8:8]));
	soft   sft202a_9
	( 
	.in(wire_sft202a_in[9:9]),
	.out(wire_sft202a_out[9:9]));
	soft   sft202a_10
	( 
	.in(wire_sft202a_in[10:10]),
	.out(wire_sft202a_out[10:10]));
	soft   sft202a_11
	( 
	.in(wire_sft202a_in[11:11]),
	.out(wire_sft202a_out[11:11]));
	soft   sft202a_12
	( 
	.in(wire_sft202a_in[12:12]),
	.out(wire_sft202a_out[12:12]));
	soft   sft202a_13
	( 
	.in(wire_sft202a_in[13:13]),
	.out(wire_sft202a_out[13:13]));
	soft   sft202a_14
	( 
	.in(wire_sft202a_in[14:14]),
	.out(wire_sft202a_out[14:14]));
	soft   sft202a_15
	( 
	.in(wire_sft202a_in[15:15]),
	.out(wire_sft202a_out[15:15]));
	soft   sft202a_16
	( 
	.in(wire_sft202a_in[16:16]),
	.out(wire_sft202a_out[16:16]));
	soft   sft202a_17
	( 
	.in(wire_sft202a_in[17:17]),
	.out(wire_sft202a_out[17:17]));
	soft   sft202a_18
	( 
	.in(wire_sft202a_in[18:18]),
	.out(wire_sft202a_out[18:18]));
	soft   sft202a_19
	( 
	.in(wire_sft202a_in[19:19]),
	.out(wire_sft202a_out[19:19]));
	soft   sft202a_20
	( 
	.in(wire_sft202a_in[20:20]),
	.out(wire_sft202a_out[20:20]));
	soft   sft202a_21
	( 
	.in(wire_sft202a_in[21:21]),
	.out(wire_sft202a_out[21:21]));
	soft   sft202a_22
	( 
	.in(wire_sft202a_in[22:22]),
	.out(wire_sft202a_out[22:22]));
	soft   sft202a_23
	( 
	.in(wire_sft202a_in[23:23]),
	.out(wire_sft202a_out[23:23]));
	assign
		wire_sft202a_in = {w8131w, {dffe200, {dffe199, {dffe197, {dffe194, {dffe191, {dffe188, {dffe185, {dffe182, {dffe179, {dffe176, {dffe173, {dffe170, {dffe167, {dffe164, {dffe161, {dffe158, {dffe155, {dffe152, {dffe149, {dffe146, {dffe143, {dffe141, dffe139}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft203a_0
	( 
	.in(wire_sft203a_in[0:0]),
	.out(wire_sft203a_out[0:0]));
	soft   sft203a_1
	( 
	.in(wire_sft203a_in[1:1]),
	.out(wire_sft203a_out[1:1]));
	soft   sft203a_2
	( 
	.in(wire_sft203a_in[2:2]),
	.out(wire_sft203a_out[2:2]));
	soft   sft203a_3
	( 
	.in(wire_sft203a_in[3:3]),
	.out(wire_sft203a_out[3:3]));
	soft   sft203a_4
	( 
	.in(wire_sft203a_in[4:4]),
	.out(wire_sft203a_out[4:4]));
	soft   sft203a_5
	( 
	.in(wire_sft203a_in[5:5]),
	.out(wire_sft203a_out[5:5]));
	soft   sft203a_6
	( 
	.in(wire_sft203a_in[6:6]),
	.out(wire_sft203a_out[6:6]));
	soft   sft203a_7
	( 
	.in(wire_sft203a_in[7:7]),
	.out(wire_sft203a_out[7:7]));
	soft   sft203a_8
	( 
	.in(wire_sft203a_in[8:8]),
	.out(wire_sft203a_out[8:8]));
	soft   sft203a_9
	( 
	.in(wire_sft203a_in[9:9]),
	.out(wire_sft203a_out[9:9]));
	soft   sft203a_10
	( 
	.in(wire_sft203a_in[10:10]),
	.out(wire_sft203a_out[10:10]));
	soft   sft203a_11
	( 
	.in(wire_sft203a_in[11:11]),
	.out(wire_sft203a_out[11:11]));
	soft   sft203a_12
	( 
	.in(wire_sft203a_in[12:12]),
	.out(wire_sft203a_out[12:12]));
	soft   sft203a_13
	( 
	.in(wire_sft203a_in[13:13]),
	.out(wire_sft203a_out[13:13]));
	soft   sft203a_14
	( 
	.in(wire_sft203a_in[14:14]),
	.out(wire_sft203a_out[14:14]));
	soft   sft203a_15
	( 
	.in(wire_sft203a_in[15:15]),
	.out(wire_sft203a_out[15:15]));
	soft   sft203a_16
	( 
	.in(wire_sft203a_in[16:16]),
	.out(wire_sft203a_out[16:16]));
	soft   sft203a_17
	( 
	.in(wire_sft203a_in[17:17]),
	.out(wire_sft203a_out[17:17]));
	soft   sft203a_18
	( 
	.in(wire_sft203a_in[18:18]),
	.out(wire_sft203a_out[18:18]));
	soft   sft203a_19
	( 
	.in(wire_sft203a_in[19:19]),
	.out(wire_sft203a_out[19:19]));
	soft   sft203a_20
	( 
	.in(wire_sft203a_in[20:20]),
	.out(wire_sft203a_out[20:20]));
	soft   sft203a_21
	( 
	.in(wire_sft203a_in[21:21]),
	.out(wire_sft203a_out[21:21]));
	soft   sft203a_22
	( 
	.in(wire_sft203a_in[22:22]),
	.out(wire_sft203a_out[22:22]));
	soft   sft203a_23
	( 
	.in(wire_sft203a_in[23:23]),
	.out(wire_sft203a_out[23:23]));
	assign
		wire_sft203a_in = {w8131w, {w8131w, {w8131w, {dffe198, {dffe195, {dffe192, {dffe189, {dffe186, {dffe183, {dffe180, {dffe177, {dffe174, {dffe171, {dffe168, {dffe165, {dffe162, {dffe159, {dffe156, {dffe153, {dffe150, {dffe147, {dffe144, {dffe142, dffe140}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft204a_0
	( 
	.in(wire_sft204a_in[0:0]),
	.out(wire_sft204a_out[0:0]));
	soft   sft204a_1
	( 
	.in(wire_sft204a_in[1:1]),
	.out(wire_sft204a_out[1:1]));
	soft   sft204a_2
	( 
	.in(wire_sft204a_in[2:2]),
	.out(wire_sft204a_out[2:2]));
	soft   sft204a_3
	( 
	.in(wire_sft204a_in[3:3]),
	.out(wire_sft204a_out[3:3]));
	soft   sft204a_4
	( 
	.in(wire_sft204a_in[4:4]),
	.out(wire_sft204a_out[4:4]));
	soft   sft204a_5
	( 
	.in(wire_sft204a_in[5:5]),
	.out(wire_sft204a_out[5:5]));
	soft   sft204a_6
	( 
	.in(wire_sft204a_in[6:6]),
	.out(wire_sft204a_out[6:6]));
	soft   sft204a_7
	( 
	.in(wire_sft204a_in[7:7]),
	.out(wire_sft204a_out[7:7]));
	soft   sft204a_8
	( 
	.in(wire_sft204a_in[8:8]),
	.out(wire_sft204a_out[8:8]));
	soft   sft204a_9
	( 
	.in(wire_sft204a_in[9:9]),
	.out(wire_sft204a_out[9:9]));
	soft   sft204a_10
	( 
	.in(wire_sft204a_in[10:10]),
	.out(wire_sft204a_out[10:10]));
	soft   sft204a_11
	( 
	.in(wire_sft204a_in[11:11]),
	.out(wire_sft204a_out[11:11]));
	soft   sft204a_12
	( 
	.in(wire_sft204a_in[12:12]),
	.out(wire_sft204a_out[12:12]));
	soft   sft204a_13
	( 
	.in(wire_sft204a_in[13:13]),
	.out(wire_sft204a_out[13:13]));
	soft   sft204a_14
	( 
	.in(wire_sft204a_in[14:14]),
	.out(wire_sft204a_out[14:14]));
	soft   sft204a_15
	( 
	.in(wire_sft204a_in[15:15]),
	.out(wire_sft204a_out[15:15]));
	soft   sft204a_16
	( 
	.in(wire_sft204a_in[16:16]),
	.out(wire_sft204a_out[16:16]));
	soft   sft204a_17
	( 
	.in(wire_sft204a_in[17:17]),
	.out(wire_sft204a_out[17:17]));
	soft   sft204a_18
	( 
	.in(wire_sft204a_in[18:18]),
	.out(wire_sft204a_out[18:18]));
	soft   sft204a_19
	( 
	.in(wire_sft204a_in[19:19]),
	.out(wire_sft204a_out[19:19]));
	soft   sft204a_20
	( 
	.in(wire_sft204a_in[20:20]),
	.out(wire_sft204a_out[20:20]));
	soft   sft204a_21
	( 
	.in(wire_sft204a_in[21:21]),
	.out(wire_sft204a_out[21:21]));
	soft   sft204a_22
	( 
	.in(wire_sft204a_in[22:22]),
	.out(wire_sft204a_out[22:22]));
	soft   sft204a_23
	( 
	.in(wire_sft204a_in[23:23]),
	.out(wire_sft204a_out[23:23]));
	assign
		wire_sft204a_in = {w8131w, {w8131w, {w8131w, {w8131w, {dffe196, {dffe193, {dffe190, {dffe187, {dffe184, {dffe181, {dffe178, {dffe175, {dffe172, {dffe169, {dffe166, {dffe163, {dffe160, {dffe157, {dffe154, {dffe151, {dffe148, {dffe145, {2{w8131w}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft205a_0
	( 
	.in(wire_sft205a_in[0:0]),
	.out(wire_sft205a_out[0:0]));
	soft   sft205a_1
	( 
	.in(wire_sft205a_in[1:1]),
	.out(wire_sft205a_out[1:1]));
	soft   sft205a_2
	( 
	.in(wire_sft205a_in[2:2]),
	.out(wire_sft205a_out[2:2]));
	soft   sft205a_3
	( 
	.in(wire_sft205a_in[3:3]),
	.out(wire_sft205a_out[3:3]));
	soft   sft205a_4
	( 
	.in(wire_sft205a_in[4:4]),
	.out(wire_sft205a_out[4:4]));
	soft   sft205a_5
	( 
	.in(wire_sft205a_in[5:5]),
	.out(wire_sft205a_out[5:5]));
	soft   sft205a_6
	( 
	.in(wire_sft205a_in[6:6]),
	.out(wire_sft205a_out[6:6]));
	soft   sft205a_7
	( 
	.in(wire_sft205a_in[7:7]),
	.out(wire_sft205a_out[7:7]));
	soft   sft205a_8
	( 
	.in(wire_sft205a_in[8:8]),
	.out(wire_sft205a_out[8:8]));
	soft   sft205a_9
	( 
	.in(wire_sft205a_in[9:9]),
	.out(wire_sft205a_out[9:9]));
	soft   sft205a_10
	( 
	.in(wire_sft205a_in[10:10]),
	.out(wire_sft205a_out[10:10]));
	soft   sft205a_11
	( 
	.in(wire_sft205a_in[11:11]),
	.out(wire_sft205a_out[11:11]));
	soft   sft205a_12
	( 
	.in(wire_sft205a_in[12:12]),
	.out(wire_sft205a_out[12:12]));
	soft   sft205a_13
	( 
	.in(wire_sft205a_in[13:13]),
	.out(wire_sft205a_out[13:13]));
	soft   sft205a_14
	( 
	.in(wire_sft205a_in[14:14]),
	.out(wire_sft205a_out[14:14]));
	soft   sft205a_15
	( 
	.in(wire_sft205a_in[15:15]),
	.out(wire_sft205a_out[15:15]));
	soft   sft205a_16
	( 
	.in(wire_sft205a_in[16:16]),
	.out(wire_sft205a_out[16:16]));
	soft   sft205a_17
	( 
	.in(wire_sft205a_in[17:17]),
	.out(wire_sft205a_out[17:17]));
	soft   sft205a_18
	( 
	.in(wire_sft205a_in[18:18]),
	.out(wire_sft205a_out[18:18]));
	soft   sft205a_19
	( 
	.in(wire_sft205a_in[19:19]),
	.out(wire_sft205a_out[19:19]));
	soft   sft205a_20
	( 
	.in(wire_sft205a_in[20:20]),
	.out(wire_sft205a_out[20:20]));
	soft   sft205a_21
	( 
	.in(wire_sft205a_in[21:21]),
	.out(wire_sft205a_out[21:21]));
	soft   sft205a_22
	( 
	.in(wire_sft205a_in[22:22]),
	.out(wire_sft205a_out[22:22]));
	soft   sft205a_23
	( 
	.in(wire_sft205a_in[23:23]),
	.out(wire_sft205a_out[23:23]));
	assign
		wire_sft205a_in = wire_add201_result;
	soft   sft207a_0
	( 
	.in(wire_sft207a_in[0:0]),
	.out(wire_sft207a_out[0:0]));
	soft   sft207a_1
	( 
	.in(wire_sft207a_in[1:1]),
	.out(wire_sft207a_out[1:1]));
	soft   sft207a_2
	( 
	.in(wire_sft207a_in[2:2]),
	.out(wire_sft207a_out[2:2]));
	soft   sft207a_3
	( 
	.in(wire_sft207a_in[3:3]),
	.out(wire_sft207a_out[3:3]));
	soft   sft207a_4
	( 
	.in(wire_sft207a_in[4:4]),
	.out(wire_sft207a_out[4:4]));
	soft   sft207a_5
	( 
	.in(wire_sft207a_in[5:5]),
	.out(wire_sft207a_out[5:5]));
	soft   sft207a_6
	( 
	.in(wire_sft207a_in[6:6]),
	.out(wire_sft207a_out[6:6]));
	soft   sft207a_7
	( 
	.in(wire_sft207a_in[7:7]),
	.out(wire_sft207a_out[7:7]));
	soft   sft207a_8
	( 
	.in(wire_sft207a_in[8:8]),
	.out(wire_sft207a_out[8:8]));
	soft   sft207a_9
	( 
	.in(wire_sft207a_in[9:9]),
	.out(wire_sft207a_out[9:9]));
	soft   sft207a_10
	( 
	.in(wire_sft207a_in[10:10]),
	.out(wire_sft207a_out[10:10]));
	soft   sft207a_11
	( 
	.in(wire_sft207a_in[11:11]),
	.out(wire_sft207a_out[11:11]));
	soft   sft207a_12
	( 
	.in(wire_sft207a_in[12:12]),
	.out(wire_sft207a_out[12:12]));
	soft   sft207a_13
	( 
	.in(wire_sft207a_in[13:13]),
	.out(wire_sft207a_out[13:13]));
	soft   sft207a_14
	( 
	.in(wire_sft207a_in[14:14]),
	.out(wire_sft207a_out[14:14]));
	soft   sft207a_15
	( 
	.in(wire_sft207a_in[15:15]),
	.out(wire_sft207a_out[15:15]));
	assign
		wire_sft207a_in = {w8131w, {w8031w[0], {w8027w[0], {w8100w[0], {w8096w[0], {w8053w[0], {w8049w[0], {w8009w[0], {w8005w[0], {w7969w[0], {w7965w[0], {w7933w[0], {w7929w[0], {w7900w[0], {w7896w[0], w7870w[0]}}}}}}}}}}}}}}};
	soft   sft208a_0
	( 
	.in(wire_sft208a_in[0:0]),
	.out(wire_sft208a_out[0:0]));
	soft   sft208a_1
	( 
	.in(wire_sft208a_in[1:1]),
	.out(wire_sft208a_out[1:1]));
	soft   sft208a_2
	( 
	.in(wire_sft208a_in[2:2]),
	.out(wire_sft208a_out[2:2]));
	soft   sft208a_3
	( 
	.in(wire_sft208a_in[3:3]),
	.out(wire_sft208a_out[3:3]));
	soft   sft208a_4
	( 
	.in(wire_sft208a_in[4:4]),
	.out(wire_sft208a_out[4:4]));
	soft   sft208a_5
	( 
	.in(wire_sft208a_in[5:5]),
	.out(wire_sft208a_out[5:5]));
	soft   sft208a_6
	( 
	.in(wire_sft208a_in[6:6]),
	.out(wire_sft208a_out[6:6]));
	soft   sft208a_7
	( 
	.in(wire_sft208a_in[7:7]),
	.out(wire_sft208a_out[7:7]));
	soft   sft208a_8
	( 
	.in(wire_sft208a_in[8:8]),
	.out(wire_sft208a_out[8:8]));
	soft   sft208a_9
	( 
	.in(wire_sft208a_in[9:9]),
	.out(wire_sft208a_out[9:9]));
	soft   sft208a_10
	( 
	.in(wire_sft208a_in[10:10]),
	.out(wire_sft208a_out[10:10]));
	soft   sft208a_11
	( 
	.in(wire_sft208a_in[11:11]),
	.out(wire_sft208a_out[11:11]));
	soft   sft208a_12
	( 
	.in(wire_sft208a_in[12:12]),
	.out(wire_sft208a_out[12:12]));
	soft   sft208a_13
	( 
	.in(wire_sft208a_in[13:13]),
	.out(wire_sft208a_out[13:13]));
	soft   sft208a_14
	( 
	.in(wire_sft208a_in[14:14]),
	.out(wire_sft208a_out[14:14]));
	soft   sft208a_15
	( 
	.in(wire_sft208a_in[15:15]),
	.out(wire_sft208a_out[15:15]));
	assign
		wire_sft208a_in = {w8131w, {w8131w, {w8131w, {w8060w[0], {w8057w[0], {w8016w[0], {w8013w[0], {w7976w[0], {w7973w[0], {w7940w[0], {w7937w[0], {w7907w[0], {w7904w[0], {w7877w[0], {w7874w[0], w7851w[0]}}}}}}}}}}}}}}};
	soft   sft209a_0
	( 
	.in(wire_sft209a_in[0:0]),
	.out(wire_sft209a_out[0:0]));
	soft   sft209a_1
	( 
	.in(wire_sft209a_in[1:1]),
	.out(wire_sft209a_out[1:1]));
	soft   sft209a_2
	( 
	.in(wire_sft209a_in[2:2]),
	.out(wire_sft209a_out[2:2]));
	soft   sft209a_3
	( 
	.in(wire_sft209a_in[3:3]),
	.out(wire_sft209a_out[3:3]));
	soft   sft209a_4
	( 
	.in(wire_sft209a_in[4:4]),
	.out(wire_sft209a_out[4:4]));
	soft   sft209a_5
	( 
	.in(wire_sft209a_in[5:5]),
	.out(wire_sft209a_out[5:5]));
	soft   sft209a_6
	( 
	.in(wire_sft209a_in[6:6]),
	.out(wire_sft209a_out[6:6]));
	soft   sft209a_7
	( 
	.in(wire_sft209a_in[7:7]),
	.out(wire_sft209a_out[7:7]));
	soft   sft209a_8
	( 
	.in(wire_sft209a_in[8:8]),
	.out(wire_sft209a_out[8:8]));
	soft   sft209a_9
	( 
	.in(wire_sft209a_in[9:9]),
	.out(wire_sft209a_out[9:9]));
	soft   sft209a_10
	( 
	.in(wire_sft209a_in[10:10]),
	.out(wire_sft209a_out[10:10]));
	soft   sft209a_11
	( 
	.in(wire_sft209a_in[11:11]),
	.out(wire_sft209a_out[11:11]));
	soft   sft209a_12
	( 
	.in(wire_sft209a_in[12:12]),
	.out(wire_sft209a_out[12:12]));
	soft   sft209a_13
	( 
	.in(wire_sft209a_in[13:13]),
	.out(wire_sft209a_out[13:13]));
	soft   sft209a_14
	( 
	.in(wire_sft209a_in[14:14]),
	.out(wire_sft209a_out[14:14]));
	soft   sft209a_15
	( 
	.in(wire_sft209a_in[15:15]),
	.out(wire_sft209a_out[15:15]));
	assign
		wire_sft209a_in = {w8131w, {w8131w, {w8131w, {w8131w, {w7987w[0], {w8093w[0], {w8090w[0], {w8046w[0], {w8043w[0], {w8002w[0], {w7999w[0], {w7962w[0], {w7959w[0], {w7926w[0], {2{w8131w}}}}}}}}}}}}}}}};
	soft   sft210a_0
	( 
	.in(wire_sft210a_in[0:0]),
	.out(wire_sft210a_out[0:0]));
	soft   sft210a_1
	( 
	.in(wire_sft210a_in[1:1]),
	.out(wire_sft210a_out[1:1]));
	soft   sft210a_2
	( 
	.in(wire_sft210a_in[2:2]),
	.out(wire_sft210a_out[2:2]));
	soft   sft210a_3
	( 
	.in(wire_sft210a_in[3:3]),
	.out(wire_sft210a_out[3:3]));
	soft   sft210a_4
	( 
	.in(wire_sft210a_in[4:4]),
	.out(wire_sft210a_out[4:4]));
	soft   sft210a_5
	( 
	.in(wire_sft210a_in[5:5]),
	.out(wire_sft210a_out[5:5]));
	soft   sft210a_6
	( 
	.in(wire_sft210a_in[6:6]),
	.out(wire_sft210a_out[6:6]));
	soft   sft210a_7
	( 
	.in(wire_sft210a_in[7:7]),
	.out(wire_sft210a_out[7:7]));
	soft   sft210a_8
	( 
	.in(wire_sft210a_in[8:8]),
	.out(wire_sft210a_out[8:8]));
	soft   sft210a_9
	( 
	.in(wire_sft210a_in[9:9]),
	.out(wire_sft210a_out[9:9]));
	soft   sft210a_10
	( 
	.in(wire_sft210a_in[10:10]),
	.out(wire_sft210a_out[10:10]));
	soft   sft210a_11
	( 
	.in(wire_sft210a_in[11:11]),
	.out(wire_sft210a_out[11:11]));
	soft   sft210a_12
	( 
	.in(wire_sft210a_in[12:12]),
	.out(wire_sft210a_out[12:12]));
	soft   sft210a_13
	( 
	.in(wire_sft210a_in[13:13]),
	.out(wire_sft210a_out[13:13]));
	soft   sft210a_14
	( 
	.in(wire_sft210a_in[14:14]),
	.out(wire_sft210a_out[14:14]));
	soft   sft210a_15
	( 
	.in(wire_sft210a_in[15:15]),
	.out(wire_sft210a_out[15:15]));
	assign
		wire_sft210a_in = wire_add206_result;
	soft   sft212a_0
	( 
	.in(wire_sft212a_in[0:0]),
	.out(wire_sft212a_out[0:0]));
	soft   sft212a_1
	( 
	.in(wire_sft212a_in[1:1]),
	.out(wire_sft212a_out[1:1]));
	soft   sft212a_2
	( 
	.in(wire_sft212a_in[2:2]),
	.out(wire_sft212a_out[2:2]));
	soft   sft212a_3
	( 
	.in(wire_sft212a_in[3:3]),
	.out(wire_sft212a_out[3:3]));
	soft   sft212a_4
	( 
	.in(wire_sft212a_in[4:4]),
	.out(wire_sft212a_out[4:4]));
	soft   sft212a_5
	( 
	.in(wire_sft212a_in[5:5]),
	.out(wire_sft212a_out[5:5]));
	soft   sft212a_6
	( 
	.in(wire_sft212a_in[6:6]),
	.out(wire_sft212a_out[6:6]));
	soft   sft212a_7
	( 
	.in(wire_sft212a_in[7:7]),
	.out(wire_sft212a_out[7:7]));
	assign
		wire_sft212a_in = {w8131w, {w7955w[0], {w7951w[0], {w8086w[0], {w8082w[0], {w8039w[0], {w8035w[0], w7995w[0]}}}}}}};
	soft   sft213a_0
	( 
	.in(wire_sft213a_in[0:0]),
	.out(wire_sft213a_out[0:0]));
	soft   sft213a_1
	( 
	.in(wire_sft213a_in[1:1]),
	.out(wire_sft213a_out[1:1]));
	soft   sft213a_2
	( 
	.in(wire_sft213a_in[2:2]),
	.out(wire_sft213a_out[2:2]));
	soft   sft213a_3
	( 
	.in(wire_sft213a_in[3:3]),
	.out(wire_sft213a_out[3:3]));
	soft   sft213a_4
	( 
	.in(wire_sft213a_in[4:4]),
	.out(wire_sft213a_out[4:4]));
	soft   sft213a_5
	( 
	.in(wire_sft213a_in[5:5]),
	.out(wire_sft213a_out[5:5]));
	soft   sft213a_6
	( 
	.in(wire_sft213a_in[6:6]),
	.out(wire_sft213a_out[6:6]));
	soft   sft213a_7
	( 
	.in(wire_sft213a_in[7:7]),
	.out(wire_sft213a_out[7:7]));
	assign
		wire_sft213a_in = {w8131w, {w8131w, {w8131w, {w7946w[0], {w7943w[0], {w7913w[0], {w7910w[0], w7883w[0]}}}}}}};
	soft   sft214a_0
	( 
	.in(wire_sft214a_in[0:0]),
	.out(wire_sft214a_out[0:0]));
	soft   sft214a_1
	( 
	.in(wire_sft214a_in[1:1]),
	.out(wire_sft214a_out[1:1]));
	soft   sft214a_2
	( 
	.in(wire_sft214a_in[2:2]),
	.out(wire_sft214a_out[2:2]));
	soft   sft214a_3
	( 
	.in(wire_sft214a_in[3:3]),
	.out(wire_sft214a_out[3:3]));
	soft   sft214a_4
	( 
	.in(wire_sft214a_in[4:4]),
	.out(wire_sft214a_out[4:4]));
	soft   sft214a_5
	( 
	.in(wire_sft214a_in[5:5]),
	.out(wire_sft214a_out[5:5]));
	soft   sft214a_6
	( 
	.in(wire_sft214a_in[6:6]),
	.out(wire_sft214a_out[6:6]));
	soft   sft214a_7
	( 
	.in(wire_sft214a_in[7:7]),
	.out(wire_sft214a_out[7:7]));
	assign
		wire_sft214a_in = {w8131w, {w8131w, {w8131w, {w8131w, {w8131w, {w8079w[0], {2{w8131w}}}}}}}};
	soft   sft215a_0
	( 
	.in(wire_sft215a_in[0:0]),
	.out(wire_sft215a_out[0:0]));
	soft   sft215a_1
	( 
	.in(wire_sft215a_in[1:1]),
	.out(wire_sft215a_out[1:1]));
	soft   sft215a_2
	( 
	.in(wire_sft215a_in[2:2]),
	.out(wire_sft215a_out[2:2]));
	soft   sft215a_3
	( 
	.in(wire_sft215a_in[3:3]),
	.out(wire_sft215a_out[3:3]));
	soft   sft215a_4
	( 
	.in(wire_sft215a_in[4:4]),
	.out(wire_sft215a_out[4:4]));
	soft   sft215a_5
	( 
	.in(wire_sft215a_in[5:5]),
	.out(wire_sft215a_out[5:5]));
	soft   sft215a_6
	( 
	.in(wire_sft215a_in[6:6]),
	.out(wire_sft215a_out[6:6]));
	soft   sft215a_7
	( 
	.in(wire_sft215a_in[7:7]),
	.out(wire_sft215a_out[7:7]));
	assign
		wire_sft215a_in = wire_add211_result;
	assign
		result = w7781w[25:12],
		w7781w = {w8315w[25:2], 1'b0, dffe137a0},
		w7792w = (data[1] & (~ data[0])),
		w7796w = (data[1] & data[0]),
		w7800w = (data[2] & data[0]),
		w7805w = (data[2] & (~ data[1])),
		w7809w = (data[2] & data[1]),
		w7813w = (data[3] & data[0]),
		w7816w = (data[3] & data[1]),
		w7821w = (data[3] & (~ data[2])),
		w7825w = (data[3] & data[2]),
		w7829w = (data[4] & data[0]),
		w7832w = (data[4] & data[1]),
		w7835w = (data[4] & data[2]),
		w7840w = (data[4] & (~ data[3])),
		w7844w = (data[4] & data[3]),
		w7848w = (data[5] & data[0]),
		w7851w = (data[5] & data[1]),
		w7854w = (data[5] & data[2]),
		w7857w = (data[5] & data[3]),
		w7862w = (data[5] & (~ data[4])),
		w7866w = (data[5] & data[4]),
		w7870w = (data[6] & data[0]),
		w7874w = (data[6] & data[1]),
		w7877w = (data[6] & data[2]),
		w7880w = (data[6] & data[3]),
		w7883w = (data[6] & data[4]),
		w7888w = (data[6] & (~ data[5])),
		w7892w = (data[6] & data[5]),
		w7896w = (data[7] & data[0]),
		w7900w = (data[7] & data[1]),
		w7904w = (data[7] & data[2]),
		w7907w = (data[7] & data[3]),
		w7910w = (data[7] & data[4]),
		w7913w = (data[7] & data[5]),
		w7918w = (data[7] & (~ data[6])),
		w7922w = (data[7] & data[6]),
		w7926w = (data[8] & data[0]),
		w7929w = (data[8] & data[1]),
		w7933w = (data[8] & data[2]),
		w7937w = (data[8] & data[3]),
		w7940w = (data[8] & data[4]),
		w7943w = (data[8] & data[5]),
		w7946w = (data[8] & data[6]),
		w7951w = (data[8] & (~ data[7])),
		w7955w = (data[8] & data[7]),
		w7959w = (data[9] & data[0]),
		w7962w = (data[9] & data[1]),
		w7965w = (data[9] & data[2]),
		w7969w = (data[9] & data[3]),
		w7973w = (data[9] & data[4]),
		w7976w = (data[9] & data[5]),
		w7979w = (data[9] & data[6]),
		w7982w = (data[9] & data[7]),
		w7987w = (data[9] & (~ data[8])),
		w7991w = (data[9] & data[8]),
		w7995w = (data[10] & data[0]),
		w7999w = (data[10] & data[1]),
		w8002w = (data[10] & data[2]),
		w8005w = (data[10] & data[3]),
		w8009w = (data[10] & data[4]),
		w8013w = (data[10] & data[5]),
		w8016w = (data[10] & data[6]),
		w8019w = (data[10] & data[7]),
		w8022w = (data[10] & data[8]),
		w8027w = (data[10] & (~ data[9])),
		w8031w = (data[10] & data[9]),
		w8035w = (data[11] & data[0]),
		w8039w = (data[11] & data[1]),
		w8043w = (data[11] & data[2]),
		w8046w = (data[11] & data[3]),
		w8049w = (data[11] & data[4]),
		w8053w = (data[11] & data[5]),
		w8057w = (data[11] & data[6]),
		w8060w = (data[11] & data[7]),
		w8063w = (data[11] & data[8]),
		w8066w = (data[11] & data[9]),
		w8071w = (data[11] & (~ data[10])),
		w8075w = (data[11] & data[10]),
		w8079w = (data[12] & data[0]),
		w8082w = (data[12] & data[1]),
		w8086w = (data[12] & data[2]),
		w8090w = (data[12] & data[3]),
		w8093w = (data[12] & data[4]),
		w8096w = (data[12] & data[5]),
		w8100w = (data[12] & data[6]),
		w8104w = (data[12] & data[7]),
		w8107w = (data[12] & data[8]),
		w8110w = (data[12] & data[9]),
		w8113w = (data[12] & data[10]),
		w8118w = (data[12] & (~ data[11])),
		w8122w = (data[12] & data[11]),
		w8131w = 1'b0,
		w8315w = {wire_sft205a_out[23:22], wire_sft205a_out[21:20], wire_sft205a_out[19:18], wire_sft205a_out[17:16], wire_sft205a_out[15:14], wire_sft205a_out[13:12], wire_sft205a_out[11:10], wire_sft205a_out[9:8], wire_sft205a_out[7:6], wire_sft205a_out[5:4], wire_sft205a_out[3:2], wire_sft205a_out[1:0], dffe138, {2{w8131w}}};
endmodule //fplog_altsquare


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=29 add_sub clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 60 reg 60 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_add_sub123
	( 
	add_sub,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   add_sub;
	input   clock;
	input   [28:0]  dataa;
	input   [28:0]  datab;
	output   [28:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   add_sub;
	tri0   clock;
	tri0   [28:0]  dataa;
	tri0   [28:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[28:0]	add_sub_cell_ffa;
	reg	[0:0]	add_sub_regra0;
	reg	[0:0]	inter_regrs_cin_ffa0;
	reg	[28:0]	pad_cell_ffa;
	wire  [0:0]   wire_add_sub_cella_0cout;
	wire  [0:0]   wire_add_sub_cella_1cout;
	wire  [0:0]   wire_add_sub_cella_2cout;
	wire  [0:0]   wire_add_sub_cella_3cout;
	wire  [0:0]   wire_add_sub_cella_4cout;
	wire  [0:0]   wire_add_sub_cella_5cout;
	wire  [0:0]   wire_add_sub_cella_6cout;
	wire  [0:0]   wire_add_sub_cella_7cout;
	wire  [0:0]   wire_add_sub_cella_8cout;
	wire  [0:0]   wire_add_sub_cella_9cout;
	wire  [0:0]   wire_add_sub_cella_10cout;
	wire  [0:0]   wire_add_sub_cella_11cout;
	wire  [0:0]   wire_add_sub_cella_12cout;
	wire  [0:0]   wire_add_sub_cella_13cout;
	wire  [0:0]   wire_add_sub_cella_14cout;
	wire  [0:0]   wire_add_sub_cella_15cout;
	wire  [0:0]   wire_add_sub_cella_16cout;
	wire  [0:0]   wire_add_sub_cella_17cout;
	wire  [0:0]   wire_add_sub_cella_18cout;
	wire  [0:0]   wire_add_sub_cella_19cout;
	wire  [0:0]   wire_add_sub_cella_20cout;
	wire  [0:0]   wire_add_sub_cella_21cout;
	wire  [0:0]   wire_add_sub_cella_22cout;
	wire  [0:0]   wire_add_sub_cella_23cout;
	wire  [0:0]   wire_add_sub_cella_24cout;
	wire  [0:0]   wire_add_sub_cella_25cout;
	wire  [0:0]   wire_add_sub_cella_26cout;
	wire  [0:0]   wire_add_sub_cella_27cout;
	wire  [28:0]   wire_add_sub_cella_datad;
	wire  [28:0]   wire_add_sub_cella_dataf;
	wire  [28:0]   wire_add_sub_cella_sumout;
	wire  [0:0]   wire_inter_regrs_cina_sumout;
	wire  [0:0]   wire_inter_regrs_couta_0cout;
	wire  [0:0]   wire_pad_cella_0cout;
	wire  [0:0]   wire_pad_cella_1cout;
	wire  [0:0]   wire_pad_cella_2cout;
	wire  [0:0]   wire_pad_cella_3cout;
	wire  [0:0]   wire_pad_cella_4cout;
	wire  [0:0]   wire_pad_cella_5cout;
	wire  [0:0]   wire_pad_cella_6cout;
	wire  [0:0]   wire_pad_cella_7cout;
	wire  [0:0]   wire_pad_cella_8cout;
	wire  [0:0]   wire_pad_cella_9cout;
	wire  [0:0]   wire_pad_cella_10cout;
	wire  [0:0]   wire_pad_cella_11cout;
	wire  [0:0]   wire_pad_cella_12cout;
	wire  [0:0]   wire_pad_cella_14cout;
	wire  [0:0]   wire_pad_cella_15cout;
	wire  [0:0]   wire_pad_cella_16cout;
	wire  [0:0]   wire_pad_cella_17cout;
	wire  [0:0]   wire_pad_cella_18cout;
	wire  [0:0]   wire_pad_cella_19cout;
	wire  [0:0]   wire_pad_cella_20cout;
	wire  [0:0]   wire_pad_cella_21cout;
	wire  [0:0]   wire_pad_cella_22cout;
	wire  [0:0]   wire_pad_cella_23cout;
	wire  [0:0]   wire_pad_cella_24cout;
	wire  [0:0]   wire_pad_cella_25cout;
	wire  [0:0]   wire_pad_cella_26cout;
	wire  [0:0]   wire_pad_cella_27cout;
	wire  [28:0]   wire_pad_cella_datad;
	wire  [28:0]   wire_pad_cella_sumout;

	// synopsys translate_off
	initial
		add_sub_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  add_sub_cell_ffa <= wire_add_sub_cella_sumout;
	// synopsys translate_off
	initial
		add_sub_regra0 = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  add_sub_regra0 <= (~ add_sub);
	// synopsys translate_off
	initial
		inter_regrs_cin_ffa0 = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  inter_regrs_cin_ffa0 <= wire_inter_regrs_cina_sumout[0:0];
	// synopsys translate_off
	initial
		pad_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  pad_cell_ffa <= wire_pad_cella_sumout;
	cyclonev_lcell_comb   add_sub_cella_0
	( 
	.cin((~ add_sub)),
	.combout(),
	.cout(wire_add_sub_cella_0cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[0:0]),
	.dataf(wire_add_sub_cella_dataf[0:0]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_0.extended_lut = "off",
		add_sub_cella_0.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_0.shared_arith = "off",
		add_sub_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_1
	( 
	.cin(wire_add_sub_cella_0cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_1cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[1:1]),
	.dataf(wire_add_sub_cella_dataf[1:1]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_1.extended_lut = "off",
		add_sub_cella_1.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_1.shared_arith = "off",
		add_sub_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_2
	( 
	.cin(wire_add_sub_cella_1cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_2cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[2:2]),
	.dataf(wire_add_sub_cella_dataf[2:2]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_2.extended_lut = "off",
		add_sub_cella_2.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_2.shared_arith = "off",
		add_sub_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_3
	( 
	.cin(wire_add_sub_cella_2cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_3cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[3:3]),
	.dataf(wire_add_sub_cella_dataf[3:3]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_3.extended_lut = "off",
		add_sub_cella_3.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_3.shared_arith = "off",
		add_sub_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_4
	( 
	.cin(wire_add_sub_cella_3cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_4cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[4:4]),
	.dataf(wire_add_sub_cella_dataf[4:4]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_4.extended_lut = "off",
		add_sub_cella_4.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_4.shared_arith = "off",
		add_sub_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_5
	( 
	.cin(wire_add_sub_cella_4cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_5cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[5:5]),
	.dataf(wire_add_sub_cella_dataf[5:5]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_5.extended_lut = "off",
		add_sub_cella_5.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_5.shared_arith = "off",
		add_sub_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_6
	( 
	.cin(wire_add_sub_cella_5cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_6cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[6:6]),
	.dataf(wire_add_sub_cella_dataf[6:6]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_6.extended_lut = "off",
		add_sub_cella_6.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_6.shared_arith = "off",
		add_sub_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_7
	( 
	.cin(wire_add_sub_cella_6cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_7cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[7:7]),
	.dataf(wire_add_sub_cella_dataf[7:7]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_7.extended_lut = "off",
		add_sub_cella_7.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_7.shared_arith = "off",
		add_sub_cella_7.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_8
	( 
	.cin(wire_add_sub_cella_7cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_8cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[8:8]),
	.dataf(wire_add_sub_cella_dataf[8:8]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[8:8]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_8.extended_lut = "off",
		add_sub_cella_8.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_8.shared_arith = "off",
		add_sub_cella_8.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_9
	( 
	.cin(wire_add_sub_cella_8cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_9cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[9:9]),
	.dataf(wire_add_sub_cella_dataf[9:9]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[9:9]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_9.extended_lut = "off",
		add_sub_cella_9.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_9.shared_arith = "off",
		add_sub_cella_9.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_10
	( 
	.cin(wire_add_sub_cella_9cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_10cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[10:10]),
	.dataf(wire_add_sub_cella_dataf[10:10]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[10:10]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_10.extended_lut = "off",
		add_sub_cella_10.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_10.shared_arith = "off",
		add_sub_cella_10.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_11
	( 
	.cin(wire_add_sub_cella_10cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_11cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[11:11]),
	.dataf(wire_add_sub_cella_dataf[11:11]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[11:11]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_11.extended_lut = "off",
		add_sub_cella_11.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_11.shared_arith = "off",
		add_sub_cella_11.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_12
	( 
	.cin(wire_add_sub_cella_11cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_12cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[12:12]),
	.dataf(wire_add_sub_cella_dataf[12:12]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[12:12]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_12.extended_lut = "off",
		add_sub_cella_12.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_12.shared_arith = "off",
		add_sub_cella_12.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_13
	( 
	.cin(wire_add_sub_cella_12cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_13cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[13:13]),
	.dataf(wire_add_sub_cella_dataf[13:13]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[13:13]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_13.extended_lut = "off",
		add_sub_cella_13.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_13.shared_arith = "off",
		add_sub_cella_13.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_14
	( 
	.cin((~ add_sub)),
	.combout(),
	.cout(wire_add_sub_cella_14cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[14:14]),
	.dataf(wire_add_sub_cella_dataf[14:14]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[14:14]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_14.extended_lut = "off",
		add_sub_cella_14.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_14.shared_arith = "off",
		add_sub_cella_14.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_15
	( 
	.cin(wire_add_sub_cella_14cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_15cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[15:15]),
	.dataf(wire_add_sub_cella_dataf[15:15]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[15:15]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_15.extended_lut = "off",
		add_sub_cella_15.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_15.shared_arith = "off",
		add_sub_cella_15.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_16
	( 
	.cin(wire_add_sub_cella_15cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_16cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[16:16]),
	.dataf(wire_add_sub_cella_dataf[16:16]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[16:16]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_16.extended_lut = "off",
		add_sub_cella_16.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_16.shared_arith = "off",
		add_sub_cella_16.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_17
	( 
	.cin(wire_add_sub_cella_16cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_17cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[17:17]),
	.dataf(wire_add_sub_cella_dataf[17:17]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[17:17]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_17.extended_lut = "off",
		add_sub_cella_17.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_17.shared_arith = "off",
		add_sub_cella_17.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_18
	( 
	.cin(wire_add_sub_cella_17cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_18cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[18:18]),
	.dataf(wire_add_sub_cella_dataf[18:18]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[18:18]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_18.extended_lut = "off",
		add_sub_cella_18.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_18.shared_arith = "off",
		add_sub_cella_18.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_19
	( 
	.cin(wire_add_sub_cella_18cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_19cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[19:19]),
	.dataf(wire_add_sub_cella_dataf[19:19]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[19:19]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_19.extended_lut = "off",
		add_sub_cella_19.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_19.shared_arith = "off",
		add_sub_cella_19.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_20
	( 
	.cin(wire_add_sub_cella_19cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_20cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[20:20]),
	.dataf(wire_add_sub_cella_dataf[20:20]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[20:20]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_20.extended_lut = "off",
		add_sub_cella_20.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_20.shared_arith = "off",
		add_sub_cella_20.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_21
	( 
	.cin(wire_add_sub_cella_20cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_21cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[21:21]),
	.dataf(wire_add_sub_cella_dataf[21:21]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[21:21]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_21.extended_lut = "off",
		add_sub_cella_21.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_21.shared_arith = "off",
		add_sub_cella_21.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_22
	( 
	.cin(wire_add_sub_cella_21cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_22cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[22:22]),
	.dataf(wire_add_sub_cella_dataf[22:22]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[22:22]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_22.extended_lut = "off",
		add_sub_cella_22.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_22.shared_arith = "off",
		add_sub_cella_22.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_23
	( 
	.cin(wire_add_sub_cella_22cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_23cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[23:23]),
	.dataf(wire_add_sub_cella_dataf[23:23]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[23:23]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_23.extended_lut = "off",
		add_sub_cella_23.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_23.shared_arith = "off",
		add_sub_cella_23.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_24
	( 
	.cin(wire_add_sub_cella_23cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_24cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[24:24]),
	.dataf(wire_add_sub_cella_dataf[24:24]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[24:24]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_24.extended_lut = "off",
		add_sub_cella_24.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_24.shared_arith = "off",
		add_sub_cella_24.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_25
	( 
	.cin(wire_add_sub_cella_24cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_25cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[25:25]),
	.dataf(wire_add_sub_cella_dataf[25:25]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[25:25]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_25.extended_lut = "off",
		add_sub_cella_25.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_25.shared_arith = "off",
		add_sub_cella_25.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_26
	( 
	.cin(wire_add_sub_cella_25cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_26cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[26:26]),
	.dataf(wire_add_sub_cella_dataf[26:26]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[26:26]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_26.extended_lut = "off",
		add_sub_cella_26.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_26.shared_arith = "off",
		add_sub_cella_26.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_27
	( 
	.cin(wire_add_sub_cella_26cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_27cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[27:27]),
	.dataf(wire_add_sub_cella_dataf[27:27]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[27:27]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_27.extended_lut = "off",
		add_sub_cella_27.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_27.shared_arith = "off",
		add_sub_cella_27.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_28
	( 
	.cin(wire_add_sub_cella_27cout[0:0]),
	.combout(),
	.cout(),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[28:28]),
	.dataf(wire_add_sub_cella_dataf[28:28]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[28:28]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_28.extended_lut = "off",
		add_sub_cella_28.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_28.shared_arith = "off",
		add_sub_cella_28.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_add_sub_cella_datad = dataa,
		wire_add_sub_cella_dataf = datab;
	cyclonev_lcell_comb   inter_regrs_cina_0
	( 
	.cin(wire_add_sub_cella_13cout[0:0]),
	.combout(),
	.cout(),
	.dataa(1'b1),
	.shareout(),
	.sumout(wire_inter_regrs_cina_sumout[0:0]),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_cina_0.extended_lut = "off",
		inter_regrs_cina_0.lut_mask = 64'h0000AAAA00005555,
		inter_regrs_cina_0.shared_arith = "off",
		inter_regrs_cina_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   inter_regrs_couta_0
	( 
	.cin(1'b0),
	.combout(),
	.cout(wire_inter_regrs_couta_0cout[0:0]),
	.dataa(inter_regrs_cin_ffa0),
	.shareout(),
	.sumout(),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_couta_0.extended_lut = "off",
		inter_regrs_couta_0.lut_mask = 64'h000055550000AAAA,
		inter_regrs_couta_0.shared_arith = "off",
		inter_regrs_couta_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_0
	( 
	.cin(add_sub_regra0),
	.combout(),
	.cout(wire_pad_cella_0cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[0:0]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_0.extended_lut = "off",
		pad_cella_0.lut_mask = 64'h00000FF00000FF00,
		pad_cella_0.shared_arith = "off",
		pad_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_1
	( 
	.cin(wire_pad_cella_0cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_1cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[1:1]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_1.extended_lut = "off",
		pad_cella_1.lut_mask = 64'h00000FF00000FF00,
		pad_cella_1.shared_arith = "off",
		pad_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_2
	( 
	.cin(wire_pad_cella_1cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_2cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[2:2]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_2.extended_lut = "off",
		pad_cella_2.lut_mask = 64'h00000FF00000FF00,
		pad_cella_2.shared_arith = "off",
		pad_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_3
	( 
	.cin(wire_pad_cella_2cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_3cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[3:3]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_3.extended_lut = "off",
		pad_cella_3.lut_mask = 64'h00000FF00000FF00,
		pad_cella_3.shared_arith = "off",
		pad_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_4
	( 
	.cin(wire_pad_cella_3cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_4cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[4:4]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_4.extended_lut = "off",
		pad_cella_4.lut_mask = 64'h00000FF00000FF00,
		pad_cella_4.shared_arith = "off",
		pad_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_5
	( 
	.cin(wire_pad_cella_4cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_5cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[5:5]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_5.extended_lut = "off",
		pad_cella_5.lut_mask = 64'h00000FF00000FF00,
		pad_cella_5.shared_arith = "off",
		pad_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_6
	( 
	.cin(wire_pad_cella_5cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_6cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[6:6]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_6.extended_lut = "off",
		pad_cella_6.lut_mask = 64'h00000FF00000FF00,
		pad_cella_6.shared_arith = "off",
		pad_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_7
	( 
	.cin(wire_pad_cella_6cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_7cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[7:7]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_7.extended_lut = "off",
		pad_cella_7.lut_mask = 64'h00000FF00000FF00,
		pad_cella_7.shared_arith = "off",
		pad_cella_7.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_8
	( 
	.cin(wire_pad_cella_7cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_8cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[8:8]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[8:8]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_8.extended_lut = "off",
		pad_cella_8.lut_mask = 64'h00000FF00000FF00,
		pad_cella_8.shared_arith = "off",
		pad_cella_8.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_9
	( 
	.cin(wire_pad_cella_8cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_9cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[9:9]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[9:9]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_9.extended_lut = "off",
		pad_cella_9.lut_mask = 64'h00000FF00000FF00,
		pad_cella_9.shared_arith = "off",
		pad_cella_9.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_10
	( 
	.cin(wire_pad_cella_9cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_10cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[10:10]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[10:10]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_10.extended_lut = "off",
		pad_cella_10.lut_mask = 64'h00000FF00000FF00,
		pad_cella_10.shared_arith = "off",
		pad_cella_10.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_11
	( 
	.cin(wire_pad_cella_10cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_11cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[11:11]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[11:11]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_11.extended_lut = "off",
		pad_cella_11.lut_mask = 64'h00000FF00000FF00,
		pad_cella_11.shared_arith = "off",
		pad_cella_11.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_12
	( 
	.cin(wire_pad_cella_11cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_12cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[12:12]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[12:12]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_12.extended_lut = "off",
		pad_cella_12.lut_mask = 64'h00000FF00000FF00,
		pad_cella_12.shared_arith = "off",
		pad_cella_12.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_13
	( 
	.cin(wire_pad_cella_12cout[0:0]),
	.combout(),
	.cout(),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[13:13]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[13:13]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_13.extended_lut = "off",
		pad_cella_13.lut_mask = 64'h00000FF00000FF00,
		pad_cella_13.shared_arith = "off",
		pad_cella_13.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_14
	( 
	.cin(wire_inter_regrs_couta_0cout),
	.combout(),
	.cout(wire_pad_cella_14cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[14:14]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[14:14]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_14.extended_lut = "off",
		pad_cella_14.lut_mask = 64'h00000FF00000FF00,
		pad_cella_14.shared_arith = "off",
		pad_cella_14.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_15
	( 
	.cin(wire_pad_cella_14cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_15cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[15:15]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[15:15]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_15.extended_lut = "off",
		pad_cella_15.lut_mask = 64'h00000FF00000FF00,
		pad_cella_15.shared_arith = "off",
		pad_cella_15.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_16
	( 
	.cin(wire_pad_cella_15cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_16cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[16:16]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[16:16]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_16.extended_lut = "off",
		pad_cella_16.lut_mask = 64'h00000FF00000FF00,
		pad_cella_16.shared_arith = "off",
		pad_cella_16.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_17
	( 
	.cin(wire_pad_cella_16cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_17cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[17:17]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[17:17]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_17.extended_lut = "off",
		pad_cella_17.lut_mask = 64'h00000FF00000FF00,
		pad_cella_17.shared_arith = "off",
		pad_cella_17.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_18
	( 
	.cin(wire_pad_cella_17cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_18cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[18:18]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[18:18]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_18.extended_lut = "off",
		pad_cella_18.lut_mask = 64'h00000FF00000FF00,
		pad_cella_18.shared_arith = "off",
		pad_cella_18.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_19
	( 
	.cin(wire_pad_cella_18cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_19cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[19:19]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[19:19]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_19.extended_lut = "off",
		pad_cella_19.lut_mask = 64'h00000FF00000FF00,
		pad_cella_19.shared_arith = "off",
		pad_cella_19.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_20
	( 
	.cin(wire_pad_cella_19cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_20cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[20:20]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[20:20]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_20.extended_lut = "off",
		pad_cella_20.lut_mask = 64'h00000FF00000FF00,
		pad_cella_20.shared_arith = "off",
		pad_cella_20.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_21
	( 
	.cin(wire_pad_cella_20cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_21cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[21:21]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[21:21]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_21.extended_lut = "off",
		pad_cella_21.lut_mask = 64'h00000FF00000FF00,
		pad_cella_21.shared_arith = "off",
		pad_cella_21.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_22
	( 
	.cin(wire_pad_cella_21cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_22cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[22:22]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[22:22]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_22.extended_lut = "off",
		pad_cella_22.lut_mask = 64'h00000FF00000FF00,
		pad_cella_22.shared_arith = "off",
		pad_cella_22.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_23
	( 
	.cin(wire_pad_cella_22cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_23cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[23:23]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[23:23]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_23.extended_lut = "off",
		pad_cella_23.lut_mask = 64'h00000FF00000FF00,
		pad_cella_23.shared_arith = "off",
		pad_cella_23.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_24
	( 
	.cin(wire_pad_cella_23cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_24cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[24:24]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[24:24]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_24.extended_lut = "off",
		pad_cella_24.lut_mask = 64'h00000FF00000FF00,
		pad_cella_24.shared_arith = "off",
		pad_cella_24.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_25
	( 
	.cin(wire_pad_cella_24cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_25cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[25:25]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[25:25]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_25.extended_lut = "off",
		pad_cella_25.lut_mask = 64'h00000FF00000FF00,
		pad_cella_25.shared_arith = "off",
		pad_cella_25.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_26
	( 
	.cin(wire_pad_cella_25cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_26cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[26:26]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[26:26]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_26.extended_lut = "off",
		pad_cella_26.lut_mask = 64'h00000FF00000FF00,
		pad_cella_26.shared_arith = "off",
		pad_cella_26.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_27
	( 
	.cin(wire_pad_cella_26cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_27cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[27:27]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[27:27]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_27.extended_lut = "off",
		pad_cella_27.lut_mask = 64'h00000FF00000FF00,
		pad_cella_27.shared_arith = "off",
		pad_cella_27.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_28
	( 
	.cin(wire_pad_cella_27cout[0:0]),
	.combout(),
	.cout(),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[28:28]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[28:28]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_28.extended_lut = "off",
		pad_cella_28.lut_mask = 64'h00000FF00000FF00,
		pad_cella_28.shared_arith = "off",
		pad_cella_28.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_pad_cella_datad = {add_sub_cell_ffa};
	assign
		result = pad_cell_ffa[28:0];
endmodule //fplog_add_sub123


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=2 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=47 add_sub clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = lut 96 reg 96 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_add_sub1234
	( 
	add_sub,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   add_sub;
	input   clock;
	input   [46:0]  dataa;
	input   [46:0]  datab;
	output   [46:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   add_sub;
	tri0   clock;
	tri0   [46:0]  dataa;
	tri0   [46:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[46:0]	add_sub_cell_ffa;
	reg	[0:0]	add_sub_regra0;
	reg	[0:0]	inter_regrs_cin_ffa0;
	reg	[46:0]	pad_cell_ffa;
	wire  [0:0]   wire_add_sub_cella_0cout;
	wire  [0:0]   wire_add_sub_cella_1cout;
	wire  [0:0]   wire_add_sub_cella_2cout;
	wire  [0:0]   wire_add_sub_cella_3cout;
	wire  [0:0]   wire_add_sub_cella_4cout;
	wire  [0:0]   wire_add_sub_cella_5cout;
	wire  [0:0]   wire_add_sub_cella_6cout;
	wire  [0:0]   wire_add_sub_cella_7cout;
	wire  [0:0]   wire_add_sub_cella_8cout;
	wire  [0:0]   wire_add_sub_cella_9cout;
	wire  [0:0]   wire_add_sub_cella_10cout;
	wire  [0:0]   wire_add_sub_cella_11cout;
	wire  [0:0]   wire_add_sub_cella_12cout;
	wire  [0:0]   wire_add_sub_cella_13cout;
	wire  [0:0]   wire_add_sub_cella_14cout;
	wire  [0:0]   wire_add_sub_cella_15cout;
	wire  [0:0]   wire_add_sub_cella_16cout;
	wire  [0:0]   wire_add_sub_cella_17cout;
	wire  [0:0]   wire_add_sub_cella_18cout;
	wire  [0:0]   wire_add_sub_cella_19cout;
	wire  [0:0]   wire_add_sub_cella_20cout;
	wire  [0:0]   wire_add_sub_cella_21cout;
	wire  [0:0]   wire_add_sub_cella_22cout;
	wire  [0:0]   wire_add_sub_cella_23cout;
	wire  [0:0]   wire_add_sub_cella_24cout;
	wire  [0:0]   wire_add_sub_cella_25cout;
	wire  [0:0]   wire_add_sub_cella_26cout;
	wire  [0:0]   wire_add_sub_cella_27cout;
	wire  [0:0]   wire_add_sub_cella_28cout;
	wire  [0:0]   wire_add_sub_cella_29cout;
	wire  [0:0]   wire_add_sub_cella_30cout;
	wire  [0:0]   wire_add_sub_cella_31cout;
	wire  [0:0]   wire_add_sub_cella_32cout;
	wire  [0:0]   wire_add_sub_cella_33cout;
	wire  [0:0]   wire_add_sub_cella_34cout;
	wire  [0:0]   wire_add_sub_cella_35cout;
	wire  [0:0]   wire_add_sub_cella_36cout;
	wire  [0:0]   wire_add_sub_cella_37cout;
	wire  [0:0]   wire_add_sub_cella_38cout;
	wire  [0:0]   wire_add_sub_cella_39cout;
	wire  [0:0]   wire_add_sub_cella_40cout;
	wire  [0:0]   wire_add_sub_cella_41cout;
	wire  [0:0]   wire_add_sub_cella_42cout;
	wire  [0:0]   wire_add_sub_cella_43cout;
	wire  [0:0]   wire_add_sub_cella_44cout;
	wire  [0:0]   wire_add_sub_cella_45cout;
	wire  [46:0]   wire_add_sub_cella_datad;
	wire  [46:0]   wire_add_sub_cella_dataf;
	wire  [46:0]   wire_add_sub_cella_sumout;
	wire  [0:0]   wire_inter_regrs_cina_sumout;
	wire  [0:0]   wire_inter_regrs_couta_0cout;
	wire  [0:0]   wire_pad_cella_0cout;
	wire  [0:0]   wire_pad_cella_1cout;
	wire  [0:0]   wire_pad_cella_2cout;
	wire  [0:0]   wire_pad_cella_3cout;
	wire  [0:0]   wire_pad_cella_4cout;
	wire  [0:0]   wire_pad_cella_5cout;
	wire  [0:0]   wire_pad_cella_6cout;
	wire  [0:0]   wire_pad_cella_7cout;
	wire  [0:0]   wire_pad_cella_8cout;
	wire  [0:0]   wire_pad_cella_9cout;
	wire  [0:0]   wire_pad_cella_10cout;
	wire  [0:0]   wire_pad_cella_11cout;
	wire  [0:0]   wire_pad_cella_12cout;
	wire  [0:0]   wire_pad_cella_13cout;
	wire  [0:0]   wire_pad_cella_14cout;
	wire  [0:0]   wire_pad_cella_15cout;
	wire  [0:0]   wire_pad_cella_16cout;
	wire  [0:0]   wire_pad_cella_17cout;
	wire  [0:0]   wire_pad_cella_18cout;
	wire  [0:0]   wire_pad_cella_19cout;
	wire  [0:0]   wire_pad_cella_20cout;
	wire  [0:0]   wire_pad_cella_21cout;
	wire  [0:0]   wire_pad_cella_23cout;
	wire  [0:0]   wire_pad_cella_24cout;
	wire  [0:0]   wire_pad_cella_25cout;
	wire  [0:0]   wire_pad_cella_26cout;
	wire  [0:0]   wire_pad_cella_27cout;
	wire  [0:0]   wire_pad_cella_28cout;
	wire  [0:0]   wire_pad_cella_29cout;
	wire  [0:0]   wire_pad_cella_30cout;
	wire  [0:0]   wire_pad_cella_31cout;
	wire  [0:0]   wire_pad_cella_32cout;
	wire  [0:0]   wire_pad_cella_33cout;
	wire  [0:0]   wire_pad_cella_34cout;
	wire  [0:0]   wire_pad_cella_35cout;
	wire  [0:0]   wire_pad_cella_36cout;
	wire  [0:0]   wire_pad_cella_37cout;
	wire  [0:0]   wire_pad_cella_38cout;
	wire  [0:0]   wire_pad_cella_39cout;
	wire  [0:0]   wire_pad_cella_40cout;
	wire  [0:0]   wire_pad_cella_41cout;
	wire  [0:0]   wire_pad_cella_42cout;
	wire  [0:0]   wire_pad_cella_43cout;
	wire  [0:0]   wire_pad_cella_44cout;
	wire  [0:0]   wire_pad_cella_45cout;
	wire  [46:0]   wire_pad_cella_datad;
	wire  [46:0]   wire_pad_cella_sumout;

	// synopsys translate_off
	initial
		add_sub_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  add_sub_cell_ffa <= wire_add_sub_cella_sumout;
	// synopsys translate_off
	initial
		add_sub_regra0 = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  add_sub_regra0 <= (~ add_sub);
	// synopsys translate_off
	initial
		inter_regrs_cin_ffa0 = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  inter_regrs_cin_ffa0 <= wire_inter_regrs_cina_sumout[0:0];
	// synopsys translate_off
	initial
		pad_cell_ffa = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		  pad_cell_ffa <= wire_pad_cella_sumout;
	cyclonev_lcell_comb   add_sub_cella_0
	( 
	.cin((~ add_sub)),
	.combout(),
	.cout(wire_add_sub_cella_0cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[0:0]),
	.dataf(wire_add_sub_cella_dataf[0:0]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_0.extended_lut = "off",
		add_sub_cella_0.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_0.shared_arith = "off",
		add_sub_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_1
	( 
	.cin(wire_add_sub_cella_0cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_1cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[1:1]),
	.dataf(wire_add_sub_cella_dataf[1:1]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_1.extended_lut = "off",
		add_sub_cella_1.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_1.shared_arith = "off",
		add_sub_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_2
	( 
	.cin(wire_add_sub_cella_1cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_2cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[2:2]),
	.dataf(wire_add_sub_cella_dataf[2:2]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_2.extended_lut = "off",
		add_sub_cella_2.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_2.shared_arith = "off",
		add_sub_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_3
	( 
	.cin(wire_add_sub_cella_2cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_3cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[3:3]),
	.dataf(wire_add_sub_cella_dataf[3:3]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_3.extended_lut = "off",
		add_sub_cella_3.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_3.shared_arith = "off",
		add_sub_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_4
	( 
	.cin(wire_add_sub_cella_3cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_4cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[4:4]),
	.dataf(wire_add_sub_cella_dataf[4:4]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_4.extended_lut = "off",
		add_sub_cella_4.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_4.shared_arith = "off",
		add_sub_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_5
	( 
	.cin(wire_add_sub_cella_4cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_5cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[5:5]),
	.dataf(wire_add_sub_cella_dataf[5:5]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_5.extended_lut = "off",
		add_sub_cella_5.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_5.shared_arith = "off",
		add_sub_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_6
	( 
	.cin(wire_add_sub_cella_5cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_6cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[6:6]),
	.dataf(wire_add_sub_cella_dataf[6:6]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_6.extended_lut = "off",
		add_sub_cella_6.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_6.shared_arith = "off",
		add_sub_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_7
	( 
	.cin(wire_add_sub_cella_6cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_7cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[7:7]),
	.dataf(wire_add_sub_cella_dataf[7:7]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_7.extended_lut = "off",
		add_sub_cella_7.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_7.shared_arith = "off",
		add_sub_cella_7.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_8
	( 
	.cin(wire_add_sub_cella_7cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_8cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[8:8]),
	.dataf(wire_add_sub_cella_dataf[8:8]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[8:8]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_8.extended_lut = "off",
		add_sub_cella_8.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_8.shared_arith = "off",
		add_sub_cella_8.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_9
	( 
	.cin(wire_add_sub_cella_8cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_9cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[9:9]),
	.dataf(wire_add_sub_cella_dataf[9:9]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[9:9]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_9.extended_lut = "off",
		add_sub_cella_9.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_9.shared_arith = "off",
		add_sub_cella_9.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_10
	( 
	.cin(wire_add_sub_cella_9cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_10cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[10:10]),
	.dataf(wire_add_sub_cella_dataf[10:10]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[10:10]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_10.extended_lut = "off",
		add_sub_cella_10.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_10.shared_arith = "off",
		add_sub_cella_10.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_11
	( 
	.cin(wire_add_sub_cella_10cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_11cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[11:11]),
	.dataf(wire_add_sub_cella_dataf[11:11]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[11:11]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_11.extended_lut = "off",
		add_sub_cella_11.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_11.shared_arith = "off",
		add_sub_cella_11.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_12
	( 
	.cin(wire_add_sub_cella_11cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_12cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[12:12]),
	.dataf(wire_add_sub_cella_dataf[12:12]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[12:12]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_12.extended_lut = "off",
		add_sub_cella_12.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_12.shared_arith = "off",
		add_sub_cella_12.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_13
	( 
	.cin(wire_add_sub_cella_12cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_13cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[13:13]),
	.dataf(wire_add_sub_cella_dataf[13:13]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[13:13]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_13.extended_lut = "off",
		add_sub_cella_13.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_13.shared_arith = "off",
		add_sub_cella_13.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_14
	( 
	.cin(wire_add_sub_cella_13cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_14cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[14:14]),
	.dataf(wire_add_sub_cella_dataf[14:14]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[14:14]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_14.extended_lut = "off",
		add_sub_cella_14.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_14.shared_arith = "off",
		add_sub_cella_14.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_15
	( 
	.cin(wire_add_sub_cella_14cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_15cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[15:15]),
	.dataf(wire_add_sub_cella_dataf[15:15]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[15:15]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_15.extended_lut = "off",
		add_sub_cella_15.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_15.shared_arith = "off",
		add_sub_cella_15.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_16
	( 
	.cin(wire_add_sub_cella_15cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_16cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[16:16]),
	.dataf(wire_add_sub_cella_dataf[16:16]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[16:16]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_16.extended_lut = "off",
		add_sub_cella_16.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_16.shared_arith = "off",
		add_sub_cella_16.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_17
	( 
	.cin(wire_add_sub_cella_16cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_17cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[17:17]),
	.dataf(wire_add_sub_cella_dataf[17:17]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[17:17]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_17.extended_lut = "off",
		add_sub_cella_17.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_17.shared_arith = "off",
		add_sub_cella_17.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_18
	( 
	.cin(wire_add_sub_cella_17cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_18cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[18:18]),
	.dataf(wire_add_sub_cella_dataf[18:18]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[18:18]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_18.extended_lut = "off",
		add_sub_cella_18.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_18.shared_arith = "off",
		add_sub_cella_18.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_19
	( 
	.cin(wire_add_sub_cella_18cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_19cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[19:19]),
	.dataf(wire_add_sub_cella_dataf[19:19]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[19:19]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_19.extended_lut = "off",
		add_sub_cella_19.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_19.shared_arith = "off",
		add_sub_cella_19.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_20
	( 
	.cin(wire_add_sub_cella_19cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_20cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[20:20]),
	.dataf(wire_add_sub_cella_dataf[20:20]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[20:20]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_20.extended_lut = "off",
		add_sub_cella_20.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_20.shared_arith = "off",
		add_sub_cella_20.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_21
	( 
	.cin(wire_add_sub_cella_20cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_21cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[21:21]),
	.dataf(wire_add_sub_cella_dataf[21:21]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[21:21]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_21.extended_lut = "off",
		add_sub_cella_21.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_21.shared_arith = "off",
		add_sub_cella_21.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_22
	( 
	.cin(wire_add_sub_cella_21cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_22cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[22:22]),
	.dataf(wire_add_sub_cella_dataf[22:22]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[22:22]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_22.extended_lut = "off",
		add_sub_cella_22.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_22.shared_arith = "off",
		add_sub_cella_22.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_23
	( 
	.cin((~ add_sub)),
	.combout(),
	.cout(wire_add_sub_cella_23cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[23:23]),
	.dataf(wire_add_sub_cella_dataf[23:23]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[23:23]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_23.extended_lut = "off",
		add_sub_cella_23.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_23.shared_arith = "off",
		add_sub_cella_23.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_24
	( 
	.cin(wire_add_sub_cella_23cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_24cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[24:24]),
	.dataf(wire_add_sub_cella_dataf[24:24]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[24:24]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_24.extended_lut = "off",
		add_sub_cella_24.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_24.shared_arith = "off",
		add_sub_cella_24.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_25
	( 
	.cin(wire_add_sub_cella_24cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_25cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[25:25]),
	.dataf(wire_add_sub_cella_dataf[25:25]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[25:25]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_25.extended_lut = "off",
		add_sub_cella_25.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_25.shared_arith = "off",
		add_sub_cella_25.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_26
	( 
	.cin(wire_add_sub_cella_25cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_26cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[26:26]),
	.dataf(wire_add_sub_cella_dataf[26:26]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[26:26]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_26.extended_lut = "off",
		add_sub_cella_26.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_26.shared_arith = "off",
		add_sub_cella_26.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_27
	( 
	.cin(wire_add_sub_cella_26cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_27cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[27:27]),
	.dataf(wire_add_sub_cella_dataf[27:27]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[27:27]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_27.extended_lut = "off",
		add_sub_cella_27.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_27.shared_arith = "off",
		add_sub_cella_27.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_28
	( 
	.cin(wire_add_sub_cella_27cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_28cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[28:28]),
	.dataf(wire_add_sub_cella_dataf[28:28]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[28:28]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_28.extended_lut = "off",
		add_sub_cella_28.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_28.shared_arith = "off",
		add_sub_cella_28.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_29
	( 
	.cin(wire_add_sub_cella_28cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_29cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[29:29]),
	.dataf(wire_add_sub_cella_dataf[29:29]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[29:29]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_29.extended_lut = "off",
		add_sub_cella_29.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_29.shared_arith = "off",
		add_sub_cella_29.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_30
	( 
	.cin(wire_add_sub_cella_29cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_30cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[30:30]),
	.dataf(wire_add_sub_cella_dataf[30:30]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[30:30]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_30.extended_lut = "off",
		add_sub_cella_30.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_30.shared_arith = "off",
		add_sub_cella_30.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_31
	( 
	.cin(wire_add_sub_cella_30cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_31cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[31:31]),
	.dataf(wire_add_sub_cella_dataf[31:31]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[31:31]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_31.extended_lut = "off",
		add_sub_cella_31.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_31.shared_arith = "off",
		add_sub_cella_31.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_32
	( 
	.cin(wire_add_sub_cella_31cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_32cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[32:32]),
	.dataf(wire_add_sub_cella_dataf[32:32]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[32:32]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_32.extended_lut = "off",
		add_sub_cella_32.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_32.shared_arith = "off",
		add_sub_cella_32.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_33
	( 
	.cin(wire_add_sub_cella_32cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_33cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[33:33]),
	.dataf(wire_add_sub_cella_dataf[33:33]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[33:33]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_33.extended_lut = "off",
		add_sub_cella_33.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_33.shared_arith = "off",
		add_sub_cella_33.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_34
	( 
	.cin(wire_add_sub_cella_33cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_34cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[34:34]),
	.dataf(wire_add_sub_cella_dataf[34:34]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[34:34]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_34.extended_lut = "off",
		add_sub_cella_34.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_34.shared_arith = "off",
		add_sub_cella_34.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_35
	( 
	.cin(wire_add_sub_cella_34cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_35cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[35:35]),
	.dataf(wire_add_sub_cella_dataf[35:35]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[35:35]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_35.extended_lut = "off",
		add_sub_cella_35.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_35.shared_arith = "off",
		add_sub_cella_35.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_36
	( 
	.cin(wire_add_sub_cella_35cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_36cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[36:36]),
	.dataf(wire_add_sub_cella_dataf[36:36]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[36:36]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_36.extended_lut = "off",
		add_sub_cella_36.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_36.shared_arith = "off",
		add_sub_cella_36.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_37
	( 
	.cin(wire_add_sub_cella_36cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_37cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[37:37]),
	.dataf(wire_add_sub_cella_dataf[37:37]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[37:37]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_37.extended_lut = "off",
		add_sub_cella_37.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_37.shared_arith = "off",
		add_sub_cella_37.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_38
	( 
	.cin(wire_add_sub_cella_37cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_38cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[38:38]),
	.dataf(wire_add_sub_cella_dataf[38:38]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[38:38]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_38.extended_lut = "off",
		add_sub_cella_38.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_38.shared_arith = "off",
		add_sub_cella_38.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_39
	( 
	.cin(wire_add_sub_cella_38cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_39cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[39:39]),
	.dataf(wire_add_sub_cella_dataf[39:39]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[39:39]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_39.extended_lut = "off",
		add_sub_cella_39.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_39.shared_arith = "off",
		add_sub_cella_39.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_40
	( 
	.cin(wire_add_sub_cella_39cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_40cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[40:40]),
	.dataf(wire_add_sub_cella_dataf[40:40]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[40:40]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_40.extended_lut = "off",
		add_sub_cella_40.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_40.shared_arith = "off",
		add_sub_cella_40.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_41
	( 
	.cin(wire_add_sub_cella_40cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_41cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[41:41]),
	.dataf(wire_add_sub_cella_dataf[41:41]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[41:41]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_41.extended_lut = "off",
		add_sub_cella_41.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_41.shared_arith = "off",
		add_sub_cella_41.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_42
	( 
	.cin(wire_add_sub_cella_41cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_42cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[42:42]),
	.dataf(wire_add_sub_cella_dataf[42:42]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[42:42]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_42.extended_lut = "off",
		add_sub_cella_42.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_42.shared_arith = "off",
		add_sub_cella_42.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_43
	( 
	.cin(wire_add_sub_cella_42cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_43cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[43:43]),
	.dataf(wire_add_sub_cella_dataf[43:43]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[43:43]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_43.extended_lut = "off",
		add_sub_cella_43.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_43.shared_arith = "off",
		add_sub_cella_43.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_44
	( 
	.cin(wire_add_sub_cella_43cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_44cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[44:44]),
	.dataf(wire_add_sub_cella_dataf[44:44]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[44:44]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_44.extended_lut = "off",
		add_sub_cella_44.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_44.shared_arith = "off",
		add_sub_cella_44.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_45
	( 
	.cin(wire_add_sub_cella_44cout[0:0]),
	.combout(),
	.cout(wire_add_sub_cella_45cout[0:0]),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[45:45]),
	.dataf(wire_add_sub_cella_dataf[45:45]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[45:45]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_45.extended_lut = "off",
		add_sub_cella_45.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_45.shared_arith = "off",
		add_sub_cella_45.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   add_sub_cella_46
	( 
	.cin(wire_add_sub_cella_45cout[0:0]),
	.combout(),
	.cout(),
	.datac(add_sub),
	.datad(wire_add_sub_cella_datad[46:46]),
	.dataf(wire_add_sub_cella_dataf[46:46]),
	.shareout(),
	.sumout(wire_add_sub_cella_sumout[46:46]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		add_sub_cella_46.extended_lut = "off",
		add_sub_cella_46.lut_mask = 64'h00000FF00000FF00,
		add_sub_cella_46.shared_arith = "off",
		add_sub_cella_46.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_add_sub_cella_datad = dataa,
		wire_add_sub_cella_dataf = datab;
	cyclonev_lcell_comb   inter_regrs_cina_0
	( 
	.cin(wire_add_sub_cella_22cout[0:0]),
	.combout(),
	.cout(),
	.dataa(1'b1),
	.shareout(),
	.sumout(wire_inter_regrs_cina_sumout[0:0]),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_cina_0.extended_lut = "off",
		inter_regrs_cina_0.lut_mask = 64'h0000AAAA00005555,
		inter_regrs_cina_0.shared_arith = "off",
		inter_regrs_cina_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   inter_regrs_couta_0
	( 
	.cin(1'b0),
	.combout(),
	.cout(wire_inter_regrs_couta_0cout[0:0]),
	.dataa(inter_regrs_cin_ffa0),
	.shareout(),
	.sumout(),
	.datab(1'b0),
	.datac(1'b0),
	.datad(1'b0),
	.datae(1'b0),
	.dataf(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		inter_regrs_couta_0.extended_lut = "off",
		inter_regrs_couta_0.lut_mask = 64'h000055550000AAAA,
		inter_regrs_couta_0.shared_arith = "off",
		inter_regrs_couta_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_0
	( 
	.cin(add_sub_regra0),
	.combout(),
	.cout(wire_pad_cella_0cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[0:0]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_0.extended_lut = "off",
		pad_cella_0.lut_mask = 64'h00000FF00000FF00,
		pad_cella_0.shared_arith = "off",
		pad_cella_0.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_1
	( 
	.cin(wire_pad_cella_0cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_1cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[1:1]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[1:1]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_1.extended_lut = "off",
		pad_cella_1.lut_mask = 64'h00000FF00000FF00,
		pad_cella_1.shared_arith = "off",
		pad_cella_1.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_2
	( 
	.cin(wire_pad_cella_1cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_2cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[2:2]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[2:2]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_2.extended_lut = "off",
		pad_cella_2.lut_mask = 64'h00000FF00000FF00,
		pad_cella_2.shared_arith = "off",
		pad_cella_2.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_3
	( 
	.cin(wire_pad_cella_2cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_3cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[3:3]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[3:3]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_3.extended_lut = "off",
		pad_cella_3.lut_mask = 64'h00000FF00000FF00,
		pad_cella_3.shared_arith = "off",
		pad_cella_3.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_4
	( 
	.cin(wire_pad_cella_3cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_4cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[4:4]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[4:4]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_4.extended_lut = "off",
		pad_cella_4.lut_mask = 64'h00000FF00000FF00,
		pad_cella_4.shared_arith = "off",
		pad_cella_4.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_5
	( 
	.cin(wire_pad_cella_4cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_5cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[5:5]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[5:5]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_5.extended_lut = "off",
		pad_cella_5.lut_mask = 64'h00000FF00000FF00,
		pad_cella_5.shared_arith = "off",
		pad_cella_5.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_6
	( 
	.cin(wire_pad_cella_5cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_6cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[6:6]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[6:6]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_6.extended_lut = "off",
		pad_cella_6.lut_mask = 64'h00000FF00000FF00,
		pad_cella_6.shared_arith = "off",
		pad_cella_6.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_7
	( 
	.cin(wire_pad_cella_6cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_7cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[7:7]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[7:7]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_7.extended_lut = "off",
		pad_cella_7.lut_mask = 64'h00000FF00000FF00,
		pad_cella_7.shared_arith = "off",
		pad_cella_7.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_8
	( 
	.cin(wire_pad_cella_7cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_8cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[8:8]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[8:8]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_8.extended_lut = "off",
		pad_cella_8.lut_mask = 64'h00000FF00000FF00,
		pad_cella_8.shared_arith = "off",
		pad_cella_8.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_9
	( 
	.cin(wire_pad_cella_8cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_9cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[9:9]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[9:9]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_9.extended_lut = "off",
		pad_cella_9.lut_mask = 64'h00000FF00000FF00,
		pad_cella_9.shared_arith = "off",
		pad_cella_9.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_10
	( 
	.cin(wire_pad_cella_9cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_10cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[10:10]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[10:10]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_10.extended_lut = "off",
		pad_cella_10.lut_mask = 64'h00000FF00000FF00,
		pad_cella_10.shared_arith = "off",
		pad_cella_10.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_11
	( 
	.cin(wire_pad_cella_10cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_11cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[11:11]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[11:11]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_11.extended_lut = "off",
		pad_cella_11.lut_mask = 64'h00000FF00000FF00,
		pad_cella_11.shared_arith = "off",
		pad_cella_11.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_12
	( 
	.cin(wire_pad_cella_11cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_12cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[12:12]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[12:12]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_12.extended_lut = "off",
		pad_cella_12.lut_mask = 64'h00000FF00000FF00,
		pad_cella_12.shared_arith = "off",
		pad_cella_12.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_13
	( 
	.cin(wire_pad_cella_12cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_13cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[13:13]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[13:13]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_13.extended_lut = "off",
		pad_cella_13.lut_mask = 64'h00000FF00000FF00,
		pad_cella_13.shared_arith = "off",
		pad_cella_13.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_14
	( 
	.cin(wire_pad_cella_13cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_14cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[14:14]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[14:14]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_14.extended_lut = "off",
		pad_cella_14.lut_mask = 64'h00000FF00000FF00,
		pad_cella_14.shared_arith = "off",
		pad_cella_14.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_15
	( 
	.cin(wire_pad_cella_14cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_15cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[15:15]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[15:15]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_15.extended_lut = "off",
		pad_cella_15.lut_mask = 64'h00000FF00000FF00,
		pad_cella_15.shared_arith = "off",
		pad_cella_15.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_16
	( 
	.cin(wire_pad_cella_15cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_16cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[16:16]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[16:16]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_16.extended_lut = "off",
		pad_cella_16.lut_mask = 64'h00000FF00000FF00,
		pad_cella_16.shared_arith = "off",
		pad_cella_16.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_17
	( 
	.cin(wire_pad_cella_16cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_17cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[17:17]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[17:17]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_17.extended_lut = "off",
		pad_cella_17.lut_mask = 64'h00000FF00000FF00,
		pad_cella_17.shared_arith = "off",
		pad_cella_17.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_18
	( 
	.cin(wire_pad_cella_17cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_18cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[18:18]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[18:18]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_18.extended_lut = "off",
		pad_cella_18.lut_mask = 64'h00000FF00000FF00,
		pad_cella_18.shared_arith = "off",
		pad_cella_18.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_19
	( 
	.cin(wire_pad_cella_18cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_19cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[19:19]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[19:19]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_19.extended_lut = "off",
		pad_cella_19.lut_mask = 64'h00000FF00000FF00,
		pad_cella_19.shared_arith = "off",
		pad_cella_19.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_20
	( 
	.cin(wire_pad_cella_19cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_20cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[20:20]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[20:20]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_20.extended_lut = "off",
		pad_cella_20.lut_mask = 64'h00000FF00000FF00,
		pad_cella_20.shared_arith = "off",
		pad_cella_20.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_21
	( 
	.cin(wire_pad_cella_20cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_21cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[21:21]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[21:21]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_21.extended_lut = "off",
		pad_cella_21.lut_mask = 64'h00000FF00000FF00,
		pad_cella_21.shared_arith = "off",
		pad_cella_21.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_22
	( 
	.cin(wire_pad_cella_21cout[0:0]),
	.combout(),
	.cout(),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[22:22]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[22:22]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_22.extended_lut = "off",
		pad_cella_22.lut_mask = 64'h00000FF00000FF00,
		pad_cella_22.shared_arith = "off",
		pad_cella_22.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_23
	( 
	.cin(wire_inter_regrs_couta_0cout),
	.combout(),
	.cout(wire_pad_cella_23cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[23:23]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[23:23]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_23.extended_lut = "off",
		pad_cella_23.lut_mask = 64'h00000FF00000FF00,
		pad_cella_23.shared_arith = "off",
		pad_cella_23.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_24
	( 
	.cin(wire_pad_cella_23cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_24cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[24:24]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[24:24]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_24.extended_lut = "off",
		pad_cella_24.lut_mask = 64'h00000FF00000FF00,
		pad_cella_24.shared_arith = "off",
		pad_cella_24.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_25
	( 
	.cin(wire_pad_cella_24cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_25cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[25:25]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[25:25]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_25.extended_lut = "off",
		pad_cella_25.lut_mask = 64'h00000FF00000FF00,
		pad_cella_25.shared_arith = "off",
		pad_cella_25.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_26
	( 
	.cin(wire_pad_cella_25cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_26cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[26:26]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[26:26]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_26.extended_lut = "off",
		pad_cella_26.lut_mask = 64'h00000FF00000FF00,
		pad_cella_26.shared_arith = "off",
		pad_cella_26.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_27
	( 
	.cin(wire_pad_cella_26cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_27cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[27:27]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[27:27]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_27.extended_lut = "off",
		pad_cella_27.lut_mask = 64'h00000FF00000FF00,
		pad_cella_27.shared_arith = "off",
		pad_cella_27.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_28
	( 
	.cin(wire_pad_cella_27cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_28cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[28:28]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[28:28]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_28.extended_lut = "off",
		pad_cella_28.lut_mask = 64'h00000FF00000FF00,
		pad_cella_28.shared_arith = "off",
		pad_cella_28.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_29
	( 
	.cin(wire_pad_cella_28cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_29cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[29:29]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[29:29]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_29.extended_lut = "off",
		pad_cella_29.lut_mask = 64'h00000FF00000FF00,
		pad_cella_29.shared_arith = "off",
		pad_cella_29.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_30
	( 
	.cin(wire_pad_cella_29cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_30cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[30:30]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[30:30]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_30.extended_lut = "off",
		pad_cella_30.lut_mask = 64'h00000FF00000FF00,
		pad_cella_30.shared_arith = "off",
		pad_cella_30.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_31
	( 
	.cin(wire_pad_cella_30cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_31cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[31:31]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[31:31]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_31.extended_lut = "off",
		pad_cella_31.lut_mask = 64'h00000FF00000FF00,
		pad_cella_31.shared_arith = "off",
		pad_cella_31.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_32
	( 
	.cin(wire_pad_cella_31cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_32cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[32:32]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[32:32]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_32.extended_lut = "off",
		pad_cella_32.lut_mask = 64'h00000FF00000FF00,
		pad_cella_32.shared_arith = "off",
		pad_cella_32.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_33
	( 
	.cin(wire_pad_cella_32cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_33cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[33:33]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[33:33]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_33.extended_lut = "off",
		pad_cella_33.lut_mask = 64'h00000FF00000FF00,
		pad_cella_33.shared_arith = "off",
		pad_cella_33.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_34
	( 
	.cin(wire_pad_cella_33cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_34cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[34:34]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[34:34]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_34.extended_lut = "off",
		pad_cella_34.lut_mask = 64'h00000FF00000FF00,
		pad_cella_34.shared_arith = "off",
		pad_cella_34.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_35
	( 
	.cin(wire_pad_cella_34cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_35cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[35:35]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[35:35]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_35.extended_lut = "off",
		pad_cella_35.lut_mask = 64'h00000FF00000FF00,
		pad_cella_35.shared_arith = "off",
		pad_cella_35.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_36
	( 
	.cin(wire_pad_cella_35cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_36cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[36:36]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[36:36]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_36.extended_lut = "off",
		pad_cella_36.lut_mask = 64'h00000FF00000FF00,
		pad_cella_36.shared_arith = "off",
		pad_cella_36.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_37
	( 
	.cin(wire_pad_cella_36cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_37cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[37:37]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[37:37]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_37.extended_lut = "off",
		pad_cella_37.lut_mask = 64'h00000FF00000FF00,
		pad_cella_37.shared_arith = "off",
		pad_cella_37.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_38
	( 
	.cin(wire_pad_cella_37cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_38cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[38:38]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[38:38]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_38.extended_lut = "off",
		pad_cella_38.lut_mask = 64'h00000FF00000FF00,
		pad_cella_38.shared_arith = "off",
		pad_cella_38.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_39
	( 
	.cin(wire_pad_cella_38cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_39cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[39:39]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[39:39]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_39.extended_lut = "off",
		pad_cella_39.lut_mask = 64'h00000FF00000FF00,
		pad_cella_39.shared_arith = "off",
		pad_cella_39.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_40
	( 
	.cin(wire_pad_cella_39cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_40cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[40:40]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[40:40]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_40.extended_lut = "off",
		pad_cella_40.lut_mask = 64'h00000FF00000FF00,
		pad_cella_40.shared_arith = "off",
		pad_cella_40.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_41
	( 
	.cin(wire_pad_cella_40cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_41cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[41:41]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[41:41]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_41.extended_lut = "off",
		pad_cella_41.lut_mask = 64'h00000FF00000FF00,
		pad_cella_41.shared_arith = "off",
		pad_cella_41.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_42
	( 
	.cin(wire_pad_cella_41cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_42cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[42:42]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[42:42]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_42.extended_lut = "off",
		pad_cella_42.lut_mask = 64'h00000FF00000FF00,
		pad_cella_42.shared_arith = "off",
		pad_cella_42.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_43
	( 
	.cin(wire_pad_cella_42cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_43cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[43:43]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[43:43]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_43.extended_lut = "off",
		pad_cella_43.lut_mask = 64'h00000FF00000FF00,
		pad_cella_43.shared_arith = "off",
		pad_cella_43.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_44
	( 
	.cin(wire_pad_cella_43cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_44cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[44:44]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[44:44]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_44.extended_lut = "off",
		pad_cella_44.lut_mask = 64'h00000FF00000FF00,
		pad_cella_44.shared_arith = "off",
		pad_cella_44.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_45
	( 
	.cin(wire_pad_cella_44cout[0:0]),
	.combout(),
	.cout(wire_pad_cella_45cout[0:0]),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[45:45]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[45:45]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_45.extended_lut = "off",
		pad_cella_45.lut_mask = 64'h00000FF00000FF00,
		pad_cella_45.shared_arith = "off",
		pad_cella_45.lpm_type = "cyclonev_lcell_comb";
	cyclonev_lcell_comb   pad_cella_46
	( 
	.cin(wire_pad_cella_45cout[0:0]),
	.combout(),
	.cout(),
	.datac((~ add_sub_regra0)),
	.datad(wire_pad_cella_datad[46:46]),
	.dataf(1'b0),
	.shareout(),
	.sumout(wire_pad_cella_sumout[46:46]),
	.dataa(1'b0),
	.datab(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		pad_cella_46.extended_lut = "off",
		pad_cella_46.lut_mask = 64'h00000FF00000FF00,
		pad_cella_46.shared_arith = "off",
		pad_cella_46.lpm_type = "cyclonev_lcell_comb";
	assign
		wire_pad_cella_datad = {add_sub_cell_ffa};
	assign
		result = pad_cell_ffa[46:0];
endmodule //fplog_add_sub1234


//lpm_mult DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=3 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=8 LPM_WIDTHB=27 LPM_WIDTHP=35 aclr clken clock dataa datab result
//VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_mult 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_mult123
	( 
	aclr,
	clken,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clken;
	input   clock;
	input   [7:0]  dataa;
	input   [26:0]  datab;
	output   [34:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg  [7:0]  dataa_input_reg;
	reg  [26:0]  datab_input_reg;
	reg  [34:0]  result_output_reg;
	reg  [34:0]  result_extra0_reg;
	wire [7:0]    dataa_wire;
	wire [26:0]    datab_wire;
	wire [34:0]    result_wire;


	// synopsys translate_off
	initial
		dataa_input_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			dataa_input_reg <= 8'b0;
		else
			if (clken == 1'b1)
				dataa_input_reg <= dataa;
	// synopsys translate_off
	initial
		datab_input_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			datab_input_reg <= 27'b0;
		else
			if (clken == 1'b1)
				datab_input_reg <= datab;
	// synopsys translate_off
	initial
		result_output_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			result_output_reg <= 35'b0;
		else
			if (clken == 1'b1)
				result_output_reg <= result_extra0_reg;
	// synopsys translate_off
	initial
		result_extra0_reg = 0;
	// synopsys translate_on
	always @(posedge clock or posedge aclr)
		if (aclr == 1'b1)
			result_extra0_reg <= 35'b0;
		else
			if (clken == 1'b1)
				result_extra0_reg <= result_wire[34:0];

	assign dataa_wire = dataa_input_reg;
	assign datab_wire = datab_input_reg;
	assign result_wire = dataa_wire * datab_wire;
	assign result = ({result_output_reg});

endmodule //fplog_mult123

//synthesis_resources = lut 2132 mux21 31 reg 1950 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fplog_altfp_log
	( 
	clock,
	data,
	nan,
	result,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [31:0]  data;
	output   nan;
	output   [31:0]  result;
	output   zero;

	wire  [31:0]   wire_Lshiftsmall_result;
	wire  [63:0]   wire_lzc_norm_L_result;
	wire  [31:0]   wire_Rshiftsmall_result;
	wire  wire_exp_nan_result;
	wire  wire_exp_zero_result;
	wire  wire_man_inf_result;
	wire  wire_man_nan_result;
	wire  [38:0]   wire_add1_result;
	wire  [30:0]   wire_add2_result;
	wire  [7:0]   wire_exp_biase_sub_result;
	wire  [11:0]   wire_sub1_result;
	wire  [7:0]   wire_sub2_result;
	wire  [5:0]   wire_sub3_result;
	wire  [25:0]   wire_sub4_result;
	wire  [7:0]   wire_sub5_result;
	wire  [7:0]   wire_sub6_result;
	wire  [38:0]   wire_range_reduction_almostlog;
	wire  [25:0]   wire_range_reduction_z;
	wire  [5:0]   wire_lzc_norm_E_q;
	wire  [4:0]   wire_lzoc_q;
	wire  [13:0]   wire_squarer_result;
	reg	[34:0]	absELog2_pipe_reg0;
	reg	[34:0]	absELog2_pipe_reg1;
	reg	[34:0]	absELog2_pipe_reg2;
	reg	[11:0]	absZ0_pipe_reg0;
	reg	[11:0]	absZ0_pipe_reg1;
	reg	[11:0]	absZ0_pipe_reg2;
	reg	[11:0]	absZ0_pipe_reg3;
	reg	[11:0]	absZ0_pipe_reg4;
	reg	[11:0]	absZ0_pipe_reg5;
	reg	[11:0]	absZ0_pipe_reg6;
	reg	[11:0]	absZ0_pipe_reg7;
	reg	[11:0]	absZ0_pipe_reg8;
	reg	[11:0]	absZ0_pipe_reg9;
	reg	[11:0]	absZ0s_pipe1_reg0;
	reg	[11:0]	absZ0s_pipe1_reg1;
	reg	[11:0]	absZ0s_pipe1_reg2;
	reg	[11:0]	absZ0s_pipe1_reg3;
	reg	[11:0]	absZ0s_reg0;
	reg	[38:0]	almostLog_pipe_reg0;
	reg	[38:0]	almostLog_pipe_reg1;
	reg	[38:0]	almostLog_pipe_reg2;
	reg	[0:0]	doRR_reg0;
	reg	[0:0]	doRR_reg1;
	reg	[7:0]	E0_pipe_reg0;
	reg	[7:0]	E0_pipe_reg1;
	reg	[7:0]	E0_pipe_reg2;
	reg	[7:0]	E0_pipe_reg3;
	reg	[7:0]	E0_pipe_reg4;
	reg	[7:0]	E0_pipe_reg5;
	reg	[7:0]	E0_pipe_reg6;
	reg	[7:0]	E0_pipe_reg7;
	reg	[7:0]	E0_pipe_reg8;
	reg	[7:0]	E0_pipe_reg9;
	reg	[4:0]	E_normal_pipe_reg0;
	reg	[0:0]	exp_is_ebiase_pipe_reg0;
	reg	[0:0]	exp_is_ebiase_pipe_reg1;
	reg	[0:0]	exp_is_ebiase_pipe_reg2;
	reg	[0:0]	input_is_infinity_pipe_reg0;
	reg	[0:0]	input_is_infinity_pipe_reg1;
	reg	[0:0]	input_is_infinity_pipe_reg10;
	reg	[0:0]	input_is_infinity_pipe_reg11;
	reg	[0:0]	input_is_infinity_pipe_reg12;
	reg	[0:0]	input_is_infinity_pipe_reg13;
	reg	[0:0]	input_is_infinity_pipe_reg14;
	reg	[0:0]	input_is_infinity_pipe_reg15;
	reg	[0:0]	input_is_infinity_pipe_reg16;
	reg	[0:0]	input_is_infinity_pipe_reg17;
	reg	[0:0]	input_is_infinity_pipe_reg2;
	reg	[0:0]	input_is_infinity_pipe_reg3;
	reg	[0:0]	input_is_infinity_pipe_reg4;
	reg	[0:0]	input_is_infinity_pipe_reg5;
	reg	[0:0]	input_is_infinity_pipe_reg6;
	reg	[0:0]	input_is_infinity_pipe_reg7;
	reg	[0:0]	input_is_infinity_pipe_reg8;
	reg	[0:0]	input_is_infinity_pipe_reg9;
	reg	[0:0]	input_is_nan_pipe_reg0;
	reg	[0:0]	input_is_nan_pipe_reg1;
	reg	[0:0]	input_is_nan_pipe_reg10;
	reg	[0:0]	input_is_nan_pipe_reg11;
	reg	[0:0]	input_is_nan_pipe_reg12;
	reg	[0:0]	input_is_nan_pipe_reg13;
	reg	[0:0]	input_is_nan_pipe_reg14;
	reg	[0:0]	input_is_nan_pipe_reg15;
	reg	[0:0]	input_is_nan_pipe_reg16;
	reg	[0:0]	input_is_nan_pipe_reg17;
	reg	[0:0]	input_is_nan_pipe_reg2;
	reg	[0:0]	input_is_nan_pipe_reg3;
	reg	[0:0]	input_is_nan_pipe_reg4;
	reg	[0:0]	input_is_nan_pipe_reg5;
	reg	[0:0]	input_is_nan_pipe_reg6;
	reg	[0:0]	input_is_nan_pipe_reg7;
	reg	[0:0]	input_is_nan_pipe_reg8;
	reg	[0:0]	input_is_nan_pipe_reg9;
	reg	[0:0]	input_is_one_pipe_reg0;
	reg	[0:0]	input_is_one_pipe_reg1;
	reg	[0:0]	input_is_one_pipe_reg10;
	reg	[0:0]	input_is_one_pipe_reg11;
	reg	[0:0]	input_is_one_pipe_reg12;
	reg	[0:0]	input_is_one_pipe_reg13;
	reg	[0:0]	input_is_one_pipe_reg14;
	reg	[0:0]	input_is_one_pipe_reg15;
	reg	[0:0]	input_is_one_pipe_reg16;
	reg	[0:0]	input_is_one_pipe_reg17;
	reg	[0:0]	input_is_one_pipe_reg2;
	reg	[0:0]	input_is_one_pipe_reg3;
	reg	[0:0]	input_is_one_pipe_reg4;
	reg	[0:0]	input_is_one_pipe_reg5;
	reg	[0:0]	input_is_one_pipe_reg6;
	reg	[0:0]	input_is_one_pipe_reg7;
	reg	[0:0]	input_is_one_pipe_reg8;
	reg	[0:0]	input_is_one_pipe_reg9;
	reg	[0:0]	input_is_zero_pipe_reg0;
	reg	[0:0]	input_is_zero_pipe_reg1;
	reg	[0:0]	input_is_zero_pipe_reg10;
	reg	[0:0]	input_is_zero_pipe_reg11;
	reg	[0:0]	input_is_zero_pipe_reg12;
	reg	[0:0]	input_is_zero_pipe_reg13;
	reg	[0:0]	input_is_zero_pipe_reg14;
	reg	[0:0]	input_is_zero_pipe_reg15;
	reg	[0:0]	input_is_zero_pipe_reg16;
	reg	[0:0]	input_is_zero_pipe_reg17;
	reg	[0:0]	input_is_zero_pipe_reg2;
	reg	[0:0]	input_is_zero_pipe_reg3;
	reg	[0:0]	input_is_zero_pipe_reg4;
	reg	[0:0]	input_is_zero_pipe_reg5;
	reg	[0:0]	input_is_zero_pipe_reg6;
	reg	[0:0]	input_is_zero_pipe_reg7;
	reg	[0:0]	input_is_zero_pipe_reg8;
	reg	[0:0]	input_is_zero_pipe_reg9;
	reg	[46:0]	Log_normal_normd_pipe_reg0;
	reg	[46:0]	Log_normal_reg0;
	reg	[26:0]	Log_small_normd_pipe_reg0;
	reg	[26:0]	Log_small_normd_pipe_reg1;
	reg	[5:0]	Lshiftval_reg0;
	reg	[5:0]	Lshiftval_reg1;
	reg	[5:0]	Lshiftval_reg2;
	reg	[5:0]	Lshiftval_reg3;
	reg	[4:0]	lzo_pipe1_reg0;
	reg	[4:0]	lzo_pipe1_reg1;
	reg	[4:0]	lzo_pipe1_reg2;
	reg	[4:0]	lzo_pipe1_reg3;
	reg	[4:0]	lzo_pipe1_reg4;
	reg	[4:0]	lzo_pipe1_reg5;
	reg	[4:0]	lzo_pipe1_reg6;
	reg	[4:0]	lzo_pipe1_reg7;
	reg	[4:0]	lzo_pipe1_reg8;
	reg	[4:0]	lzo_pipe1_reg9;
	reg	[4:0]	lzo_reg0;
	reg	[4:0]	lzo_reg1;
	reg	[4:0]	lzo_reg2;
	reg	[4:0]	lzo_reg3;
	reg	[4:0]	lzo_reg4;
	reg	[4:0]	lzo_reg5;
	reg	[4:0]	lzo_reg6;
	reg	[4:0]	lzo_reg7;
	reg	[0:0]	sign_data_reg0;
	reg	[0:0]	sign_data_reg1;
	reg	[0:0]	sign_data_reg2;
	reg	[0:0]	small_flag_pipe_reg0;
	reg	[0:0]	small_flag_pipe_reg1;
	reg	[0:0]	small_flag_pipe_reg2;
	reg	[0:0]	small_flag_pipe_reg3;
	reg	[0:0]	small_flag_pipe_reg4;
	reg	[0:0]	small_flag_pipe_reg5;
	reg	[0:0]	small_flag_pipe_reg6;
	reg	[0:0]	small_flag_pipe_reg7;
	reg	[0:0]	small_flag_pipe_reg8;
	reg	[0:0]	small_flag_pipe_reg9;
	reg	[0:0]	sR_pipe1_reg0;
	reg	[0:0]	sR_pipe1_reg1;
	reg	[0:0]	sR_pipe1_reg2;
	reg	[0:0]	sR_pipe1_reg3;
	reg	[0:0]	sR_pipe1_reg4;
	reg	[0:0]	sR_pipe1_reg5;
	reg	[0:0]	sR_pipe1_reg6;
	reg	[0:0]	sR_pipe1_reg7;
	reg	[0:0]	sR_pipe1_reg8;
	reg	[0:0]	sR_pipe1_reg9;
	reg	[0:0]	sR_pipe2_reg0;
	reg	[0:0]	sR_pipe2_reg1;
	reg	[0:0]	sR_pipe2_reg2;
	reg	[0:0]	sR_pipe2_reg3;
	reg	[0:0]	sR_pipe2_reg4;
	reg	[0:0]	sR_pipe2_reg5;
	reg	[0:0]	sR_pipe3_reg0;
	reg	[0:0]	sR_pipe3_reg1;
	reg	[0:0]	sR_pipe3_reg2;
	reg	[0:0]	sR_pipe3_reg3;
	reg	[0:0]	sR_pipe3_reg4;
	reg	[13:0]	Z2o2_pipe_reg0;
	reg	[13:0]	Z2o2_small_s_pipe_reg0;
	reg	[25:0]	Zfinal_reg0;
	reg	[25:0]	Zfinal_reg1;
	wire  [28:0]   wire_addsub1_result;
	wire  [46:0]   wire_addsub2_result;
	wire  [34:0]   wire_mult1_result;
	wire	[30:0]wire_mux_result0a_dataout;
	wire  [7:0]  absE;
	wire  [34:0]  absELog2;
	wire  [46:0]  absELog2_pad;
	wire  [34:0]  absELog2_pipe;
	wire  [11:0]  absZ0;
	wire  [11:0]  absZ0_pipe;
	wire  [11:0]  absZ0s;
	wire  [11:0]  absZ0s_pipe1;
	wire  [11:0]  absZ0s_pipe2;
	wire aclr;
	wire  [38:0]  almostLog;
	wire  [38:0]  almostLog_pipe;
	wire clk_en;
	wire  [7:0]  data_exp_is_ebiase;
	wire  doRR;
	wire  doRR_pipe;
	wire  [7:0]  E0;
	wire  [7:0]  E0_is_zero;
	wire  [7:0]  E0_pipe;
	wire  [1:0]  E0_sub;
	wire  [7:0]  E0offset;
	wire  [4:0]  E_normal;
	wire  [4:0]  E_normal_pipe;
	wire  [7:0]  E_small;
	wire  [30:0]  EFR;
	wire  [7:0]  ER;
	wire  exp_all_one;
	wire  exp_all_zero;
	wire  [7:0]  exp_biase;
	wire  [7:0]  exp_data;
	wire  exp_is_ebiase;
	wire  exp_is_ebiase_pipe;
	wire  First_bit;
	wire  input_is_infinity;
	wire  input_is_infinity_pipe;
	wire  input_is_nan;
	wire  input_is_nan_pipe;
	wire  input_is_one;
	wire  input_is_one_pipe;
	wire  input_is_zero;
	wire  input_is_zero_pipe;
	wire  [25:0]  Log1p_normal;
	wire  [26:0]  Log2;
	wire  [26:0]  Log_g;
	wire  [46:0]  Log_normal;
	wire  [46:0]  Log_normal_normd;
	wire  [46:0]  Log_normal_normd_pipe;
	wire  [46:0]  Log_normal_pipe;
	wire  [28:0]  Log_small;
	wire  [26:0]  Log_small1;
	wire  [26:0]  Log_small2;
	wire  [26:0]  Log_small_normd;
	wire  [26:0]  Log_small_normd_pipe;
	wire  [38:0]  LogF_normal;
	wire  [46:0]  LogF_normal_pad;
	wire  [5:0]  Lshiftval;
	wire  [4:0]  lzo;
	wire  [4:0]  lzo_pipe1;
	wire  [4:0]  lzo_pipe2;
	wire  [24:0]  man_above_half;
	wire  man_all_zero;
	wire  [24:0]  man_below_half;
	wire  [22:0]  man_data;
	wire  man_not_zero;
	wire  [4:0]  pfinal_s;
	wire  round;
	wire  [5:0]  Rshiftval;
	wire  sign_data;
	wire  sign_data_pipe;
	wire  small_flag;
	wire  small_flag_pipe;
	wire  [12:0]  squarerIn;
	wire  [12:0]  squarerIn0;
	wire  [12:0]  squarerIn1;
	wire  sR;
	wire  sR_pipe1;
	wire  sR_pipe2;
	wire  sR_pipe3;
	wire  [2:0]  sticky;
	wire  [24:0]  Y0;
	wire  [13:0]  Z2o2;
	wire  [13:0]  Z2o2_pipe;
	wire  [28:0]  Z2o2_small;
	wire  [13:0]  Z2o2_small_s;
	wire  [13:0]  Z2o2_small_s_pipe;
	wire  [28:0]  Z_small;
	wire  [25:0]  Zfinal;
	wire  [25:0]  Zfinal_pipe;

	fplog_altbarrel_shift   Lshiftsmall
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.data({absZ0, {20{1'b0}}}),
	.distance(Lshiftval[4:0]),
	.result(wire_Lshiftsmall_result));
	fplog_altbarrel_shift1   lzc_norm_L
	( 
	.data({Log_normal_pipe, {17{1'b0}}}),
	.distance((~ wire_lzc_norm_E_q)),
	.result(wire_lzc_norm_L_result));
	fplog_altbarrel_shift12   Rshiftsmall
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.data({Z2o2, {18{1'b0}}}),
	.distance(Rshiftval[4:0]),
	.result(wire_Rshiftsmall_result));
	fplog_altfp_log_and_or   exp_nan
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.data(exp_data),
	.result(wire_exp_nan_result));
	fplog_altfp_log_and_or1   exp_zero
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.data(exp_data),
	.result(wire_exp_zero_result));
	fplog_altfp_log_and_or12   man_inf
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.data(man_data),
	.result(wire_man_inf_result));
	fplog_altfp_log_and_or12   man_nan
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.data(man_data),
	.result(wire_man_nan_result));
	fplog_altfp_log_csa   add1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa({{13{1'b0}}, Log1p_normal}),
	.datab(almostLog),
	.result(wire_add1_result));
	fplog_altfp_log_csa1   add2
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa({ER, Log_g[26:4]}),
	.datab({{30{1'b0}}, round}),
	.result(wire_add2_result));
	fplog_altfp_log_csa12   exp_biase_sub
	( 
	.dataa(exp_data),
	.datab(exp_biase),
	.result(wire_exp_biase_sub_result));
	fplog_altfp_log_csa123   sub1
	( 
	.dataa({12{1'b0}}),
	.datab(Y0[11:0]),
	.result(wire_sub1_result));
	fplog_altfp_log_csa12   sub2
	( 
	.dataa({8{1'b0}}),
	.datab(E0),
	.result(wire_sub2_result));
	fplog_altfp_log_csa1234   sub3
	( 
	.dataa({1'b0, lzo}),
	.datab({1'b0, pfinal_s}),
	.result(wire_sub3_result));
	fplog_altfp_log_csa12345   sub4
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(Zfinal_pipe),
	.datab({{14{1'b0}}, Z2o2[13:2]}),
	.result(wire_sub4_result));
	fplog_altfp_log_csa123456   sub5
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa({1'b0, {5{1'b1}}, E0_sub}),
	.datab({{3{1'b0}}, lzo_pipe2}),
	.result(wire_sub5_result));
	fplog_altfp_log_csa12   sub6
	( 
	.dataa(E0offset),
	.datab({{3{1'b0}}, (~ E_normal)}),
	.result(wire_sub6_result));
	fplog_range_reduction   range_reduction
	( 
	.a0_in(man_data[22:18]),
	.aclr(aclr),
	.almostlog(wire_range_reduction_almostlog),
	.clk_en(clk_en),
	.clock(clock),
	.y0_in(Y0),
	.z(wire_range_reduction_z));
	fplog_altpriority_encoder   lzc_norm_E
	( 
	.aclr(aclr),
	.clk_en(clk_en),
	.clock(clock),
	.data({Log_normal, 17'b00000000000000001}),
	.q(wire_lzc_norm_E_q));
	fplog_altpriority_encoder1234567891011   lzoc
	( 
	.data({({23{First_bit}} ^ Y0[23:1]), 9'b000000001}),
	.q(wire_lzoc_q));
	fplog_altsquare   squarer
	( 
	.aclr(aclr),
	.clock(clock),
	.data(squarerIn),
	.ena(clk_en),
	.result(wire_squarer_result));
	// synopsys translate_off
	initial
		absELog2_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absELog2_pipe_reg0 <= 35'b0;
		else if  (clk_en == 1'b1)   absELog2_pipe_reg0 <= absELog2_pipe;
	// synopsys translate_off
	initial
		absELog2_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absELog2_pipe_reg1 <= 35'b0;
		else if  (clk_en == 1'b1)   absELog2_pipe_reg1 <= absELog2_pipe_reg0;
	// synopsys translate_off
	initial
		absELog2_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absELog2_pipe_reg2 <= 35'b0;
		else if  (clk_en == 1'b1)   absELog2_pipe_reg2 <= absELog2_pipe_reg1;
	// synopsys translate_off
	initial
		absZ0_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg0 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg0 <= absZ0_pipe;
	// synopsys translate_off
	initial
		absZ0_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg1 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg1 <= absZ0_pipe_reg0;
	// synopsys translate_off
	initial
		absZ0_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg2 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg2 <= absZ0_pipe_reg1;
	// synopsys translate_off
	initial
		absZ0_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg3 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg3 <= absZ0_pipe_reg2;
	// synopsys translate_off
	initial
		absZ0_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg4 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg4 <= absZ0_pipe_reg3;
	// synopsys translate_off
	initial
		absZ0_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg5 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg5 <= absZ0_pipe_reg4;
	// synopsys translate_off
	initial
		absZ0_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg6 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg6 <= absZ0_pipe_reg5;
	// synopsys translate_off
	initial
		absZ0_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg7 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg7 <= absZ0_pipe_reg6;
	// synopsys translate_off
	initial
		absZ0_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg8 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg8 <= absZ0_pipe_reg7;
	// synopsys translate_off
	initial
		absZ0_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0_pipe_reg9 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0_pipe_reg9 <= absZ0_pipe_reg8;
	// synopsys translate_off
	initial
		absZ0s_pipe1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0s_pipe1_reg0 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0s_pipe1_reg0 <= absZ0s_pipe1;
	// synopsys translate_off
	initial
		absZ0s_pipe1_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0s_pipe1_reg1 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0s_pipe1_reg1 <= absZ0s_pipe1_reg0;
	// synopsys translate_off
	initial
		absZ0s_pipe1_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0s_pipe1_reg2 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0s_pipe1_reg2 <= absZ0s_pipe1_reg1;
	// synopsys translate_off
	initial
		absZ0s_pipe1_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0s_pipe1_reg3 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0s_pipe1_reg3 <= absZ0s_pipe1_reg2;
	// synopsys translate_off
	initial
		absZ0s_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) absZ0s_reg0 <= 12'b0;
		else if  (clk_en == 1'b1)   absZ0s_reg0 <= absZ0s;
	// synopsys translate_off
	initial
		almostLog_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) almostLog_pipe_reg0 <= 39'b0;
		else if  (clk_en == 1'b1)   almostLog_pipe_reg0 <= almostLog_pipe;
	// synopsys translate_off
	initial
		almostLog_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) almostLog_pipe_reg1 <= 39'b0;
		else if  (clk_en == 1'b1)   almostLog_pipe_reg1 <= almostLog_pipe_reg0;
	// synopsys translate_off
	initial
		almostLog_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) almostLog_pipe_reg2 <= 39'b0;
		else if  (clk_en == 1'b1)   almostLog_pipe_reg2 <= almostLog_pipe_reg1;
	// synopsys translate_off
	initial
		doRR_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) doRR_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   doRR_reg0 <= doRR;
	// synopsys translate_off
	initial
		doRR_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) doRR_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   doRR_reg1 <= doRR_reg0;
	// synopsys translate_off
	initial
		E0_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg0 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg0 <= E0_pipe;
	// synopsys translate_off
	initial
		E0_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg1 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg1 <= E0_pipe_reg0;
	// synopsys translate_off
	initial
		E0_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg2 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg2 <= E0_pipe_reg1;
	// synopsys translate_off
	initial
		E0_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg3 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg3 <= E0_pipe_reg2;
	// synopsys translate_off
	initial
		E0_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg4 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg4 <= E0_pipe_reg3;
	// synopsys translate_off
	initial
		E0_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg5 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg5 <= E0_pipe_reg4;
	// synopsys translate_off
	initial
		E0_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg6 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg6 <= E0_pipe_reg5;
	// synopsys translate_off
	initial
		E0_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg7 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg7 <= E0_pipe_reg6;
	// synopsys translate_off
	initial
		E0_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg8 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg8 <= E0_pipe_reg7;
	// synopsys translate_off
	initial
		E0_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E0_pipe_reg9 <= 8'b0;
		else if  (clk_en == 1'b1)   E0_pipe_reg9 <= E0_pipe_reg8;
	// synopsys translate_off
	initial
		E_normal_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) E_normal_pipe_reg0 <= 5'b0;
		else if  (clk_en == 1'b1)   E_normal_pipe_reg0 <= E_normal_pipe;
	// synopsys translate_off
	initial
		exp_is_ebiase_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_is_ebiase_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   exp_is_ebiase_pipe_reg0 <= exp_is_ebiase_pipe;
	// synopsys translate_off
	initial
		exp_is_ebiase_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_is_ebiase_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   exp_is_ebiase_pipe_reg1 <= exp_is_ebiase_pipe_reg0;
	// synopsys translate_off
	initial
		exp_is_ebiase_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_is_ebiase_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   exp_is_ebiase_pipe_reg2 <= exp_is_ebiase_pipe_reg1;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg0 <= input_is_infinity_pipe;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg1 <= input_is_infinity_pipe_reg0;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg10 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg10 <= input_is_infinity_pipe_reg9;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg11 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg11 <= input_is_infinity_pipe_reg10;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg12 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg12 <= input_is_infinity_pipe_reg11;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg13 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg13 <= input_is_infinity_pipe_reg12;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg14 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg14 <= input_is_infinity_pipe_reg13;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg15 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg15 <= input_is_infinity_pipe_reg14;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg16 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg16 <= input_is_infinity_pipe_reg15;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg17 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg17 <= input_is_infinity_pipe_reg16;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg2 <= input_is_infinity_pipe_reg1;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg3 <= input_is_infinity_pipe_reg2;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg4 <= input_is_infinity_pipe_reg3;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg5 <= input_is_infinity_pipe_reg4;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg6 <= input_is_infinity_pipe_reg5;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg7 <= input_is_infinity_pipe_reg6;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg8 <= input_is_infinity_pipe_reg7;
	// synopsys translate_off
	initial
		input_is_infinity_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_infinity_pipe_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_infinity_pipe_reg9 <= input_is_infinity_pipe_reg8;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg0 <= input_is_nan_pipe;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg1 <= input_is_nan_pipe_reg0;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg10 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg10 <= input_is_nan_pipe_reg9;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg11 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg11 <= input_is_nan_pipe_reg10;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg12 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg12 <= input_is_nan_pipe_reg11;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg13 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg13 <= input_is_nan_pipe_reg12;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg14 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg14 <= input_is_nan_pipe_reg13;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg15 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg15 <= input_is_nan_pipe_reg14;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg16 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg16 <= input_is_nan_pipe_reg15;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg17 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg17 <= input_is_nan_pipe_reg16;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg2 <= input_is_nan_pipe_reg1;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg3 <= input_is_nan_pipe_reg2;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg4 <= input_is_nan_pipe_reg3;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg5 <= input_is_nan_pipe_reg4;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg6 <= input_is_nan_pipe_reg5;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg7 <= input_is_nan_pipe_reg6;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg8 <= input_is_nan_pipe_reg7;
	// synopsys translate_off
	initial
		input_is_nan_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_nan_pipe_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_nan_pipe_reg9 <= input_is_nan_pipe_reg8;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg0 <= input_is_one_pipe;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg1 <= input_is_one_pipe_reg0;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg10 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg10 <= input_is_one_pipe_reg9;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg11 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg11 <= input_is_one_pipe_reg10;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg12 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg12 <= input_is_one_pipe_reg11;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg13 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg13 <= input_is_one_pipe_reg12;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg14 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg14 <= input_is_one_pipe_reg13;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg15 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg15 <= input_is_one_pipe_reg14;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg16 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg16 <= input_is_one_pipe_reg15;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg17 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg17 <= input_is_one_pipe_reg16;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg2 <= input_is_one_pipe_reg1;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg3 <= input_is_one_pipe_reg2;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg4 <= input_is_one_pipe_reg3;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg5 <= input_is_one_pipe_reg4;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg6 <= input_is_one_pipe_reg5;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg7 <= input_is_one_pipe_reg6;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg8 <= input_is_one_pipe_reg7;
	// synopsys translate_off
	initial
		input_is_one_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_one_pipe_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_one_pipe_reg9 <= input_is_one_pipe_reg8;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg0 <= input_is_zero_pipe;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg1 <= input_is_zero_pipe_reg0;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg10 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg10 <= input_is_zero_pipe_reg9;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg11 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg11 <= input_is_zero_pipe_reg10;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg12 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg12 <= input_is_zero_pipe_reg11;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg13 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg13 <= input_is_zero_pipe_reg12;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg14 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg14 <= input_is_zero_pipe_reg13;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg15 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg15 <= input_is_zero_pipe_reg14;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg16 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg16 <= input_is_zero_pipe_reg15;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg17 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg17 <= input_is_zero_pipe_reg16;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg2 <= input_is_zero_pipe_reg1;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg3 <= input_is_zero_pipe_reg2;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg4 <= input_is_zero_pipe_reg3;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg5 <= input_is_zero_pipe_reg4;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg6 <= input_is_zero_pipe_reg5;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg7 <= input_is_zero_pipe_reg6;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg8 <= input_is_zero_pipe_reg7;
	// synopsys translate_off
	initial
		input_is_zero_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_is_zero_pipe_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   input_is_zero_pipe_reg9 <= input_is_zero_pipe_reg8;
	// synopsys translate_off
	initial
		Log_normal_normd_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Log_normal_normd_pipe_reg0 <= 47'b0;
		else if  (clk_en == 1'b1)   Log_normal_normd_pipe_reg0 <= Log_normal_normd_pipe;
	// synopsys translate_off
	initial
		Log_normal_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Log_normal_reg0 <= 47'b0;
		else if  (clk_en == 1'b1)   Log_normal_reg0 <= Log_normal;
	// synopsys translate_off
	initial
		Log_small_normd_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Log_small_normd_pipe_reg0 <= 27'b0;
		else if  (clk_en == 1'b1)   Log_small_normd_pipe_reg0 <= Log_small_normd_pipe;
	// synopsys translate_off
	initial
		Log_small_normd_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Log_small_normd_pipe_reg1 <= 27'b0;
		else if  (clk_en == 1'b1)   Log_small_normd_pipe_reg1 <= Log_small_normd_pipe_reg0;
	// synopsys translate_off
	initial
		Lshiftval_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Lshiftval_reg0 <= 6'b0;
		else if  (clk_en == 1'b1)   Lshiftval_reg0 <= Lshiftval;
	// synopsys translate_off
	initial
		Lshiftval_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Lshiftval_reg1 <= 6'b0;
		else if  (clk_en == 1'b1)   Lshiftval_reg1 <= Lshiftval_reg0;
	// synopsys translate_off
	initial
		Lshiftval_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Lshiftval_reg2 <= 6'b0;
		else if  (clk_en == 1'b1)   Lshiftval_reg2 <= Lshiftval_reg1;
	// synopsys translate_off
	initial
		Lshiftval_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Lshiftval_reg3 <= 6'b0;
		else if  (clk_en == 1'b1)   Lshiftval_reg3 <= Lshiftval_reg2;
	// synopsys translate_off
	initial
		lzo_pipe1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg0 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg0 <= lzo_pipe1;
	// synopsys translate_off
	initial
		lzo_pipe1_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg1 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg1 <= lzo_pipe1_reg0;
	// synopsys translate_off
	initial
		lzo_pipe1_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg2 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg2 <= lzo_pipe1_reg1;
	// synopsys translate_off
	initial
		lzo_pipe1_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg3 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg3 <= lzo_pipe1_reg2;
	// synopsys translate_off
	initial
		lzo_pipe1_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg4 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg4 <= lzo_pipe1_reg3;
	// synopsys translate_off
	initial
		lzo_pipe1_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg5 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg5 <= lzo_pipe1_reg4;
	// synopsys translate_off
	initial
		lzo_pipe1_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg6 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg6 <= lzo_pipe1_reg5;
	// synopsys translate_off
	initial
		lzo_pipe1_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg7 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg7 <= lzo_pipe1_reg6;
	// synopsys translate_off
	initial
		lzo_pipe1_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg8 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg8 <= lzo_pipe1_reg7;
	// synopsys translate_off
	initial
		lzo_pipe1_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_pipe1_reg9 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_pipe1_reg9 <= lzo_pipe1_reg8;
	// synopsys translate_off
	initial
		lzo_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg0 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg0 <= lzo;
	// synopsys translate_off
	initial
		lzo_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg1 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg1 <= lzo_reg0;
	// synopsys translate_off
	initial
		lzo_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg2 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg2 <= lzo_reg1;
	// synopsys translate_off
	initial
		lzo_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg3 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg3 <= lzo_reg2;
	// synopsys translate_off
	initial
		lzo_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg4 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg4 <= lzo_reg3;
	// synopsys translate_off
	initial
		lzo_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg5 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg5 <= lzo_reg4;
	// synopsys translate_off
	initial
		lzo_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg6 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg6 <= lzo_reg5;
	// synopsys translate_off
	initial
		lzo_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) lzo_reg7 <= 5'b0;
		else if  (clk_en == 1'b1)   lzo_reg7 <= lzo_reg6;
	// synopsys translate_off
	initial
		sign_data_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_data_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_data_reg0 <= sign_data;
	// synopsys translate_off
	initial
		sign_data_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_data_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_data_reg1 <= sign_data_reg0;
	// synopsys translate_off
	initial
		sign_data_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_data_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   sign_data_reg2 <= sign_data_reg1;
	// synopsys translate_off
	initial
		small_flag_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg0 <= small_flag_pipe;
	// synopsys translate_off
	initial
		small_flag_pipe_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg1 <= small_flag_pipe_reg0;
	// synopsys translate_off
	initial
		small_flag_pipe_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg2 <= small_flag_pipe_reg1;
	// synopsys translate_off
	initial
		small_flag_pipe_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg3 <= small_flag_pipe_reg2;
	// synopsys translate_off
	initial
		small_flag_pipe_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg4 <= small_flag_pipe_reg3;
	// synopsys translate_off
	initial
		small_flag_pipe_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg5 <= small_flag_pipe_reg4;
	// synopsys translate_off
	initial
		small_flag_pipe_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg6 <= small_flag_pipe_reg5;
	// synopsys translate_off
	initial
		small_flag_pipe_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg7 <= small_flag_pipe_reg6;
	// synopsys translate_off
	initial
		small_flag_pipe_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg8 <= small_flag_pipe_reg7;
	// synopsys translate_off
	initial
		small_flag_pipe_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) small_flag_pipe_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   small_flag_pipe_reg9 <= small_flag_pipe_reg8;
	// synopsys translate_off
	initial
		sR_pipe1_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg0 <= sR_pipe1;
	// synopsys translate_off
	initial
		sR_pipe1_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg1 <= sR_pipe1_reg0;
	// synopsys translate_off
	initial
		sR_pipe1_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg2 <= sR_pipe1_reg1;
	// synopsys translate_off
	initial
		sR_pipe1_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg3 <= sR_pipe1_reg2;
	// synopsys translate_off
	initial
		sR_pipe1_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg4 <= sR_pipe1_reg3;
	// synopsys translate_off
	initial
		sR_pipe1_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg5 <= sR_pipe1_reg4;
	// synopsys translate_off
	initial
		sR_pipe1_reg6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg6 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg6 <= sR_pipe1_reg5;
	// synopsys translate_off
	initial
		sR_pipe1_reg7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg7 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg7 <= sR_pipe1_reg6;
	// synopsys translate_off
	initial
		sR_pipe1_reg8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg8 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg8 <= sR_pipe1_reg7;
	// synopsys translate_off
	initial
		sR_pipe1_reg9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe1_reg9 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe1_reg9 <= sR_pipe1_reg8;
	// synopsys translate_off
	initial
		sR_pipe2_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg0 <= sR_pipe2;
	// synopsys translate_off
	initial
		sR_pipe2_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg1 <= sR_pipe2_reg0;
	// synopsys translate_off
	initial
		sR_pipe2_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg2 <= sR_pipe2_reg1;
	// synopsys translate_off
	initial
		sR_pipe2_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg3 <= sR_pipe2_reg2;
	// synopsys translate_off
	initial
		sR_pipe2_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg4 <= sR_pipe2_reg3;
	// synopsys translate_off
	initial
		sR_pipe2_reg5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe2_reg5 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe2_reg5 <= sR_pipe2_reg4;
	// synopsys translate_off
	initial
		sR_pipe3_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe3_reg0 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe3_reg0 <= sR_pipe3;
	// synopsys translate_off
	initial
		sR_pipe3_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe3_reg1 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe3_reg1 <= sR_pipe3_reg0;
	// synopsys translate_off
	initial
		sR_pipe3_reg2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe3_reg2 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe3_reg2 <= sR_pipe3_reg1;
	// synopsys translate_off
	initial
		sR_pipe3_reg3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe3_reg3 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe3_reg3 <= sR_pipe3_reg2;
	// synopsys translate_off
	initial
		sR_pipe3_reg4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sR_pipe3_reg4 <= 1'b0;
		else if  (clk_en == 1'b1)   sR_pipe3_reg4 <= sR_pipe3_reg3;
	// synopsys translate_off
	initial
		Z2o2_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Z2o2_pipe_reg0 <= 14'b0;
		else if  (clk_en == 1'b1)   Z2o2_pipe_reg0 <= Z2o2_pipe;
	// synopsys translate_off
	initial
		Z2o2_small_s_pipe_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Z2o2_small_s_pipe_reg0 <= 14'b0;
		else if  (clk_en == 1'b1)   Z2o2_small_s_pipe_reg0 <= Z2o2_small_s_pipe;
	// synopsys translate_off
	initial
		Zfinal_reg0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Zfinal_reg0 <= 26'b0;
		else if  (clk_en == 1'b1)   Zfinal_reg0 <= Zfinal;
	// synopsys translate_off
	initial
		Zfinal_reg1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Zfinal_reg1 <= 26'b0;
		else if  (clk_en == 1'b1)   Zfinal_reg1 <= Zfinal_reg0;
	fplog_add_sub123   addsub1
	( 
	.add_sub(sR_pipe3),
	.clock(clock),
	.dataa(Z_small),
	.datab(Z2o2_small),
	.result(wire_addsub1_result));
	fplog_add_sub1234   addsub2
	( 
	.add_sub((~ sR_pipe3)),
	.clock(clock),
	.dataa(absELog2_pad),
	.datab(LogF_normal_pad),
	.result(wire_addsub2_result));
	fplog_mult123   mult1
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(absE),
	.datab(Log2),
	.result(wire_mult1_result));
	assign		wire_mux_result0a_dataout = ((((input_is_zero | input_is_infinity) | input_is_nan) | input_is_one) === 1'b1) ? {{8{((~ input_is_one) | input_is_nan)}}, input_is_nan, {22{1'b0}}} : EFR;
	assign
		absE = (({8{(~ sR_pipe2)}} & E0) | ({8{sR_pipe2}} & wire_sub2_result)),
		absELog2 = absELog2_pipe_reg2,
		absELog2_pad = {absELog2, {12{1'b0}}},
		absELog2_pipe = wire_mult1_result,
		absZ0 = absZ0_pipe_reg9,
		absZ0_pipe = (({12{(~ sR_pipe1)}} & Y0[11:0]) | ({12{sR_pipe1}} & wire_sub1_result)),
		absZ0s = wire_Lshiftsmall_result[31:20],
		absZ0s_pipe1 = absZ0s_reg0,
		absZ0s_pipe2 = absZ0s_pipe1_reg3,
		aclr = 1'b0,
		almostLog = almostLog_pipe_reg2,
		almostLog_pipe = wire_range_reduction_almostlog,
		clk_en = 1'b1,
		data_exp_is_ebiase = {((~ exp_data[7]) & data_exp_is_ebiase[6]), (exp_data[6] & data_exp_is_ebiase[5]), (exp_data[5] & data_exp_is_ebiase[4]), (exp_data[4] & data_exp_is_ebiase[3]), (exp_data[3] & data_exp_is_ebiase[2]), (exp_data[2] & data_exp_is_ebiase[1]), (exp_data[1] & data_exp_is_ebiase[0]), exp_data[0]},
		doRR = Lshiftval[5],
		doRR_pipe = doRR_reg1,
		E0 = E0_pipe_reg9,
		E0_is_zero = {((~ E0[7]) & E0_is_zero[6]), ((~ E0[6]) & E0_is_zero[5]), ((~ E0[5]) & E0_is_zero[4]), ((~ E0[4]) & E0_is_zero[3]), ((~ E0[3]) & E0_is_zero[2]), ((~ E0[2]) & E0_is_zero[1]), ((~ E0[1]) & E0_is_zero[0]), (~ E0[0])},
		E0_pipe = wire_exp_biase_sub_result,
		E0_sub = {(Log_small[28] | Log_small[27]), (Log_small[28] | (~ Log_small[27]))},
		E0offset = 8'b10000110,
		E_normal = E_normal_pipe_reg0,
		E_normal_pipe = wire_lzc_norm_E_q[4:0],
		E_small = wire_sub5_result,
		EFR = wire_add2_result,
		ER = (({8{(~ small_flag)}} & wire_sub6_result) | ({8{small_flag}} & E_small)),
		exp_all_one = wire_exp_nan_result,
		exp_all_zero = wire_exp_zero_result,
		exp_biase = {7'b0111111, (~ First_bit)},
		exp_data = data[30:23],
		exp_is_ebiase = exp_is_ebiase_pipe_reg2,
		exp_is_ebiase_pipe = data_exp_is_ebiase[7],
		First_bit = man_data[22],
		input_is_infinity = input_is_infinity_pipe_reg17,
		input_is_infinity_pipe = (exp_all_one & (~ man_all_zero)),
		input_is_nan = input_is_nan_pipe_reg17,
		input_is_nan_pipe = ((exp_all_one & man_not_zero) | sign_data_pipe),
		input_is_one = input_is_one_pipe_reg17,
		input_is_one_pipe = (exp_is_ebiase & (~ man_all_zero)),
		input_is_zero = input_is_zero_pipe_reg17,
		input_is_zero_pipe = (~ exp_all_zero),
		Log1p_normal = wire_sub4_result,
		Log2 = 27'b101100010111001000011000000,
		Log_g = (({27{(~ small_flag)}} & Log_normal_normd[45:19]) | ({27{small_flag}} & {Log_small_normd[25:0], 1'b0})),
		Log_normal = wire_addsub2_result,
		Log_normal_normd = Log_normal_normd_pipe_reg0,
		Log_normal_normd_pipe = wire_lzc_norm_L_result[63:17],
		Log_normal_pipe = Log_normal_reg0,
		Log_small = wire_addsub1_result,
		Log_small1 = (({27{(~ Log_small[27])}} & Log_small[26:0]) | ({27{Log_small[27]}} & Log_small[27:1])),
		Log_small2 = (({27{(~ Log_small[28])}} & Log_small1) | ({27{Log_small[28]}} & Log_small[28:2])),
		Log_small_normd = Log_small_normd_pipe_reg1,
		Log_small_normd_pipe = Log_small2,
		LogF_normal = wire_add1_result,
		LogF_normal_pad = {{8{LogF_normal[38]}}, LogF_normal},
		Lshiftval = wire_sub3_result,
		lzo = lzo_pipe1_reg9,
		lzo_pipe1 = (~ wire_lzoc_q),
		lzo_pipe2 = lzo_reg7,
		man_above_half = {1'b0, 1'b1, man_data},
		man_all_zero = wire_man_inf_result,
		man_below_half = {1'b1, man_data, 1'b0},
		man_data = data[22:0],
		man_not_zero = wire_man_nan_result,
		nan = input_is_nan,
		pfinal_s = 5'b01101,
		result = {(((sR | input_is_zero) | input_is_nan) & (~ input_is_one)), wire_mux_result0a_dataout},
		round = (Log_g[3] & (Log_g[4] | sticky[2])),
		Rshiftval = Lshiftval_reg3,
		sign_data = data[31],
		sign_data_pipe = sign_data_reg2,
		small_flag = small_flag_pipe_reg9,
		small_flag_pipe = ((~ doRR) & E0_is_zero[7]),
		squarerIn = (({13{(~ doRR_pipe)}} & squarerIn0) | ({13{doRR_pipe}} & squarerIn1)),
		squarerIn0 = {absZ0s_pipe1, 1'b0},
		squarerIn1 = Zfinal[25:13],
		sR = sR_pipe3_reg4,
		sR_pipe1 = (~ (data_exp_is_ebiase[7] | exp_data[7])),
		sR_pipe2 = sR_pipe1_reg9,
		sR_pipe3 = sR_pipe2_reg5,
		sticky = {(Log_g[2] | sticky[1]), (Log_g[1] | sticky[0]), Log_g[0]},
		Y0 = (({25{(~ First_bit)}} & man_below_half) | ({25{First_bit}} & man_above_half)),
		Z2o2 = Z2o2_pipe_reg0,
		Z2o2_pipe = wire_squarer_result,
		Z2o2_small = {{13{1'b0}}, Z2o2_small_s, {2{1'b0}}},
		Z2o2_small_s = Z2o2_small_s_pipe_reg0,
		Z2o2_small_s_pipe = wire_Rshiftsmall_result[31:18],
		Z_small = {absZ0s_pipe2, {17{1'b0}}},
		zero = (input_is_one & (~ ((input_is_nan | input_is_zero) | input_is_infinity))),
		Zfinal = wire_range_reduction_z,
		Zfinal_pipe = Zfinal_reg1;
endmodule //fplog_altfp_log
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module fplog (
	clock,
	data,
	nan,
	result,
	zero)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[31:0]  data;
	output	  nan;
	output	[31:0]  result;
	output	  zero;

	wire  sub_wire0;
	wire [31:0] sub_wire1;
	wire  sub_wire2;
	wire  nan = sub_wire0;
	wire [31:0] result = sub_wire1[31:0];
	wire  zero = sub_wire2;

	fplog_altfp_log	fplog_altfp_log_component (
				.clock (clock),
				.data (data),
				.nan (sub_wire0),
				.result (sub_wire1),
				.zero (sub_wire2));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_HINT STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altfp_log"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "21"
// Retrieval info: CONSTANT: WIDTH_EXP NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_MAN NUMERIC "23"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: USED_PORT: data 0 0 32 0 INPUT NODEFVAL "data[31..0]"
// Retrieval info: CONNECT: @data 0 0 32 0 data 0 0 32 0
// Retrieval info: USED_PORT: nan 0 0 0 0 OUTPUT NODEFVAL "nan"
// Retrieval info: CONNECT: nan 0 0 0 0 @nan 0 0 0 0
// Retrieval info: USED_PORT: result 0 0 32 0 OUTPUT NODEFVAL "result[31..0]"
// Retrieval info: CONNECT: result 0 0 32 0 @result 0 0 32 0
// Retrieval info: USED_PORT: zero 0 0 0 0 OUTPUT NODEFVAL "zero"
// Retrieval info: CONNECT: zero 0 0 0 0 @zero 0 0 0 0
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog.vhd TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog.qip TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog.bsf TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog_inst.vhd TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog.inc TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fplog.cmp TRUE TRUE
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX NUMERIC "1"
// Retrieval info: LIB_FILE: lpm
